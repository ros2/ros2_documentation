# Archivo de traducción al español para la documentación de ROS 2.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# Cristian Chitiva <cychitivav@unal.edu.co>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-06 22:03+0000\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Tutorials.rst:4 ea15e8ebcd294800b4ff77c8f22f3043
msgid "Tutorials"
msgstr ""

#: ../../source/Tutorials.rst:6 f0d22a8303424db0a0a6df0515728549
msgid ""
"The tutorials are a collection of step-by-step instructions meant to "
"steadily build skills in ROS 2."
msgstr ""

#: ../../source/Tutorials.rst:8 5386f9b1c79c4828b6132fb17b8775ee
msgid ""
"The best way to approach the tutorials is to walk through them for the "
"first time in order, as they build off of each other and are not meant to"
" be comprehensive documentation."
msgstr ""

#: ../../source/Tutorials.rst:10 d6eb255fd0bc445b85dc4cf3ede4d609
msgid ""
"For quick solutions to more specific questions, see the :doc:`How-To-"
"Guides`."
msgstr ""

#: ../../source/Tutorials.rst:23
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:219
#: 5d0092eb8af54f8f885bce3737cbbf58 d0ac33db9e07457a92ca1bbecc00032f
msgid "Examples"
msgstr ""

#: ../../source/Tutorials.rst:25 b4725d5cabf34c3ba9368d841cad9a4e
msgid "`Python and C++ minimal examples <https://github.com/ros2/examples>`__."
msgstr ""

#: ../../source/Tutorials/Advanced.rst:2 bb903832c9d647dfb52daa3839e93c18
msgid "Advanced"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:7
#: 84daf59132034e2a87bfd537981046cb
msgid "Implementing a custom memory allocator"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:9
#: 24f3fccbec274308aece6cb45645083e
msgid ""
"**Goal:** This tutorial will show how to use a custom memory allocator "
"when writing ROS 2 C++ code."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:11
#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:11
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:11
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:8
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:12
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:12
#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:12
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:6
#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:12
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:13
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:12
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:6
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:6
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:6
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:6
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:11
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:6
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:6
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:11
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:10
#: 0a43634301de460f8f6394ad33cf2a7a 13b1167ff4254185941de6cc5555dd2e
#: 1484a1dc955845d89d8a86d30ea51eae 177f660e950d43ac9a6bd72a9bc663eb
#: 186a8b6377ca4ac184dfc786464bb98a 50dbe05dcb3b4a67a5f6cb8f34d96fe6
#: 68f0ebfec7394db1a305449eead437d5 6fcf3d23bf4b4a06b54733c5b56f000d
#: 752b425d7b5b46b2b94657655f2c5e42 8cf368e665a1435881b556ccdefe69ea
#: 93a638610d554fe793a929328f871010 96efee7c7ebe4dfdaa8b7561c73a8406
#: 977abfa106e94c0387b1b8efc5cece39 9fbf9ce90d1c4daeaa772c78e972fc0f
#: aa80157634664b62af7b759e172bf3bd b7d4f13652194dc1adf75f03a1e30e3e
#: d62077a80f924470b995ac4f6c5ae7fb e27a2ad1f1414145a3f510d5e91d6807
#: eb4fd8b3578d47178e3f51a309ea4f20 f13e9090295a4dc294509cb9efae9ae1
#: f7198c9dc3994bf09d0ab3f35fd7fae8 fcc6085489164921934e7c5d9bee1671
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:13
#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:13
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:13
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:14
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:14
#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:14
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:8
#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:14
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:14
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:8
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:19
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:14
#: ../../source/Tutorials/Intermediate/Composition.rst:17
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:15
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:14
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:14
#: 05059678b1be466b9e680d3d1e87fd86 07f864e9509d49fa9ebee0bbb264be40
#: 1032fc4add024d7bb5ac2b26d81a0c6e 135733ceed57434ea32f0086b7f0bbc6
#: 350f923cbffd48d89de39048a966187f 3c989b40f53e47a0977570df46197c76
#: 4bc5a0c71001477788b3549b2a23001e 5d70d83413e140efaae120e25f105a27
#: 5e798aad8bab4789bc0a60f04326ab88 6265cc5e06a04ed2b42136972c3377ee
#: 784492290ec246ad848cf0465154e5c8 7e2c61db8f104c8bbbcee733c47fa717
#: 8780264f6d5849048ed0b5bde5ccfe19 8bbcb870febb4cf58ad9feb75a56b6cd
#: 9c03322a7efb4ccfb3b99bd0cc008c2c 9c05796364374bb6b3f8899edc64469a
#: a0c7dbb7039b42618bc0c97ca49c73d5 ab9259787cd142cf81a0be0b6b570610
#: af4e5425574e4080b2df8f4c91f6478d b28f2f20fbf940f6b77a8051c668f43b
#: bc10162ba11d4efd8518b4292fc66523 c9ddd8ee10344c8888fb5bbcf2c46f2c
#: cea3e58cc41b464aadd4f44627433a82 da8a34479b854ce18ee6aba20232da4a
#: efa596ea1a6045c98665993a3237b9b0 f40d72a45e3c4a16a1aa976015a74464
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:17
#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:17
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:17
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:14
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:16
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:13
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:16
#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:11
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:11
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:11
#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:11
#: ../../source/Tutorials/Intermediate/Composition.rst:11
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:17
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:17
#: ../../source/Tutorials/Intermediate/Rosdep.rst:10
#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:12
#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:11
#: 0262366699724b9b9ccde27bf0544b05 056377d4aed745c6ad4fa7ca6b8fe87a
#: 3ddc88fac35b4522a80d3ad9f9915d72 3e8bd9e2ff3a4d868705651df15318b4
#: 3ecad6ddad1f4172b14591a033211cb2 3fe376e7a82c4ef08a2c1d70c15e8781
#: 4ea4a7e60298485894119e1ddba4d91a 51a4fec089da449e9ae906fdd66c89ab
#: a516028b78a54842bbb07a02c66318c7 a7b97054029f468ab1e9109520723b30
#: b25fdd32301144cca48a2b2cbe0a75e3 cadc7733a51542d7a20f49532d1d99e7
#: cb70120f460048cbafe7929551324fd1 ccd0ace6c23c484c8e16c20bbb44dbd6
#: dc08b27237c34febb20832d821ec9150 ea4bf35134314f9ca491f19983c2918e
#: f0e9ea93573e4d6eade1841babccb349
msgid "Table of Contents"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:19
#: a12fcb1ea8a04266911b36a884595696
msgid ""
"This tutorial will teach you how to integrate a custom allocator for "
"publishers and subscribers so that the default heap allocator is never "
"called while your ROS nodes are executing. The code for this tutorial is "
"available `here "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/topics/allocator_tutorial.cpp>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:23
#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:20
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:20
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:21
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:21
#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:22
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:16
#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:22
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:23
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:22
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:22
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:15
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:15
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:15
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:15
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:20
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:15
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:15
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:19
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:21
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:25
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:19
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:22
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:21
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:21
#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:14
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:14
#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:14
#: ../../source/Tutorials/Intermediate/Composition.rst:20
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:21
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:29
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:28
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:20
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:22
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:20
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:19
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:21
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:21
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:21
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:21
#: 087e480441504de0963b6e6e0cc74d97 0aaaa93ff74649298b5f0c08886afb32
#: 0b182fa2cb7946a6b4fcc732fe1d6c7e 0f49243299dc4a8f8fd0ff734e09aff1
#: 14df48cfe63843d296c0dbd276cd28ed 166007d9469b47eb9a211bcbd26b9983
#: 17b6e309c71148b7a760850be3727bc7 1b4237db71574ae9b6087dec2dbb8e4e
#: 202d2b3704324a70a80982c0d08afaad 22d1e34094254d6685d0c174b0777479
#: 2382646421094932b2fdd0f135fc7edb 28e6752aeaee4a8dbb181a73b3a5f129
#: 28fc9be8089f4214a0bce4a54f5af5af 2900c39ce3b340a48c48a36ee98bfd82
#: 2a7d2107f6904d8ebe82ff1d965612d6 2d81a8b1098148bcb4a5ce9064badad0
#: 2fbaa830d71b41d3bfde1650537b1908 30630bfa6c074fe39a44733820984632
#: 37118c7ecfa04d688bc805296108b240 394a148644404b5083f8fb0c7219dd15
#: 3f3a53a171d44ffc8332d375a11d4e1e 3f583eeeb09c43b18bd7960a11bbb3c8
#: 435cfed04c0744859a3d55c3918e290c 45ddc8c178a64e30830a279d9ccc8c6c
#: 48dcecf726f147cbaa4f51663c8a9a8d 4b404bb0829f4df8b663c1ee5932d56e
#: 50a81bc951e34db88a5253fc04d56844 53b7e70910b642df911f599ef69d86fa
#: 564952f61d524699b9c78cb5e0b5951d 58bd9f1cbaf44c2eb25c8bbb515d1f97
#: 5928265791c04cffb3e39e220f4e2cd9 5e02ece10dd54c12a6a09108f55ff95f
#: 5ef3580769214fa0aef51c31e9a53a89 5fee3c98d1ae4a04ac5b4769198bcca6
#: 6333b9e7aaf3455bb05c32680e8d5b0e 65795781b0c44a02bf77182676682e5d
#: 73d6513cd0414012bfa773ac8f8d7bcc 7791864b7f724ff6b353009a5d0c0f3e
#: 7b7aa22c1d114aa4bdd581ee33c05791 7b9b43f0063d45239b29ad72ae91a669
#: 7be066b530fa4c11ac33070995e7c55b 867401f8d8f64031946fb893352dd369
#: 88cec765f993401d9e7ea22edb039497 891f780f1b0d42029bc4597fb666871f
#: 8aef3c2796534ba1b2d70a66e0f771e5 8dc977e9d1044ef9bb12222857e4c832
#: 8ff7c3ea9fe6472ca788089f8f196eec 935fe9bea5e7475db28657fe25c59624
#: 998c3b66089744f28b9cfefbb727051d 9eec167e818944f8bf4a249bb39886c8
#: 9f51b4305170486d8aedca9222b64c2e a55ccfd6c21b42f6a0f0286a191ea7a4
#: a6b825d7751e41359ac96c4c45ca27c6 b27bdfa1335c400aabccf89cdd78afe3
#: b829fea4b6934f25ba0b04f73571ca36 c4915147adeb457abe4cb56d529dc2bc
#: c51cd0e4bf21474f8622eb64263cef44 c6de9cc1c5df4ed8842a61431e4ec475
#: c7b62dd60be349cb84ae1c41e25576f1 cd77a0e889a74282a57a539de120b782
#: d0ec536d9b2b43bc9a4604a20f3d9bcf d1ef27586fa0429a90d7c38bb4cd0a68
#: d740cadd970342d290807aa19926a394 d8720f182df04db59fb53010156b16ca
#: ddd3584563254fee802152c961fd6e5e e04639bbcfb04660a1eab8c29d808faa
#: e5081742744749808c58d210bc353182 e8719b765cdd4e558745472d181f6543
#: ee6de4fc57b146818f5622afe54d1206 f1e593f78f50427889432d9068cbf108
#: faacbfd473004b74886bbb5f2a3fb6d0
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:25
#: 3af1c52b357c4b69984e685d7524a5df
msgid ""
"Suppose you want to write real-time safe code, and you've heard about the"
" many dangers of calling \"new\" during the real-time critical section, "
"because the default heap allocator on most platforms is nondeterministic."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:27
#: c0abf417614e4404879054aaaa82f28f
msgid ""
"By default, many C++ standard library structures will implicitly allocate"
" memory as they grow, such as ``std::vector``. However, these data "
"structures also accept an \"Allocator\" template argument. If you specify"
" a custom allocator to one of these data structures, it will use that "
"allocator for you instead of the system allocator to grow or shrink the "
"data structure. Your custom allocator could have a pool of memory "
"preallocated on the stack, which might be better suited to real-time "
"applications."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:29
#: 18045eddc4a340c188e6bf996b8be3e1
msgid ""
"In the ROS 2 C++ client library (rclcpp), we are following a similar "
"philosophy to the C++ standard library. Publishers, subscribers, and the "
"Executor accept an Allocator template parameter that controls allocations"
" made by that entity during execution."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:32
#: 672d83c3e98a4143ad8271c05166f7c3
msgid "Writing an allocator"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:34
#: d4759d21e2fd4c7d8a82fa8309471c1b
msgid ""
"To write an allocator compatible with ROS 2's allocator interface, your "
"allocator must be compatible with the C++ standard library allocator "
"interface."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:36
#: f048f540c5af4e228bc35898139a05b2
msgid ""
"The C++11 library provides something called ``allocator_traits``. The "
"C++11 standard specifies that a custom allocator only needs to fulfil a "
"minimal set of requirements to be used to allocate and deallocate memory "
"in a standard way. ``allocator_traits`` is a generic structure that fills"
" out other qualities of an allocator based on an allocator written with "
"the minimal requirements."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:38
#: f6275712041a43feb743e2dbea7853db
msgid ""
"For example, the following declaration for a custom allocator would "
"satisfy ``allocator_traits`` (of course, you would still need to "
"implement the declared functions in this struct):"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:57
#: 90ca428616cd404a8c15ec4f1fb6539a
msgid ""
"You could then access other functions and members of the allocator filled"
" in by ``allocator_traits`` like so: "
"``std::allocator_traits<custom_allocator<T>>::construct(...)``"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:59
#: 97da318e60fc486590f780900f278e59
msgid ""
"To learn about the full capabilities of ``allocator_traits``, see "
"https://en.cppreference.com/w/cpp/memory/allocator_traits ."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:61
#: 626aa937d57e4cdfb203580af4e567b9
msgid ""
"However, some compilers that only have partial C++11 support, such as GCC"
" 4.8, still require allocators to implement a lot of boilerplate code to "
"work with standard library structures such as vectors and strings, "
"because these structures do not use ``allocator_traits`` internally. "
"Therefore, if you're using a compiler with partial C++11 support, your "
"allocator will need to look more like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:111
#: a1e25b812280456793d4e9e5f1744c96
msgid "Writing an example main"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:113
#: 6078c01ef3d54fb095a44523204ee0ba
msgid ""
"Once you have written a valid C++ allocator, you must pass it as a shared"
" pointer to your publisher, subscriber, and executor."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:137
#: a9530f988ad344c083211a66d7d3157c
msgid ""
"You will also need to use your allocator to allocate any messages that "
"you pass along the execution codepath."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:143
#: 1b268539d5da42bda65b53574de6b7a2
msgid ""
"Once you've instantiated the node and added the executor to the node, "
"it's time to spin:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:157
#: d5e45367d8f64380ac41c8c9d5ccf34f
msgid "Passing an allocator to the intra-process pipeline"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:159
#: a3c072123917414e87fbe7625a57a829
msgid ""
"Even though we instantiated a publisher and subscriber in the same "
"process, we aren't using the intra-process pipeline yet."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:161
#: 0f084127c4e240518dcad57d8323fcc2
msgid ""
"The IntraProcessManager is a class that is usually hidden from the user, "
"but in order to pass a custom allocator to it we need to expose it by "
"getting it from the rclcpp Context. The IntraProcessManager makes use of "
"several standard library structures, so without a custom allocator it "
"will call the default new."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:171
#: 93eb4f02c7fd4f8982c3b45c892cf6ba
msgid ""
"Make sure to instantiate publishers and subscribers AFTER constructing "
"the node in this way."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:174
#: a1edda4f6c9d40d3b6d8638b9aa08c67
msgid "Testing and verifying the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:176
#: 95627dff3346417a9220917c58b519a7
msgid "How do you know that your custom allocator is actually getting called?"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:178
#: 397340c2939d4637aed37553ec84fef9
msgid ""
"The obvious thing to do would be to count the calls made to your custom "
"allocator's ``allocate`` and ``deallocate`` functions and compare that to"
" the calls to ``new`` and ``delete``."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:180
#: 56795c49301b4a8283693dddc67c4b1f
msgid "Adding counting to the custom allocator is easy:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:196
#: 4339b997da1b43cfad6b4b67ff99c4da
msgid "You can also override the global new and delete operators:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:220
#: bae053c8b72149389468336ae41a4f70
msgid ""
"where the variables we are incrementing are just global static integers, "
"and ``is_running`` is a global static boolean that gets toggled right "
"before the call to ``spin``."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:222
#: 6c069b7dcbea4134b40f61e1491d7da3
msgid ""
"The `example executable "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/topics/allocator_tutorial.cpp>`__"
" prints the value of the variables. To run the example executable, use:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:228
#: b7fe0eeb8fa348a989b87e7a4ca67a94
msgid "or, to run the example with the intra-process pipeline on:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:234
#: 1273708118d242dab81b2a0b11f90cf6
msgid "You should get numbers like:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:243
#: 8f07b1351a4a43e6bbe6544dc579a767
msgid ""
"We've caught about 2/3 of the allocations/deallocations that happen on "
"the execution path, but where do the remaining 1/3 come from?"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:245
#: 5a2ed7b5b007467dac8d733391b5b377
msgid ""
"As a matter of fact, these allocations/deallocations originate in the "
"underlying DDS implementation used in this example."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:247
#: 3688d6a2c02a4f1ba9c0008db6971f31
msgid ""
"Proving this is out of the scope of this tutorial, but you can check out "
"the test for the allocation path that gets run as part of the ROS 2 "
"continuous integration testing, which backtraces through the code and "
"figures out whether certain function calls originate in the rmw "
"implementation or in a DDS implementation:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:249
#: 9690aa934f224eaa80a7371a70b50c3a
msgid "https://github.com/ros2/realtime_support/blob/{REPOS_FILE_BRANCH}/tlsf_cpp/test/test_tlsf.cpp#L41"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:251
#: 6e9e569453c549599b2cd99dbf16ab8a
msgid ""
"Note that this test is not using the custom allocator we just created, "
"but the TLSF allocator (see below)."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:254
#: a980a84e50394380bf9b863433c0eaae
msgid "The TLSF allocator"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:256
#: ec956eb95b8c459cb9736e2227dfe8ed
msgid ""
"ROS 2 offers support for the TLSF (Two Level Segregate Fit) allocator, "
"which was designed to meet real-time requirements:"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:258
#: 5339fa56fc5345a3a806420dda4fa9a7
msgid "https://github.com/ros2/realtime_support/tree/{REPOS_FILE_BRANCH}/tlsf_cpp"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:260
#: 8f8f6ffe2c9144dd9960da16a18faf49
msgid "For more information about TLSF, see http://www.gii.upv.es/tlsf/"
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:262
#: c9edcde4115347249068cc99538f48b5
msgid "Note that the TLSF allocator is licensed under a dual-GPL/LGPL license."
msgstr ""

#: ../../source/Tutorials/Advanced/Allocator-Template-Tutorial.rst:264
#: d446bef0641e49cc932d4424ec557ae2
msgid ""
"A full working example using the TLSF allocator is here: "
"https://github.com/ros2/realtime_support/blob/{REPOS_FILE_BRANCH}/tlsf_cpp/example/allocator_example.cpp"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:7
#: e501f8745e93452495ac1cf578a4f0f1
msgid ""
"Using Fast DDS Discovery Server as discovery protocol [community-"
"contributed]"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:9
#: 6d6f58af736c4625a626f6d7a6aef745
msgid ""
"**Goal:** This tutorial will show how to launch ROS 2 Nodes using the "
"**Fast DDS Discovery Server** discovery protocol."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:22
#: 0163ca1653954fc68c59aa500b02abaa
msgid ""
"Starting from ROS 2 Eloquent Elusor, the **Fast DDS Discovery Server** "
"protocol is a feature that offers a centralized dynamic discovery "
"mechanism, as opposed to the distributed mechanism used in DDS by "
"default. This tutorial explains how to run some ROS 2 examples using the "
"Fast DDS Discovery Server feature as discovery communication."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:25
#: aff74781269a4341a08e650b9375d066
msgid ""
"In order to get more information about the available discovery "
"configuration, please check the `following documentation <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/discovery.html>`_ or "
"read the `Fast DDS Discovery Server specific documentation <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/discovery_server.html"
"#discovery-server>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:27
#: 3ac3481f681b47719d422274ef92f823
msgid ""
"The `Simple Discovery Protocol <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/simple.html>`__ is the "
"standard protocol defined in the `DDS standard <https://www.omg.org/omg-"
"dds-portal/>`__. However, it has known disadvantages in some scenarios."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:30
#: feb461716a004387abee7e77451ea0f0
msgid ""
"It does not **Scale** efficiently, as the number of exchanged packets "
"increases significantly as new nodes are added."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:31
#: cd8fdd4d0baa469eb86579649360dff5
msgid ""
"It requires **multicasting** capabilities that may not work reliably in "
"some scenarios, e.g. WiFi."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:33
#: 0e45242dc704407986e279540f402d85
msgid ""
"The **Fast DDS Discovery Server** provides a Client-Server Architecture "
"that allows nodes to connect with each other using an intermediate "
"server. Each node functions as a *discovery client*, sharing its info "
"with one or more *discovery servers* and receiving discovery information "
"from it. This reduces discovery-related network traffic and it does not "
"require multicasting capabilities."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:40
#: 3e0be19dddc64805aa3330a8410f9e83
msgid ""
"These discovery servers can be independent, duplicated or connected with "
"each other in order to create redundancy over the network and avoid "
"having a single point of failure."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:43
#: aab68a04cf3b44d08f499c235e541a97
msgid "Fast DDS Discovery Server v2"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:45
#: 80c7bb409a8f4287981c8196e3191e16
msgid ""
"The latest ROS 2 Foxy Fitzroy release (December 2020) included a new "
"version, version 2 of the Fast DDS Discovery Server. This version "
"includes a new filter feature that further reduces the number of "
"discovery messages sent. This version uses the topic of the different "
"nodes to decide if two nodes wish to communicate, or if they can be left "
"unmatched (i.e. not discovering each other). The following figure shows "
"the decrease in discovery messages:"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:53
#: 70708f33edfd439e94b7ce1d17987378
msgid ""
"This architecture reduces the number of messages sent between the server "
"and clients dramatically. In the following graph, the reduction in "
"network traffic over the discovery phase for the `RMF Clinic "
"demonstration <https://github.com/open-rmf/rmf_demos#Clinic-World>`__ is "
"shown:"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:60
#: a9764ace4928437c8cc54759f544117e
msgid ""
"In order to use this functionality, the discovery server can be "
"configured using the `XML configuration for Participants <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/discovery_server.html"
"#discovery-server>`__. It is also possible to configure the discovery "
"server using the ``fastdds`` `tool <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastddscli/cli/cli.html#discovery>`__ and"
" an `environment variable <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/env_vars/env_vars.html>`__, which"
" is the approach used in this tutorial. For a more detailed explanation "
"about the configuration of the discovery server, visit `the Fast DDS "
"Discovery Server documentation <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/discovery_server.html"
"#discovery-server>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:66
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:34
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:28
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:31
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:28
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:21
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:23
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:24
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:23
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:22
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:30
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:24
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:22
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:31
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:37
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:38
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:31
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:30
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:36
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:43
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:30
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:32
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:36
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:31
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:33
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:34
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:118
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:30
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:28
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:29
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:35
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:28
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:28
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:30
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:30
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:30
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:29
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:23
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:30
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:20
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:21
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:31
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:29
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:30
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:26
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:33
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:27
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:27
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:28
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:28
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:34
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:31
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:28
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:28
#: 079f3697a6fb47bca34c1ff8267e5ad8 088fd743a8444621be2baf9fbb2295d2
#: 09a88f2f3dbf4800ad905a17853f234e 11bda7fd035a4272b9ce0b856e6bed64
#: 11fa931602434b28a21b9444e6be4393 135af45217c44f8089092e47b308ebb2
#: 1527594e318d4bf8bb6a13f129041849 1ac9ce02ac034ef599ae3566f44ed3e4
#: 1b0a05c2874041989f91fc8474936ed9 1e68267c29b74de6a322c5a2348e672e
#: 25970b600944473c82502015cdf13e76 2a858b940b884d6b8d02deed8349aa77
#: 45a17a642c6949538038b2dffc437c36 4b72ba290dc6446c9322b4612614010d
#: 4bb915cde42b42fba12935fef6474b17 50322d8b0c624f708ed7a0c3c257873f
#: 52837b852e054494a84db0ec5fdd14bc 538af536f91142949f5d4ce258569c6b
#: 56be6dee6bf141f59ea851be89a5107b 5ca2e369c54144708ddbfb170b928fcb
#: 62590473948a42d688dc43474e0aca29 6602c130e4514ceabf266a4b96068bfe
#: 66a05589c2b24544b7272767d916b09a 67a87d7a1e5548618d0ee12625f199cc
#: 68065b5e2f124356aac60d6640351d12 6dae463a83834874a324d73bcb4f3abb
#: 7b09fdaf60364c298551946307f67882 8a1d33e635064e4d825540b86a161823
#: 9c5e389af9e34b32a8aedf06aa470320 a404c7e614ed4d2ea02fb65f6c045ef6
#: a54ec76664bb43bfad860258dcd1195c a68daf07f6be42febb49a5645ccb021a
#: a8771a531e6843d793162f66950961a5 b129c911837a44d5bf973bcfd7870cbc
#: b156e732fa714aa0a5a456177ad16d4c b555e2efe17545faa4c0b4e281c3b600
#: ba12ad658b36470b9022d9922e6e2ecd ba47add6508e429a87960301ffadf86b
#: bbfe918f06404229b81ba640f5eb0685 c0bf21f4d9d646d38128dc0795b92616
#: c5b4f492db3748899329316d18a3884e caae5d78f691404f9af14843deda3d1c
#: cd8c2c7bc0c5412c83853b9590809d9d cdc7a07ddfe24db48b52727caa64e638
#: d0535e09c3094287a4c884fcca798c8e d9272a450cae4ccabfa449177a2f493b
#: e2b764506e2e4d46842ff8331b3a7f17 e36369368bbf4953b84d7bd4b9b6076c
#: e7e28ee1471c43288a1fdfa8fb49aeb2 e9e65152c21d4f16b12e1c5ab8992ed3
#: ec9b4a5df5a049a297d672934ad8ed5e eeb8a686f2d04a81a968cde449d1a914
#: f406377190a84618a7b594f5bf28a27e f5939c503e5a41e59a79027d46fab14b
#: fe42fa0b613d4465868ac88dffcc06b8
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:68
#: 1ebfcc61b24a45119bb3e51f6a0d58d6
msgid ""
"This tutorial assumes you have a ROS 2 Foxy (or newer) :doc:`installation"
" <../../../Installation>`. If your installation is using a ROS 2 version "
"lower than Foxy, you cannot use the ``fastdds`` tool. Thus, in order to "
"use the Discovery Server, you can update your repository to use a "
"different Fast DDS version, or configure the discovery server using the "
"`Fast DDS XML QoS configuration <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/discovery/discovery_server.html"
"#discovery-server>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:74
#: 9754afc7c96143d7a705d87eaae5816b
msgid "Run this tutorial"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:76
#: 61e8057537324190872f5c717ccbcff1
msgid ""
"The ``talker-listener`` ROS 2 demo creates a ``talker`` node that "
"publishes a \"hello world\" message every second, and a ``listener`` node"
" that listens to these messages."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:78
#: b05bff0257dd41e0a6b871ba358e91e8
msgid ""
"By :doc:`sourcing ROS 2 <../../Beginner-CLI-Tools/Configuring-"
"ROS2-Environment>` you will get access to the CLI tool ``fastdds``. This "
"tool gives access to the `discovery tool <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastddscli/cli/cli.html#discovery>`__, "
"which can be used to launch a discovery server. This server will manage "
"the discovery process for the nodes that connect to it."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:83
#: 6b54f1f788d646e5bb089cbf96e5e7c2
msgid ""
"Do not forget to :doc:`source ROS 2 <../../Beginner-CLI-Tools"
"/Configuring-ROS2-Environment>` in every new terminal opened."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:87
#: 76e19484b8c244fbbc4ecd24dfde69c2
msgid "Setup Discovery Server"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:89
#: 3430283d7b7f4706b4e576ff2c48aae7
msgid ""
"Start by launching a discovery server with id 0, port 11811 (default "
"port) and listening on all available interfaces."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:91
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:47
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:54
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:52
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:44
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:47
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:50
#: 2592c87088884a6e8c86efb648f43865 6090e10071c34f9088db27c072fa9cd1
#: 6e03a68e260b4ddd9126e19d881a04da 96419814e1ba446db8dfda61fd334833
#: 9bf099bd5b9c4f0197930f792f63f252 cc12540219f64fccba9c9350dc8c9df5
#: dbb053915f2d4b8083ef34bc9d1985f2
msgid "Open a new terminal and run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:99
#: 9cdae764f846464cb4e7c0337222a14b
msgid "Launch listener node"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:101
#: 2870072e8b294e2b9fceb8de3306bf17
msgid "Execute the listener demo, to listen to the ``/chatter`` topic."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:103
#: c56f6c7e5a614b42a3b37a9f8bd33408
msgid ""
"In a new terminal, set the environment variable ``ROS_DISCOVERY_SERVER`` "
"to the location of the discovery server. (Do not forget to source ROS 2 "
"in every new terminal)"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:110
#: 5ccb2fcf778e452f98416777440aa49c
msgid ""
"Launch the listener node. Use the argument ``--remap "
"__node:=listener_discovery_server`` to change the node's name for this "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:116
#: d0c75e5930ff4dfebb1511fd577c0a15
msgid ""
"This will create a ROS 2 node, that will automatically create a client "
"for the discovery server and connect to the server created previously to "
"perform discovery, rather than using multicast."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:120
#: cb07687ea81e416b89f41cc0fff71f52
msgid "Launch talker node"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:122
#: 0655feaa180e4c41b5298f776075edd7
msgid ""
"Open a new terminal and set the ``ROS_DISCOVERY_SERVER`` environment "
"variable as before so that the node starts a discovery client."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:129
#: b89eb8f94865419590fb4a515e9e4329
msgid ""
"You should now see the talker publishing \"hello world\" messages, and "
"the listener receiving these messages."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:133
#: 65f7be3222b94dfea1d00d9aa2a05245
msgid "Demonstrate Discovery Server execution"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:135
#: 386c43c42e454f28ac7aae6a8c47bd8a
msgid ""
"So far, there is no evidence that this example and the standard talker-"
"listener example are running differently. To clearly demonstrate this, "
"run another node that is not connected to the discovery server. Run a new"
" listener (listening in ``/chatter`` topic by default) in a new terminal "
"and check that it is not connected to the talker already running."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:143
#: 305c2fdc82a94e7ab1f75e25a55876a3
msgid ""
"The new listener node should not be receiving the \"hello world\" "
"messages."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:145
#: 1df582b64dd14fdb9fa5eda2f67441cd
msgid ""
"To finally verify that everything is running correctly, a new talker can "
"be created using the simple discovery protocol (the default DDS "
"distributed discovery mechanism) for discovery."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:151
#: a26c3a7f8e5b4e36b092eb82e83a904e
msgid ""
"Now you should see the ``simple_listener`` node receiving the \"hello "
"world\" messages from ``simple_talker`` but not the other messages from "
"``talker_discovery_server``."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:155
#: ad5de2a9acb04355aba2310c38a02921
msgid "Visualization tool ``rqt_graph``"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:157
#: 75bdbfc8702a49169919c27b12fd49d4
msgid ""
"The ``rqt_graph`` tool can be used to verify the nodes and structure of "
"this example. Remember, in order to use ``rqt_graph`` with the discovery "
"server protocol (i.e., to see the ``listener_discovery_server`` and "
"``talker_discovery_server`` nodes) the ``ROS_DISCOVERY_SERVER`` "
"environment variable must be set before launching it."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:162
#: d747fc7008fe4e738a1240d43ec2160a
msgid "Advance use cases"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:164
#: a21a43ac29db402eab8c61d140fd394b
msgid ""
"The following sections show different features of the discovery server "
"that allow you to build a robust discovery server over the network."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:167
#: 95e0e36013e44ce6b460fa1340e93158
msgid "Server Redundancy"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:169
#: b5ca4ad63c244ba88a3483a008ab2bfb
msgid ""
"By using ``fastdds`` tool, multiple discovery servers can be created. "
"Discovery clients (ROS nodes) can connect to as many servers as desired. "
"This allows to have a redundant network that will work even if some "
"servers or nodes shut down unexpectedly. The figure below shows a simple "
"architecture that provides server redundancy."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:177
#: c26dc4bccbd64bafbffa20d8465c164f
msgid ""
"In several terminals, run the following code to establish a communication"
" with redundant servers."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:187
#: 653cb61006534cba9b69585b003ee00f
msgid ""
"``--server-id N`` means server with id N. When referencing the servers "
"with ``ROS_DISCOVERY_SERVER``, server ``0`` must be in first place and "
"server ``1`` in second place."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:199
#: fafd6951456e4c8493268ca6ae119197
msgid ""
"Now, if one of these servers fails, there will still be discovery "
"capability available and nodes will still discover each other."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:203
#: 4f64432785624d35b3ef5e5be57c34aa
msgid "Backup Server"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:205
#: 707a1bf83d8b4d7c9e68cb26e0425d7c
msgid ""
"The Fast DDS Discovery Server allows creating a server with backup "
"functionality. This allows the server to restore the last state it saved "
"in case of a shutdown."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:211
#: 31e027bc38aa418abd8abf9d396611c0
msgid ""
"In different terminals, run the following code to establish a "
"communication with a backed-up server."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:227
#: ea29667feed24fdea5e3d81097a68d66
msgid ""
"Several backup files are created in the discovery server's working "
"directory (the directory it was launched in). The two ``SQLite`` files "
"and two ``json`` files contain the information required to start a new "
"server and restore the failed server's state in case of failure, avoiding"
" the need for the discovery process to happen again, and without losing "
"information."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:232
#: ebb34318ce4b4dd1a65064a558a61366
msgid "Discovery partitions"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:234
#: f425c0dd804d4313b7b033dcd0319717
msgid ""
"Communication with discovery servers can be split to create virtual "
"partitions in the discovery information. This means that two endpoints "
"will only know about each other if there is a shared discovery server or "
"a network of discovery servers between them. We are going to execute an "
"example with two independent servers. The following figure shows the "
"architecture."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:242
#: b789132b15404f72bfff1a947a898ad9
msgid ""
"With this schema ``Listener 1`` will be connected to ``Talker 1`` and "
"``Talker 2``, as they share ``Server 1``. ``Listener 2`` will connect "
"with ``Talker 1`` as they share ``Server 2``. But ``Listener 2`` will not"
" hear the messages from ``Talker 2`` because they do not share any "
"discovery server or discovery servers, including indirectly via "
"connections between redundant discovery servers."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:246
#: da6612127a094218ad53a7b3ec01b1de
msgid ""
"Run the first server listening on localhost with the default port of "
"11811."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:252
#: e79c2d3b33a54fef80f39f81ddae352a
msgid ""
"In another terminal run the second server listening on localhost using "
"another port, in this case port 11888."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:258
#: 5e295e4a79074dadb211c4c1b0075dfa
msgid ""
"Now, run each node in a different terminal. Use ``ROS_DISCOVERY_SERVER`` "
"environment variable to decide which server they are connected to. Be "
"aware that the `ids must match <https://fast-"
"dds.docs.eprosima.com/en/v2.1.0/fastdds/env_vars/env_vars.html>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:280
#: f6d65c6785f3448cbd6e51dd6c2dc002
msgid ""
"We should see how ``Listener 1`` is receiving messages from both talker "
"nodes, while ``Listener 2`` is in a different partition from ``Talker 2``"
" and so does not receive messages from it."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:284
#: 206441f1881945a1b303259d4539f1ed
msgid ""
"Once two endpoints (ROS nodes) have discovered each other, they do not "
"need the discovery server network between them to listen to each other's "
"messages."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:289
#: e58e17094a394c938708ce067288993b
msgid "ROS 2 Introspection"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:291
#: be21fca663a64c7cbdc48908e9389dc0
msgid ""
"The `ROS 2 Command Line Interface <https://github.com/ros2/ros2cli>`__ "
"supports several introspection tools to analyze the behavior of a ROS 2 "
"network. These tools (i.e. ``ros2 bag record``, ``ros2 topic list``, "
"etc.) are very helpful to understand a ROS 2 working network."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:294
#: faea76b322b749c286329ca38c0df15a
msgid ""
"Most of these tools use DDS simple discovery to exchange topic "
"information with every existing participant (using simple discovery, "
"every participant in the network is connected with each other). However, "
"the new Discovery Server v2 implements a network traffic reduction scheme"
" that limits the discovery data between participants that do not share a "
"topic. This means that nodes will only receive topic's discovery data if "
"it has a writer or a reader for that topic. As most ROS 2 CLIs need a "
"node in the network (some of them rely on a running ROS 2 daemon, and "
"some create their own nodes), using the Discovery Server v2 these nodes "
"will not have all the network information, and thus their functionality "
"will be limited."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:299
#: 914691fd74614e74b9af8290dbd612a9
msgid ""
"The Discovery Server v2 functionality allows every Participant to run as "
"a **Super Client**, a kind of **Client** that connects to a **Server**, "
"from which it receives all the available discovery information (instead "
"of just what it needs). In this sense, ROS 2 introspection tools can be "
"configured as **Super Client**, thus being able to discover every entity "
"that is using the Discovery Server protocol within the network."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:304
#: 57a81a3695034dbd9202d35a91d1dce3
msgid ""
"In this section we use the term *Participant* as a DDS entity. Each DDS "
"*Participant* corresponds with a ROS 2 *Context*, a ROS 2 abstraction "
"over DDS. `Nodes <ROS2Nodes>` are ROS 2 entities that rely on DDS "
"communication interfaces: ``DataWriter`` and ``DataReader``. Each "
"*Participant* can hold multiple ROS 2 Nodes. For further details about "
"these concepts, please visit the `Node to Participant mapping design "
"document "
"<http://design.ros2.org/articles/Node_to_Participant_mapping.html>`__"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:311
#: 8aa0469b8a6c41dea5c64088f35aff07
msgid "Daemon's related tools"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:313
#: d2157da84d054b74b28032885b7be13e
msgid ""
"The ROS 2 Daemon is used in several ROS 2 CLI introspection tools. It "
"creates its own Participant to add a ROS 2 Node to the network graph, in "
"order to receive all the data sent. In order for the ROS 2 CLI to work "
"when using Discovery Server mechanism, the ROS 2 Daemon needs to be "
"configured as **Super Client**. Therefore, this section is devoted to "
"explain how to use ROS 2 CLI with ROS 2 Daemon running as a **Super "
"Client**. This will allow the Daemon to discover the entire Node graph, "
"and to receive all topic and endpoint information. To do so, a Fast DDS "
"XML configuration file is used to configure the ROS 2 Daemon and CLI "
"tools."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:321
#: eb0bffc03ef54c6ca43d2350d5066fcf
msgid ""
"Below you can find a XML configuration profile, which for this tutorial "
"should be saved in the working directory as "
"```super_client_configuration_file.xml``` file. This file will configure "
"every new participant using it, as a **Super Client**."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:356
#: 0aaa7d35c5ef4c3ea049e2ca7d677f39
msgid ""
"Under the *RemoteServer* tag, the *prefix* attribute value should be "
"updated according to the server ID passed on the CLI (see `Fast DDS CLI "
"<https://fast-"
"dds.docs.eprosima.com/en/latest/fastddscli/cli/cli.html#discovery>`__). "
"The value specified in the shown XML snippet corresponds to an ID of "
"value 0."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:359
#: ef8c99b86ad4462bbd35b689fa7c7c23
msgid ""
"First of all, instantiate a Discovery Server using `Fast DDS CLI <https"
"://fast-"
"dds.docs.eprosima.com/en/latest/fastddscli/cli/cli.html#discovery>`__ "
"specifying an ID of value 0."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:365
#: 494384d17ba64d939c6a07f8f887bf23
msgid ""
"Run a talker and a listener that will discover each other through the "
"Server (notice that ``ROS_DISCOVERY_SERVER`` configuration is the same as"
" the one in ``super_client_configuration_file.xml``)."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:377
#: 832f870a294c41f89e767df8bd6b02cb
msgid ""
"Then, instantiate a ROS 2 Daemon using the **Super Client** configuration"
" (remember to source ROS 2 installation in every new terminal)."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:389
#: 6b08fbe3f13f4c8489e2b899f6b48d90
msgid ""
"We can also see the Node's Graph using the ROS 2 tool ``rqt_graph`` as "
"follows (you may need to press the refresh button):"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:398
#: d52e2bc76fb249f0b9d4cf9cff339d6c
msgid "No Daemon tools"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:400
#: 05c5783cdc3741929b0004b3fd613e9f
msgid ""
"Some ROS 2 CLI tools do not use the ROS 2 Daemon. In order for these "
"tools to connect with a Discovery Server and receive all the topics "
"information they need to be instantiated as a **Super Client** that "
"connects to the **Server**."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:403
#: 4be4e7227e074aa7b25a9e6b3e37d793
msgid ""
"Following the previous configuration, build a simple system with a talker"
" and a listener. First, run a **Server**:"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:410
#: 79dc2543fae84a44943980b81a0d4f33
msgid "Then, run the talker and listener in separate terminals:"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:422
#: 2dcd02c57c864bfc9cdf8cbd5b07a911
msgid ""
"Continue using the ROS 2 CLI with ``--no-daemon`` option with the new "
"configuration. New nodes will connect with the existing Server and will "
"know every topic. Exporting ``ROS_DISCOVERY_SERVER`` is not needed as the"
" ROS 2 tools will be configured through the "
"``FASTRTPS_DEFAULT_PROFILES_FILE``."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:434
#: 5e3012b6fe3f4224afdcbeb658521e6a
msgid "Compare Fast DDS Discovery Server with Simple Discovery Protocol"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:436
#: 2c7031aa4d3d42b5892dcdaa69cae5b0
msgid ""
"In order to compare executing nodes using the *Simple Discovery* Protocol"
" (the default DDS mechanism for distributed discovery) or the *Discovery "
"Server*, two scripts that execute a talker and many listeners and analyze"
" the network traffic during this time are provided. For this experiment, "
"``tshark`` is required to be installed on your system. The configuration "
"file is mandatory in order to avoid using intraprocess mode."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:442
#: 6b321015c9574205afb795b661ecdaa9
msgid ""
"These scripts require a discovery server closure feature that is only "
"available from versions newer than the version provided in ROS 2 Foxy. In"
" order to use this functionality, compile ROS 2 with Fast DDS v2.1.0 or "
"higher."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:445
#: 9af1e8d42d2e4032b10c5f0c6512a63a
msgid ""
"These scripts' features are references for advanced purposes and their "
"study is left to the user."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:447
#: 8f84b638a3684a4ea25030f54c669c96
msgid ""
":download:`bash network traffic generator "
"<scripts/generate_discovery_packages.bash>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:449
#: 2180449a3b904e9ca34aa18ea815bdad
msgid ":download:`python3 graph generator <scripts/discovery_packets.py>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:451
#: 413f47ee4bfe41e2b4008e5a793854b4
msgid ":download:`XML configuration <scripts/no_intraprocess_configuration.xml>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:453
#: e2f3ab235b58493a9eb783773a4cf4df
msgid ""
"Run the bash script with the path to ``setup.bash`` file to source ROS 2 "
"as an argument. This will generate the traffic trace for simple "
"discovery. Execute the same script with second argument ``SERVER``. It "
"will generate the trace for using the discovery server."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:460
#: 5f180c79de41479a81f1193417825bc5
msgid ""
"Depending on your configuration of ``tcpdump``, this script may require "
"``sudo`` privileges to read traffic across your network device."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:462
#: e925c49f6ed84926a7de760dd54395ca
msgid ""
"After both executions are done, run the Python script to generate a graph"
" similar to the one below."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:474
#: 531f2ce3d87f40368b5c18cf194498f2
msgid ""
"This graph is the result of a specific run of the experiment. The reader "
"can execute the scripts and generate their own results for comparison. It"
" can easily be seen that network traffic is reduced when using discovery "
"service."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:478
#: c44cfae9026c4124b0c9ff12d0a2faa8
msgid ""
"The reduction in traffic is a result of avoiding every node announcing "
"itself and waiting a response from every other node on the network. This "
"creates a huge amount of traffic in large architectures. The reduction "
"from this method increases with the number of nodes, making this "
"architecture more scalable than the Simple Discovery Protocol approach."
msgstr ""

#: ../../source/Tutorials/Advanced/Discovery-Server/Discovery-Server.rst:482
#: afcba2a6b6194ee1b36b34ef2e6f92fb
msgid ""
"The new Fast DDS Discovery Server v2 is available since *Fast DDS* "
"v2.0.2, replacing the old discovery server. In this new version, those "
"nodes that do not share topics will automatically not discover each "
"other, saving the whole discovery data required to connect them and their"
" endpoints. The experiment above does not show this case, but even so the"
" massive reduction in traffic can be appreciated due to the hidden "
"infrastructure topics of ROS 2 nodes."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:7
#: 42204a6e47414614acced496d1cfe422
msgid "Unlocking the potential of Fast DDS middleware [community-contributed]"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:9
#: c5c4e64f5d204af2b7ff48a8a17dfe52
msgid ""
"**Goal:** This tutorial will show how to use the extended configuration "
"capabilities of Fast DDS in ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:22
#: 9d8cbb91ff4a46b6bd0818c064d99c65
msgid ""
"The interface between the ROS 2 stack and *Fast DDS* is provided by the "
"ROS 2 middleware implementation `rmw_fastrtps "
"<https://github.com/ros2/rmw_fastrtps>`_. This implementation is "
"available in all ROS 2 distributions, both from binaries and from "
"sources."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:25
#: f9dc5ee482134b38b6257467d191740a
msgid ""
"ROS 2 RMW only allows for the configuration of certain middleware QoS "
"(see :doc:`ROS 2 QoS policies <../../Concepts/Intermediate/About-Quality-"
"of-Service-Settings>`). However, ``rmw_fastrtps`` offers extended "
"configuration capabilities to take full advantage of the features in "
"*Fast DDS*. This tutorial will guide you through a series of examples "
"explaining how to use XML files to unlock this extended configuration."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:30
#: a48c2144a16a42b2b85ce20d442408b8
msgid ""
"In order to get more information about using *Fast DDS* on ROS 2, please "
"check the `following documentation <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/ros2/ros2.html>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:36
#: 9b2bbb3518db46b8bf5353646051c27b
msgid ""
"This tutorial assumes that you know how to :doc:`create a package "
"<../Beginner-Client-Libraries/Creating-Your-First-ROS2-Package>`. It also"
" assumes you know how to write a :doc:`simple publisher and subscriber"
"<../Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-"
"Subscriber>` and a :doc:`simple service and client <../Beginner-Client-"
"Libraries/Writing-A-Simple-Cpp-Service-And-Client>`. Although the "
"examples are implemented in C++, the same concepts apply to Python "
"packages."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:42
#: d033da32849c45f7862c7dbc39302921
msgid "Mixing synchronous and asynchronous publications in the same node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:44
#: 685755c4cbcb40e895541d84f2b21970
msgid ""
"In this first example, a node with two publishers, one of them with "
"synchronous publication mode and the other one with asynchronous "
"publication mode, will be created."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:46
#: 4ac10bdc105047458c428cbfcdb461ae
msgid "``rmw_fastrtps`` uses synchronous publication mode by default."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:48
#: 2c54bae83865496f8c39a91bb437d4e5
msgid ""
"With synchronous publication mode the data is sent directly within the "
"context of the user thread. This entails that any blocking call occurring"
" during the write operation would block the user thread, thus preventing "
"the application from continuing its operation. However, this mode "
"typically yields higher throughput rates at lower latencies, since there "
"is no notification nor context switching between threads."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:52
#: 3388ba85dddd4f8c81965bf77ef86459
msgid ""
"On the other hand, with asynchronous publication mode, each time the "
"publisher invokes the write operation, the data is copied into a queue, a"
" background thread (asynchronous thread) is notified about the addition "
"to the queue, and control of the thread is returned to the user before "
"the data is actually sent. The background thread is in charge of "
"consuming the queue and sending the data to every matched reader."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:57
#: 431b8fb66eda48f49995c928952f7559
msgid "Create the node with the publishers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:59
#: 018edffed3034b1aa303ae32ca925214
msgid ""
"First, create a new package named ``sync_async_node_example_cpp`` on a "
"new workspace:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:63
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:272
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:396
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:772
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:225
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:237
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:259
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:437
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:459
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:593
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:615
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:236
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:258
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:435
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:457
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:593
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:615
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:45
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:99
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:125
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:155
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:194
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:40
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:73
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:46
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:58
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:88
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:110
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:121
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:137
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:147
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:158
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:206
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:217
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:169
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:37
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:356
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:441
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:51
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:57
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:88
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:131
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:169
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:54
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:40
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:94
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:171
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:212
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:246
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:313
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:341
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:57
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:90
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:152
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:188
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:244
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:268
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:290
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:138
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:262
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:284
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:323
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:145
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:172
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:288
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:322
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:347
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:381
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:228
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:246
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:268
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:376
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:398
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:219
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:237
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:259
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:376
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:398
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:64
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:310
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:442
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:461
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:483
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:314
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:333
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:355
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:65
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:286
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:422
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:441
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:463
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:262
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:287
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:171
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:201
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:241
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:385
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:416
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:452
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:481
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:53
#: ../../source/Tutorials/Intermediate/Composition.rst:162
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:46
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:98
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:173
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:43
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:53
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:189
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:213
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:299
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:57
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:239
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:257
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:279
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:350
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:515
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:533
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:555
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:57
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:217
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:235
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:257
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:328
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:471
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:489
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:511
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:53
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:278
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:296
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:325
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:598
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:616
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:638
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:45
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:340
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:358
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:380
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:45
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:361
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:379
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:401
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:44
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:334
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:352
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:374
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:44
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:287
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:305
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:327
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:291
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:309
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:331
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:310
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:328
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:350
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:49
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:86
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:202
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:224
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:302
#: 029d8b13b8534c3da31369cb31cbaa6a 0334dbb83f7e4d0fa4ed8d13a4895770
#: 059f8be9469d4078b8e6ac5a4752cbbb 0640bd4e0d2b4e0e9172f6714e453a1a
#: 081aebb82c454bc984013e8838f70cb0 0c5a645342104952a7328004ca638ebb
#: 0cda80d3266646b79d0e6f685cf2460f 0e2215e4db5e48489cc0ef271f816ced
#: 116e471958cb4e04a269d184bf11f06d 123a23f11b3c42e6a15455c128db2c98
#: 1414dafb613746e893205d7d555f5924 148e59cefdd94723881a552ffeb326ee
#: 175a9a789c854b098bed45c3ef07a1c8 17618c041d2948c2983bab65c3bf8be2
#: 180190ce38e14ed7b979615b01024eb5 1ae3c8d8dc92423ab9ba6aca273a961b
#: 1ba3df33b1b140d0bd6b24c9014260d5 1df5a2e2c7ca4210b87b8c3bddd686c8
#: 1e958a4e95994fd58b5a62b913e7ec84 1f04d07a53384356993ca4ff0f3b1fa6
#: 1f0d6ef118514e88aff89a076ca0acf2 20efa597b52a4de9b89b784872ff5e68
#: 23578f9e3dc945688675390e8407673e 262217332ea641eb9973af22f889ce3b
#: 262c39c59f974778a9c91157672b6d72 2682bca560064ad9b5fbf25920dc76a4
#: 26c04e0c2a764761a48838fc67dd7dd5 2976534a93184fd6b29974e451a9d5e1
#: 2d31d2d761ba409d97f12c3a753266bc 2ea0baa807254b9286a02421d7ad1d51
#: 3031c930dbaf4d70be12c130ae58111f 30b557cbd3e14c8a8419f2fbb41de019
#: 31435728b8f34b90b71acfe24c91e358 314395d3f9d14c539fd00bcc5f712733
#: 331dd97880534e4386d74596f5f11ec6 33f08f2d678942cd886dcc4f6d0dac45
#: 33f14764f54b4c72b4660c7a030d96ed 34c29a10fb7b4b49975135afa53982ec
#: 35662698f6334b769fd389ef11040669 36a8de40d72d4d1d8d382876bd7b3f27
#: 39055a5253ee496282d61756e10e6a6c 3a0c55bcaabe4b1d8e8a9350fb54c488
#: 3c310bb1dc69467fa5ed4cef8d287f04 3de5f810843b4ee19881d853fff0c425
#: 3e022ddc4ede44d1b47aaf6b6a4f58d0 3e42afaae0f2493ab545072d948c4a86
#: 3f4f70948ae94d13b505b4cd2aba708f 4ac6c086cd6c4ea9982d7b907007db80
#: 4b7657d627f44d2c913eabf805591606 4c06f6ef73ac45ea9534bf4c56023f0f
#: 4f8ba5deb6bd484c9f0b7afa7771c3e1 4fc3bbafeae14cea9720d6a40925a869
#: 508e9c0512ed40f895b16802cce3ef37 51af3cd1bdfd49ef967aa26e73d2b588
#: 538c6578a0b94ad9977fe150d53e5c76 56547fcbb9d94638afd8aeba0359f194
#: 59b9912684e446389879c914aec0ba40 59d7d178897448d3849049bd143222dc
#: 5ba2095ffca14f528c394032ea6efa4f 5c97b2702715404a9b4b0c5c2ae4d3c6
#: 5f26a6b2f3974353b1a44bc7ffc04324 6065ea2440ea4fb0861843f1bc614c42
#: 60bb877e33774e3793cfcf9e11eb723f 625c1e7569b846ec9c60c3f3465637b2
#: 630122981ff648b791539c505ec3d738 6432f65d5e7649398ac7c3b4a1128511
#: 645054a890f74c22b984deb3c763ab6a 661bce01163f4d0d8eda28dde807c403
#: 669e5627f9574587ab3eec5416018ae2 66a0b5ba7a3449c7aa92115ae6407a7e
#: 6a1dd10842c54cbd9773ab09480d70ae 6c64bb6e357d41bd8d3f266199edc02b
#: 6c8e49a6ac3947db96e571e20183d8ae 6cd5912543584655b0b4a5892f4a6ceb
#: 71b95ea22e8d492db7d00369533b4896 71bfbac000384a8789db30454f945453
#: 71f8f769ad4541e6ae9b9e12b07f78de 72701904451f402ca97c4c3877d095ca
#: 73a43291739340b68fb2cada04ae68d3 75b28015a3a6480c986dc0955c9f4778
#: 774fcb4830ac4bcd8bcaa9d3626a8665 793b6bc3513a44c9b748079a9efca22e
#: 7d8b16fce7094ec7b683e86f4c20852c 7eae08b750584898918d47978082b8d9
#: 7f4b53c212694cc083abb8aa3811acf8 832b240c2d1f4e50ba6cf04bc6820fae
#: 877e1e2c9989404d877b59c5fdc77bec 8eabc9cfc13a48ea98876dba6172ea45
#: 8f3eedbdfee84c488250043f07fe5095 933e6f137788492ab5a1e6fda7751789
#: 93f3a9cee3a1406d88998ac3040334e2 94144eb05f9f465ea9a6cc83e6dce381
#: 943574824d1b43c6972a3d0c8da9ad03 94c21b7daf6a4e18a5b418efae9bac26
#: 95d23d2bcf4642afb0ce510b3d81db9f 982760d3172c459ea95026faa8b4e389
#: 98e18c5a29a24f44ac6d0aaa47d9e73a 9afb9866398545d38f4d1c449be8e68c
#: 9b177b1d6eba4d6bb2eb716863895d03 9cbb90e5a7b24e6a90d36e4723bcb93c
#: 9cfae37ec059494db2cfc4ccc284f2ba a054ff4440074858b1b3e99013237a92
#: a118b6ceb26c40e58b34f95382f297e4 a163c48dddee4c8abae959eda5e9cb57
#: a3ad542eb17d4bfc8e6b5deea5f7002e a67e5272aa6e44f98331a2403e3061e3
#: a80039924905410fba99f609ccf94eb7 a83770ad1b4446e28b7f01b3f3426603
#: ad57d9f9793d445ebc9d41941cd66df2 aea0edccbfbe483ea72884ff22b310e0
#: b25514a1c212455895998cf10ab03717 b3cdef05a31e4560af88808f5bbe7df1
#: b4abf2a7fae14a83afab8b571d33e922 b7ceb6fe479c4f1190eadf46054ef1ca
#: bba0bd52c738489685c61360debae9f8 bc1d13dcbad84ad88cd1dce42f7da17b
#: bd3a2a7c9cf24f90814333041aef0bcb bd402a5a8aa7496197906d08b30f946d
#: bda0981e26fd43f1804b40bbe2171a2d bf09acd297104d1bb36b9c6504e9218e
#: bf66fc070e6f47218136c23dda15bf95 c21b7e32ea8c4fbab2793bf3beb94804
#: c29ee4c6d0f441d8b20ccc253b5439ff c2a6eececbf94a37950ed22569f5d6d7
#: c313f3d704104d2884b225aef4606311 c32e25651fd34ebfbb50295230a0d83c
#: c42ba26df4574d37b06b962f3e1337e6 c51efbe7a03540dd92af4df26b90dec3
#: c532a477a3c74480b8840bf94af19502 c60f43cc4d214a5c95a8091cfb026067
#: ccec65d15f334352bc818e5285eca7fb cdc14d3011fe4c2086ab8f9972c058a7
#: cf510ec767af4eb9b83bad3c28424d51 d1999715d2434e2880dff62ab54f8260
#: d266db35fa6b4983a1036bcf8a4026d4 d48709c589fd42568bae10e2ae836ee8
#: d6228882d0b44df2887e3ad41a877886 d62307eab465469e9fc25a1d1933c06f
#: d6f0f20085dc4e62b0b62e6ca8d447c4 d792daf1bcd646528f2ae38279d72147
#: d89c4b070f3442019981557b0d1d1036 d9fbb89175804a80a6e5edc37d6abe5e
#: deb72ca1f71143dba9a0685ee25f61f8 df057768427246c49a928d1d8a6eef7e
#: e22c8168fb1b478d8d84d7edced088b4 e2f6434d84294500b4e31c1a01fa8102
#: e4d49378dffd4baebaec197364df13c9 e6c9cfa3cd80445fbb7ccc01f95fe2cf
#: e85fa9a529674979bc59162856546678 e972d3f687d14694bf38735f32f21563
#: ea8941b5d46e43f5961817e9b9497164 eb12ad147cb44d0cb0f0ca7b830e8d45
#: ecf824a2a5d640b1b1ee58446126e8d0 ed37e4edb25644eea0a0c81782b81cb5
#: ef0710413c0644dbb6c851a2151f8a09 f41dd41a6df34c989df290fd12a9bd5e
#: f457430a41344e9a8879ad56c9504f97 f4761489699f454eaf26055419df75b1
#: f688cb39a2ff4e719accef7e516f075f f6e52dd971364c62b8e4490832db7a17
#: ffb6c39a793f4f789b4b953dfd5a4fe6 ffea816b76b94af2aae398f54352741e
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:71
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:280
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:404
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:780
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:239
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:243
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:265
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:443
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:465
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:599
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:621
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:242
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:264
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:441
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:463
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:599
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:621
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:192
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:47
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:364
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:470
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:57
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:65
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:96
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:137
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:181
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:62
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:162
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:46
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:101
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:177
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:218
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:252
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:320
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:347
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:63
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:97
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:160
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:194
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:250
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:274
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:296
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:144
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:268
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:290
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:329
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:151
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:178
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:294
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:329
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:354
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:388
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:234
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:252
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:274
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:382
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:404
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:225
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:243
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:265
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:382
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:404
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:70
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:316
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:448
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:467
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:489
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:320
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:339
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:361
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:71
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:292
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:428
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:447
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:469
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:268
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:293
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:178
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:208
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:391
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:422
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:458
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:487
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:59
#: ../../source/Tutorials/Intermediate/Composition.rst:168
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:54
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:105
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:179
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:50
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:59
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:195
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:219
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:305
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:63
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:245
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:263
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:285
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:356
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:521
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:539
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:561
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:63
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:223
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:241
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:263
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:334
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:477
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:495
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:517
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:59
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:284
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:302
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:331
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:604
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:622
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:644
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:51
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:346
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:364
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:386
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:51
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:367
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:385
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:407
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:50
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:340
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:358
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:380
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:50
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:293
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:311
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:333
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:297
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:315
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:337
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:316
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:334
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:356
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:56
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:92
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:208
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:230
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:308
#: 009c349bc1eb479da0537b318b85d71b 04ca3d586c00450b9cdb6c6ffe133708
#: 058b6f26feda43b89c5919c975b9ccf3 08d92a4394624bb5b762521ec074c078
#: 0bfaa991b4214915be4fe3f8b66d806c 0c5a5b1e328848b2b8cab14432e9cb13
#: 0d378603e1ef481398730729a455d50a 0df39e1dd80d4793bf90ab8cbc49962c
#: 0ea858348dca4119a6ce73b2e595b370 119715b65efc4589b93bcf7945434b1c
#: 190b9179c38e4810951bb7e0643ae670 1979d292e5a049039dc650566eb3f49b
#: 1b4440666f9d4ec1b79df709ee0989f5 1daacf323cc3451bbd83e936d52da9b9
#: 1e26e40925bb4a719e75a573c547cd40 1f0e910a650741cba0c4c023ef7df21a
#: 1fc26f918ade4a4ab165b385d73aa8dd 20ae34ff2f794e918ac4194aebee4806
#: 210c1acae5654eddbe6549ad9d20e22d 21545de2285d4f80ad5fe63abec4280e
#: 245ec257d58e41d3bc0238ded562e0e2 2529f6d950bc44a0aafafa4be446c328
#: 29195410d5ba45b789acbe30e9e73dba 2e7732573161423daab1dcf248187824
#: 2f0dfc1e43c4405e97c2109dd7c772fc 308705b579534e90a6c232a615e58bd1
#: 32cdeda49df34208a73949fd5e199b24 38c0f86f8bc9495c88c90768130ec3f9
#: 39bd2472d77742afbee04451acf49c3c 39c4ab022a9b4e329f4a90684d870922
#: 3bf3ff411a964e78afac291d96e46c46 3c93395fd26b4b70958044bcc459af1a
#: 3d1d4992f6aa493d9f602ca347216cc4 3f8ff08648724923925a64766c9fe82f
#: 3fa7216c27c04fa2823a1762de107ba2 43ed767716714540bf89963f27ba9c65
#: 4769b8828fe641e8ad2b00ab2130c47f 48a4a0a54dc74a1793e25009e518ef03
#: 4a6f7309f5ad47e1bd957cd6b6523547 4d73545399434d908af9e29be14eb1d4
#: 4df60d1286fd49dd92670adba38a1c6e 4f6b91c0738945ca8ddd867a9d6c9699
#: 4fa27949edc943c4a1220963de95b8f2 50b37e1f871a411c8c3022f568f1a162
#: 52b61dd3165b41b483c00cb08a9eb445 5450753d97df42edba9c080958139a4f
#: 5614315d6cad45c290ba74b0ae5a7cee 575d6ea630da4ce1b9c37701c3d43459
#: 580ca326ef0b4bd7bbc79f2d5443e130 5b896f7bf662460d966d79949cb9734f
#: 5bfbf0967b9e4ef38bb6487d2d799516 5e912e1e1536481394d8ecefe72bdb5d
#: 604130608e724dbd92ee07eab7dfb1ac 6370ea75bdd149e38432bf0bb3678c05
#: 67319178221c4af68f562b603022d876 6a05c61a401f40dba75089469b53ef0b
#: 6c1395a455374cc0a925fa4c0fb0a867 6ed66d3cb6aa4d8f8859096d46879a1c
#: 6f823af045b44ef9b0ade17c3f2dfeb2 71bdbda62e2848fa9dcce9ac888b7997
#: 71fd733fd4394cd8b81d9686f758425e 72cacf5bdda14af29ab7a82dd6243b53
#: 75a7dc869c2c46279dbf268f387551bc 779e7f4679b342dbae9a5daedb59e103
#: 79c364ee83af4836ade7c8b88eaf8766 7b137526542b472c92b8e14b4f8833a0
#: 7b5638ff762f405fbd5e435cda9d6b8e 7f1ddf0dfebb450bb85968a9e582ec78
#: 802e295710984368bf04af702b784268 80fcacd9463e45d19835166d7c8f6dc9
#: 856261593e4f434da17e33b5577aeab4 859ea39ff75344788de3276d427cc0c3
#: 864deff468604480a5eea86d06976ea7 86a0abb56dda40bba7166ad028bb368e
#: 88772258d72a425882560e51aae6734f 8bb8a81052a64edbb137dbb30cdc214b
#: 8d137affbb8f42529d8cc90d1e253ed5 9114843b235d427c8cbd8347acf04c0b
#: 9317fc0c5fab47edbeef18c5e154e566 94a479a941584bfab34ae1305c7c8cb2
#: 96248976772e4a5696f0e9e2db2a47bd 98d789d40bd84221aae3ad3ad33a5ec5
#: 99bb02c956914681b70f5ff8d07ddf7f 9d23ab29999b438084379b4ff6fcbecb
#: 9ef5562f09604118933adac7b3d6d5d6 9f4268ef18c647ffa814ab918d182ec2
#: a18d9143b49a4a37a3e539131eeade2c a333453fe3f140f0bef698186ffc7cf7
#: a5a2c698a7334d5ca69610e699012ff3 a710d3d640244cd6bb2e547aa7e70e5c
#: aa66302fa46746d4946e2881000807f0 ab0368cff29d4fe6b5835f222532014d
#: ab03884fc0c041ebaa5d410220f8aa55 ac76300251594c8eac3c3afc6c1fd43f
#: b3dfb0f087214c2088dd3e973efb0063 b627e1df97024fa99797e25865df52e8
#: b81c632554984d0f9f13d4d61a4e6868 b8b10a72c7bd4771b09cc3e2eff0dcdd
#: b9026628004c421e9686502356b2b9f9 b97bb49d9dd94b1e9c84bada45a1e270
#: b99adc38d2f741db8080985fcc5c8bd8 ba75b11a2177491489057cd2c3171ae7
#: bc96039a8e6a48639d7fea48dc3fe5bf bcd70520c9354ee8ad9737233ee48919
#: be0ab56213a94ecc8f8a4f7002c39973 be8a4d5880cc4e739cfd4c49069e76b9
#: c0a0860f68d24d05acdc5b8266d41bcd c0b4e567c83c4a1da215e55658188ff7
#: c0df5627948b4c68b37ec3e4c4f19df3 c25d50161f8648a7b01ea7f5fde769f1
#: c5aa72c4d6e7442695e6f18d60f09e56 cc8e58b3e8894e9cbb13eedc0ccc4072
#: d1004fa300514ea9813816f09f59d887 d1552c82179b440abe710e4f10982d56
#: d3c4c10e8cbf4c4ba8a6f513bd986ffc d4c2b951723746468493e078b11128a2
#: d52b6ed7329f40539d5ad3a3738f339a d5d000e02abc45ea9dc39d13ed5b1e88
#: d6d83c3f59a04fdbb8ec963dae13c261 db1dcaf4270142fa8e4ee4dfcd088b4f
#: df6b8c6756ca4d2e9b70bf9aa4885ebf e06bcebeed3b40469ac65292507bf1c8
#: e1b295d0f57a44578b5f8b3fad0cc422 e368b8f4923e4f6eb9018ba30fdca69e
#: e532926c497c4f14ba3c2602b47df516 e57aa1f5f7324342aff1437c1fd85853
#: e5cf58f1775844f1a5a6ec17b88299c4 eb4fa92b82924410b9792a15ff52e43d
#: ed472617ca69496eb96ed54e2333ffc1 ef19c4f6782c4113bc321bfcca539a76
#: ef41eb2733234c91835470cde2775fbe f165ee651153440a8cf2c04c6d3e09ef
#: f56fd5500bff48328981aad0132a5e14 f57bc5be2cdd4803b32355ca69e356e2
#: f5b4efa315114b07b960e8eb24ff7742 f5fc3495972a4bd89201169123087f66
#: f6475101f7704357ab088eba81995162 f6c9618800a2479b94931f61525967c5
#: f77e2a567bed433b9922b2120c1388bd f7e96b14c0cc4c6597b35fb08496e6a4
#: f9f55b004697451381d8954890011e04 fa66f1c473074b19a5dcf213401c1f44
#: faf34a6e1a464e979e6cf781396b8b7f fbef23ac7fed4f71bd84395304167b8a
#: fd7d97aab7414bdd97541543f357b258
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:79
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:288
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:412
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:788
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:253
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:249
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:271
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:449
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:471
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:605
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:627
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:248
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:270
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:447
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:469
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:605
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:627
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:67
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:111
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:139
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:169
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:210
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:56
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:87
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:179
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:42
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:360
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:454
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:63
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:71
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:104
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:143
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:193
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:66
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:166
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:52
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:108
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:183
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:224
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:258
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:327
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:353
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:69
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:104
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:164
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:200
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:256
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:280
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:302
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:150
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:274
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:296
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:335
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:157
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:184
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:300
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:336
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:361
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:395
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:238
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:258
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:280
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:388
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:410
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:229
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:249
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:271
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:388
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:410
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:76
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:322
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:452
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:473
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:495
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:324
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:345
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:367
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:77
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:298
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:432
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:453
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:475
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:272
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:299
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:185
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:215
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:397
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:428
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:464
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:493
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:65
#: ../../source/Tutorials/Intermediate/Composition.rst:174
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:62
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:112
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:185
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:57
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:65
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:199
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:225
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:311
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:69
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:249
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:269
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:291
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:362
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:525
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:545
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:567
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:69
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:227
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:247
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:269
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:340
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:481
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:501
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:523
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:288
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:308
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:337
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:608
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:628
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:650
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:57
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:350
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:370
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:392
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:57
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:371
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:391
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:413
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:56
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:344
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:364
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:386
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:56
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:297
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:317
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:339
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:77
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:301
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:321
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:343
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:77
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:320
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:340
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:362
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:63
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:98
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:214
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:236
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:314
#: 005446895dcb477cbbd4cadc32227845 01ce2d6ae75a4e048feee77c137ab16a
#: 0453c028e61f49a0897b25a66392382d 048f0b3c50b4440493be2c8e7c310ab1
#: 0542b0780b9d488f95f7fc62b4c2e56c 08c2309bfc0c4c2abf938b78af267da6
#: 093491b9c8ca488b94f752f9b6de46de 0af8c147ea324822ba6acec6f0c39fa5
#: 0bbf921d68884121a1b43efd13f30537 0fd9d2b086dd4ca686361f83ab792ca9
#: 123470f0800941dc8045279f37059617 127ad6bbf570409f87e392225a20b67d
#: 15843a4ddb23443f8cf1a53cca563116 15f25eb4e62c45698c4a6034bc66f6b3
#: 167876f05c3a4b639877220ba266fa0d 16b73b9313324605b301b9b83868afd4
#: 1ac47ff963af4f0c9fe12263b72bc93a 1cf46fd33e8d4b70a1ae954b336d400c
#: 1cf6ecc931944d76a09306b721dcf9ab 1d0977cde7d946f7b48198a4c0306814
#: 1e26ff76a6c24a11ae3d0a5e91c89513 1e3f8ea2cf9544a6bee7f8f4f93f50e0
#: 1e73ece61e184e6d94572f06d420d372 1e7b39f7414d4692b05cf657cd7a682f
#: 201b7c040deb4f11b044a7018bb7154b 214013cb769d470386923e9ca592ab67
#: 23a7f40f9de3454aa3fe61ee44647ae1 289572c6cb134421a1a77046569627d7
#: 28fa8480f2d04b00b488c95f7f47ed3e 2a2861e0bd7e4b62b00363e11c10fcd9
#: 2a2a170e206c4e8da4192f51efeb7467 2b6b98d96a7249448159a8bd52b600d9
#: 2dd848cc3f4244f8b9929a3a3c0753ea 2fafcd8d02f8446c8baca77a35368cad
#: 321b409da3aa4d24973c2ed6d55f7fc0 346f791af127447990f37938d618e4fa
#: 34d74cd51e894f1aa467c64c8e8ee3aa 367f904b87a74240ad197e1ff48afd25
#: 37c0f13c85e84fd4b3f2db70a556344c 407d83717f2f42efa50949ec2fa3c1b1
#: 408587c40a5e4030bf0915fc5552c150 4728990c94954406a3bc9eefa77e5b16
#: 4a4765f07ff447da8a230b44434ec197 4d986f1df83942da8cc70f7e188cd622
#: 4f38615fe57248369d10bd28ae038240 4fab8f7724ca47abbddbe86e7f26d917
#: 5173b5694e4d48bfbc9820a1e5b0cfd5 51882c5e2ad44d388a4729feaeafe311
#: 52c19f23e5da406bb096ef5c9f2f6700 53fe6b0a8c304503adca9b1d308dc4db
#: 559d287ee7524e859f54f2aff6b0306c 57966e43d915461dbb0d9d33cf751d20
#: 58403bc9ce494b94ad486fc14b68687e 58d0b8e8c159415b92a4accc68a118f3
#: 5a901ed0109545e1988388dbcf7572f7 5acf8da9a554492dad554e5833c593f7
#: 5b8f734acf194b5cbbb3deda04ae1935 5cb66dd5062d4bc6b4f6f5b334ea934b
#: 5cdca0a05070443191772709d1aa7d17 5ebe5e4ad5d543528f387fd00140fbde
#: 5f870e64c6cf449aa0615fcc4dadf2ac 5fbb424ea18e4ce69e0a4222b25d7113
#: 618f21dfa9c140de95a5b503d6101700 63bfa9caa0b24577907700f22472bf22
#: 6633408846114353a0a1cc79ffdd8ad2 66bd57348f234a919aad3a4d3c64cd47
#: 66f11fcd90e9498fbce49d0207fed15a 67eca0346d254a8dbe62ea3ee455c7d5
#: 69006afe07ce4188899774cdc160ac24 6a4bc168dd4b4c3aa306542342612619
#: 6a82bf0aeb3d4d8382f87333e6427fc2 6eb6a4458d814a219ecc2683f14d091b
#: 7275b1c6cb324e3ab1535b308456be64 75976d481a0a4765a53e0c1ef2c175b7
#: 7d7057ba52fa4d4397ea65eb503c3aa6 7e4418d8443748ceaa02c572884b9e12
#: 807d6e7a53424c6bb1a3841633eddbdf 80bca408934e4d4c9dcb84d3706fabe9
#: 811c1ccb2a724b0eb3305fbff0dc9da4 83d14d55e5bc4f989375f89be33ad65f
#: 858b9e78d9b74e44b8ba46e73201cbc4 8602f92b2e994aad8403df5184120245
#: 8948efe930e24a3d967ad64968ad7a0f 8a4665caa807427da937a94274365c33
#: 8d9125035d2740ddbb12051a4faf9a3f 917bd6e59adc44179f19c9d28002bf9c
#: 93dd08681c674712869f5bb82a9432e0 9954d288413842468b6df16dda214ec3
#: 999bed48703b4438b8f4c36cdd88e70b 9abdb3ab6aeb42d58d484526bf89dbc0
#: 9b538d99d08843b795aad0c71bde1e05 9cd3eb4aaa6c4c63a41e9a98e3eef619
#: 9d835511231e46f5afa924390f69065d 9dbd67081bd643058568909c0a97a6c2
#: a0345c1f5d9e4cfda5adefa09cc4ae56 a0f5229d2e684070b824b5abc63b75b9
#: a2ebf2e427a64809ad67038e6ad44472 a32dc3694985424ba96ba2038601f5a8
#: a3a646ae50b24372a57db618040b2bb1 a3f1de94de514ebda47733c68b59388e
#: a547a796782249a8bd5a3f3934a5d72b acee81b8b74c4151a5f78be5ae29c9aa
#: ae0597e54ca3478a9f51b9924ad392f5 af2faeae98ba468e81b10bdc7d99a2bf
#: b24ecb2c12f74c3a9999b1eb5682c2eb b2848c6f61ec42228fe90cb3c52a4cdb
#: b427f38807c748d09876713fbbb15f84 b4c2f755101c4a8a825f53d0738fa9bf
#: b869d6b9804e420c978110da91383463 be1606e8ede646f3ab1e93fc1c54a608
#: be1dbc6bba4f45c2b16dcc1d8c1f9f3b be9f455ef56247b2a2c918a1b503b533
#: bf48515deb724286983bb0f697786e25 c21877b83497450ab1dc9007e056ed89
#: c3259f0237bc40dcada0a12d6e2f7c36 c4227a16b51040e3b1a1b3d7ac44b617
#: c4d676308b7e41a093acfa6c08bd2dc3 c6f077629c234e878c9c2e0346ab7de7
#: c99b5fb2dcae42c5abc877c891727499 c9d1a6cdf0324e42a8131ac661c4175a
#: ce466ce2d61e47f8b53f618587346829 d02c7fdfdd8045c6a7db9a6133e4e322
#: d1223a2e44bf43f59dde78d5c3a5ae2c d26554caa36d48ffa7630594d71dfaf4
#: d36c785a26464a5aa9e520a09b2952d9 d7140c56b7db4eb49fa13f7229b66c12
#: d75eca176a864f6194a2e5de24edfba3 d7970a6574004cd28a9cfb49111e20bc
#: d8ace6750ffb44178794be8f93d3fab3 dba3ec294a50472f89c8e3811747d2cd
#: dc633cec25204fe995503d6c43c9eecc dddaa49af1ef4a4aacdb51a7733f3e54
#: e1265ad17d874c22bc1a78d743a93b89 e3c632bf13e14b0e87c45490d96f6f70
#: e422890c303140a0b145f913a9540cec e4a08be4912e429099bf7cb8c1d89c57
#: e565d9001f6e41d38c47febf147e74cf e58ac2d86c8e4fc5a35a12824a6a9cdc
#: e630d86699fc4beebb78ce18afa9daaa ec91fc97272e4120adcfa6418427506b
#: ee20bc0a465d48f2bec4bd75ebc11c8e eee5e3f4ad2543f390e997ffbdeceda3
#: ef567d68379044d7b7d2db3b73b7e5d1 f0114ba8367a42c4835e8501e9637419
#: f3d3b22ebdb24694bebfd80b154ae683 f4aed69d76694ba99d8c55880d1d7ceb
#: f540f22e66754f24828a3935fede05fd f65e07cf3e6a496c8ae2b4193b5cf99e
#: f8b54bdf38884a68bb0387136f364862 f9133134be6047d097df291d0b770ce6
#: fb7733a29c8d4840bf5211a3e480dabe fc6f7fe457c3413fa772f635f8d5c087
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:88
#: 35e21ac10c3d4fc9afa76a985220ca12
msgid ""
"Then, add a file named ``src/sync_async_writer.cpp`` to the package, with"
" the following content. Note that the synchronous publisher will be "
"publishing on topic ``sync_topic``, while the asynchronous one will be "
"publishing on topic ``async_topic``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:171
#: 0d1df0b39caa412abf7e570b7835cee8
msgid ""
"Now open the ``CMakeLists.txt`` file and add a new executable and name it"
" ``SyncAsyncWriter`` so you can run your node using ``ros2 run``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:178
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:176
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:465
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:238
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:265
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:276
#: 08f186644c774bc9a82889b160968d44 126bec68493d4336a59df419565c62e3
#: 126c9841fff84a54929befbe90432619 a376fd97a1184dcb8c112d26e7048968
#: c92fb0c4296a46c782381d000547f28b f0fd0406c4f54558a43d669c5a6dc106
msgid ""
"Finally, add the ``install(TARGETS…)`` section so ``ros2 run`` can find "
"your executable:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:186
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:271
#: 64ba9ce8f2e54a2fbf606f639a9d4a85 e4f9c97b81024617a65d454474c9a1f4
msgid ""
"You can clean up your ``CMakeLists.txt`` by removing some unnecessary "
"sections and comments, so it looks like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:215
#: 8167b0ad59744036981bac5029dd47a7
msgid ""
"If this node is built and run now, both publishers will behave the same, "
"publishing asynchronously in both topics, because this is the default "
"publication mode. The default publication mode configuration can be "
"changed in runtime during the node launching, using an XML file."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:219
#: 387b961ec91d4343ad663b00fb361ae2
msgid "Create the XML file with the profile configuration"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:221
#: e7bb3dc3046a4a9bbf036af90e213de1
msgid "Create a file with name ``SyncAsync.xml`` and the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:260
#: a3ffd4a5beb047bb8905854087f5219e
msgid ""
"Note that several profiles for publisher and subscriber are defined. Two "
"default profiles which are defined setting the ``is_default_profile`` to "
"``true``, and two profiles with names that coincide with those of the "
"previously defined topics: ``sync_topic`` and another one for "
"``async_topic``. These last two profiles set the publication mode to "
"``SYNCHRONOUS`` or ``ASYNCHRONOUS`` accordingly. Note also that all "
"profiles specify a ``historyMemoryPolicy`` value, which is needed for the"
" example to work, and the reason will be explained later on this "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:266
#: 2c65ac4ae67f49af9336984d9188f7e1
msgid "Execute the publisher node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:268
#: e25850b5c5f84c4886b04114ed48d2eb
msgid ""
"You will need to export the following environment variables for the XML "
"to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:296
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:420
#: 5abcd59d4ac0479ead14ddc567155137 8fa8000e6064479887754cdeaffcd347
msgid "Finally, ensure you have sourced your setup files and run the node:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:303
#: c861f3856cd84d729707e818fc7b5145
msgid ""
"You should see the publishers sending the data from the publishing node, "
"like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:314
#: 45296ad9798e45018a21b1b75d41397b
msgid ""
"Now you have a synchronous publisher and an asynchronous publisher "
"running inside the same node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:318
#: b7589aca5dc246daba25ef1f368e4b0c
msgid "Create a node with the subscribers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:320
#: f58d6cc9b7684eb0855f53914c503c11
msgid ""
"Next, a new node with the subscribers that will listen to the "
"``sync_topic`` and ``async_topic`` publications is going to be created. "
"In a new source file named ``src/sync_async_reader.cpp`` write the "
"following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:377
#: b658bddd61af4adfaa36490ce75a8fc3
msgid ""
"Open the ``CMakeLists.txt`` file and add a new executable and name it "
"``SyncAsyncReader`` under the previous ``SyncAsyncWriter``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:390
#: 027061a10f034e349e79ddbc9891eeff
msgid "Execute the subscriber node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:392
#: bc1c790367e64ba793a75675952cfad2
msgid ""
"With the publisher node running in one terminal, open another one and "
"export the required environment variables for the XML to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:427
#: 8273667db3764ac085e3a5beaebf12bb
msgid ""
"You should see the subscribers receiving the data from the publishing "
"node, like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:440
#: c8e7585b92f3432fbd2e55bff1671196
msgid "Analysis of the example"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:443
#: 1535680338c945a793eeef3a9d75068c
msgid "Configuration profiles XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:445
#: 86fb2c78e5a448acbb63fe83c580b190
msgid ""
"The XML file defines several configurations for publishers and "
"subscribers. You can have a default publisher configuration profile and "
"several topic-specific publisher profiles. The only requirement is that "
"all publisher profiles have a different name and that there is only a "
"single default profile. The same goes for subscribers."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:450
#: c448b427e8b04a7b9f9adb64e41dd598
msgid ""
"In order to define a configuration for a specific topic, just name the "
"profile after the the ROS 2 topic name (like ``/sync_topic`` and "
"``/async_topic`` in the example), and ``rmw_fastrtps`` will apply this "
"profile to all publishers and subscribers for that topic. The default "
"configuration profile is identified by the attribute "
"``is_default_profile`` set to ``true``, and acts as a fallback profile "
"when there is no other one with a name matching the topic name."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:454
#: e6c2ddd152964850861038f6ac4bada4
msgid ""
"The environment variable ``FASTRTPS_DEFAULT_PROFILES_FILE`` is used to "
"inform *Fast DDS* the path to the XML file with the configuration "
"profiles to load."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:457
#: 05dd8ec5327e4446beeca1ce7ffcf8df
msgid "RMW_FASTRTPS_USE_QOS_FROM_XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:459
#: 59c58e83d3fb40ee8c7dad33e68eae15
msgid ""
"Among all the configurable attributes, ``rmw_fastrtps`` treats "
"``publishMode`` and ``historyMemoryPolicy`` differently. By default, "
"these values are set to ``ASYNCHRONOUS`` and "
"``PREALLOCATED_WITH_REALLOC`` within the ``rmw_fastrtps`` implementation,"
" and the values set on the XML file are ignored. In order to use the "
"values in the XML file, the environment variable "
"``RMW_FASTRTPS_USE_QOS_FROM_XML`` must be set to ``1``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:463
#: 88e6cb13746b49d2a2b697612057f998
msgid ""
"However, this entails **another caveat**: If "
"``RMW_FASTRTPS_USE_QOS_FROM_XML`` is set, but the XML file does not "
"define ``publishMode`` or ``historyMemoryPolicy``, these attributes take "
"the *Fast DDS* default value instead of the ``rmw_fastrtps`` default "
"value. This is important, especially for ``historyMemoryPolicy``, because"
" the *Fast DDS* deafult value is ``PREALLOCATED`` which does not work "
"with ROS2 topic data types. Therefore, in the example, a valid value for "
"this policy has been explicitly set (``DYNAMIC``)."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:470
#: 2a9584776ca045f4b1391fde894f4ece
msgid "Prioritization of rmw_qos_profile_t"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:472
#: b19c309719364af4a793cf668b681d0f
msgid ""
"ROS 2 QoS contained in `rmw_qos_profile_t "
"<http://docs.ros2.org/latest/api/rmw/structrmw__qos__profile__t.html>`_ "
"are always honored, unless set to ``*_SYSTEM_DEFAULT``. In that case, XML"
" values (or *Fast DDS* default values in the absence of XML ones) are "
"applied. This means that if any QoS in ``rmw_qos_profile_t`` is set to "
"something other than ``*_SYSTEM_DEFAULT``, the corresponding value in the"
" XML is ignored."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:478
#: 20f331c351e2466da9267a41c4fc3761
msgid "Using other FastDDS capabilities with XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:480
#: 7ff6e9b0ebc148f29531ae17a7d9a0f1
msgid ""
"Although we have created a node with two publishers with different "
"configuration, it is not easy to check that they are behaving "
"differently. Now that the basics of XML profiles have been covered, let "
"us use them to configure something which has some visual effect on the "
"nodes. Specifically, a maximum number of matching subscribers on one of "
"the publishers and a partition definition on the other will be set. Note "
"that these are only very simple examples among all the configuration "
"attributes that can be tuned on ``rmw_fastrtps`` through XML files. "
"Please refer to `*Fast DDS* documentation <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/xml_configuration/xml_configuration.html"
"#xml-profiles>`__ to  see the whole list of attributes that can be "
"configured through XML files."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:487
#: de2bd9692c0b4fe49f9bae8c54c13c06
msgid "Limiting the number of matching subscribers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:489
#: bc633b9231944033a97b9b32324f3ad8
msgid ""
"Add a maximum number of matched subscribers to the ``/async_topic`` "
"publisher profile. It should look like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:509
#: 2a76cc3abc75439f9aba73e1dca3e4d6
msgid "The number of matching subscribers is being limited to one."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:511
#: ebeae4dc99254aa8b407281bb4979e55
msgid ""
"Now open three terminals and do not forget to source the setup files and "
"to set the required environment variables. On the first terminal run the "
"publisher node, and the subscriber node on the other two. You should see "
"that only the first subscriber node receives the messages from both "
"topics. The second one could not complete the matching process in the "
"``/async_topic`` because the publisher prevented it, as it had already "
"reached its maximum of matched publishers. Consequently, only the "
"messages from the ``/sync_topic`` are going to be received in this third "
"terminal:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:525
#: 27e097f1d7ed424d82adff25fe804e8e
msgid "Using partitions within the topic"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:527
#: 905bb78301654a96896f6b2478b07cf5
msgid ""
"The partitions feature can be used to control which publishers and "
"subscribers exchange information within the same topic."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:529
#: c5f5094839f242a695ebf7cd910a884a
msgid ""
"Partitions introduce a logical entity isolation level concept inside the "
"physical isolation induced by a Domain ID. For a publisher to communicate"
" with a subscriber, they have to belong at least to one common partition."
" Partitions represent another level to separate publishers and "
"subscribers beyond domain and topic. Unlike domain and topic, an endpoint"
" can belong to several partitions at the same time. For certain data to "
"be shared over different domains or topics, there must be a different "
"publisher for each, sharing its own history of changes. However, a single"
" publisher can share the same data sample over different partitions using"
" a single topic data change, thus reducing network overload."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:536
#: 1f20e3e770344db790815e649ad1cb64
msgid ""
"Let us change the ``/sync_topic`` publisher to partition ``part1`` and "
"create a new ``/sync_topic`` subscriber which uses partition ``part2``. "
"Their profiles should now look like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:568
#: b7661e97c19548668718ebb6ccfd78bf
msgid ""
"Open two terminals. Do not forget to source the setup files and to set "
"the required environment variables. On the first terminal run the "
"publisher node, and the subscriber node on the other one. You should see "
"that only the ``/async_topic`` messages are reaching the subscriber. The "
"``/sync_topic`` subscriber is not receiving the data as it is in a "
"different partition from the corresponding publisher."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:582
#: d2cb8869061d4aeeb755b04a79378aa1
msgid "Configuring a service and a client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:584
#: f19d1ba0da8748be9d0dbea49fac168f
msgid ""
"Services and clients have a publisher and a subscriber each, that "
"communicate through two different topics. For example, for a service "
"named ``ping`` there is:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:587
#: 95fc540b75db474e84a45f95533e8bf1
msgid "A service subscriber listening to requests on ``/rq/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:588
#: ce525ca2f4054ff2b0b32fb5c216578b
msgid "A service publisher sending responses on ``/rr/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:589
#: 168e5ff33f3c4df8aac6560432f3593d
msgid "A client publisher sending requests on ``/rq/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:590
#: 6bfe92da7c5d4900bb20effa668b548e
msgid "A client subscriber listening to responses on ``/rr/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:592
#: f1537d42c20b48b8884634adbc97c97c
msgid ""
"Although you can use these topic names to set the configuration profiles "
"on the XML, sometimes you may wish to apply the same profile to all "
"services or clients on a node. Instead of copying the same profile with "
"all topic names generated for all services, you can just create a "
"publisher and subscriber profile pair named ``service``. The same can be "
"done for clients creating a pair named ``client``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:598
#: bf1867259c0d4d858578ddc568bb98eb
msgid "Create the nodes with the service and client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:600
#: b676c851fbc84ceb927e7e0033543110
msgid ""
"Start creating the node with the service. Add a new source file named "
"``src/ping_service.cpp`` on your package with the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:644
#: 5a5836031d124e02ab1088c6d0982a21
msgid ""
"Create the client in a file named ``src/ping_client.cpp`` with the "
"following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:694
#: 50f1e9b8ae60479c8db40bd93a3a9186
msgid ""
"Open the ``CMakeLists.txt`` file and add two new executables "
"``ping_service`` and ``ping_client``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:714
#: fc245d649e6149498eaf8f6de4dd279f
msgid "Finally, build the package."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:718
#: baf0fba855624885973da3448ef818c8
msgid "Create the XML profiles for the service and client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:720
#: dff5c4b05f6b40e5a88c3d3c99d0fa12
msgid "Create a file with name ``ping.xml`` with the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:760
#: dd8e875f14ed4102bd625914ca896bf7
msgid ""
"This configuration file sets the publication mode to ``SYNCHRONOUS`` on "
"the service and to ``ASYNCHRONOUS`` on the client. Note that we are only "
"defining the publisher profiles for both the service and the client, but "
"subscriber profiles could be provided too."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:765
#: b9a975d5100741fcac75a6a15bd1b952
msgid "Execute the nodes"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:767
#: d4750f8dfa6e4f3c85a02b638f0bc6c8
msgid ""
"Open two terminals and source the setup files on each one. Then set the "
"required environment variables for the XML to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:797
#: 8aabf7174e674b2ebf298abf1c1de167
msgid "On the first terminal run the service node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:803
#: 619ffcddb5f0458b9f676785f931abbc
msgid "You should see the service waiting for requests:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:809
#: e7e86492199649a0b2fab0879dafc3c6
msgid "On the second terminal, run the client node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:816
#: c7097d493ad54c8c80fa0b383867c826
msgid "You should see the client sending the request and receiving the response:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:823
#: 52d132cbc55d4a2caba0dec0e7356fcb
msgid "At the same time, the output in the server console has been updated:"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:4
#: 760363cb1bb44356a22a04a6023d6db4
msgid "Improved Dynamic Discovery"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:6
#: 0687121da0af4423a896d33b95dfcd2e
msgid ""
"**Goal:** This tutorial will show how to use the improved dynamic "
"discovery configuration."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:10
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:15
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:15
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:12
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:13
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:13
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:14
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:14
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:14
#: 0c19e25feb044611b2ffa6dad1508705 24355c0bb3fc45678c1a04f674929989
#: 2797893775694477b70e6288c6b5e1cc 2eec838b0e094ef89c9f1c8d8aa42346
#: 3007b758ad2e42818562425aec49c3e0 52312a4ef86d4441a82bd7402661b805
#: 5aa036c0a0a7442588fddade3a01a83c 5edf0310e8764ef5b349eb20779f6b4c
#: 68b0ee4ed3f94b5e93ad9e52a70e2afd 698626c4d2d445b98e8211d4ffd08106
#: 87acd44f4fe542eb86935e40287f31ef 88df897827f54ca290e83ca2e4e3af3a
#: 8a10216df2234351afca30876a0fb03b 8b9d85b44a584f3891666c503be0f3c5
#: a995277386ed40818c8c84387d4512b8 abd5b2c8b541471480e96c186436d81e
#: c1d4179033f140ca92e12e7ab56d7d34 e5cce9ea83f2433db2fc1954388e87c7
#: f71670ba7acb4da8938daa0eb7757d7f
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:17
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:19
#: 5c7945ad6d50479d84308098d385815b 66f0af7111584efc9b302f74c4d4b56f
msgid "Overview"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:19
#: ffda2b785b27487f93c2c93bda9b1740
msgid ""
"By default, ROS 2 will attempt to find all nodes on all hosts on the same"
" subnet automatically. However, the following options are available to "
"control the ROS 2 discovery range."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:24
#: 57006f60f5974732a5e5e52448008c50
msgid "Configuration Parameters"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:26
#: 920b7ecec0f14e92a2b4d25ada9d93ad
msgid ""
"``ROS_AUTOMATIC_DISCOVERY_RANGE``: controls how far ROS nodes will try to"
" discover each other."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:28
#: 63d51f374a954aa9b08b32aea0a6f877
msgid "Valid options are:"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:30
#: 2dfb93bf8bac453da59395596ca0bf7d
msgid ""
"``SUBNET`` is the default, and for DDS based middleware it means it will "
"discover any node reachable via multicast."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:31
#: 60cdc505e88f43ea82a413c6f0ed8d53
msgid ""
"``LOCALHOST`` means a node will only try to discover other nodes on the "
"same machine."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:32
#: 1bebe96203f946b0a4ef9b8ea6483c08
msgid ""
"``OFF`` means the node won't discover any other nodes, even on the same "
"machine."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:33
#: 00be93a4763a4c288e6f785bbc08a79e
msgid "``SYSTEM_DEFAULT`` means \"don't change any discovery settings\"."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:35
#: 293aa5278a1c499faba4f3d59bb71361
msgid ""
"``ROS_STATIC_PEERS``: is a semicolon (``;``) separated list of addresses "
"that ROS should try to discover nodes on. This allows connecting to nodes"
" on specific machines (as long as their discovery range is not set to "
"``OFF``)."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:38
#: 776de17d199145c59aba678b4a214322
msgid ""
"The combination of these two environment variables for local and remote "
"nodes will enable and control the ROS 2 communication discovery range. "
"The following tables highlight the discovery range behavior for possible "
"combination."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:41
#: 07dc3e665f7d4066b62cf5fa251ef243
msgid ""
"A ``X`` indicates that nodes A and B will not discover each other and "
"communicate. A ``O`` indicates that nodes A and B will discover each "
"other and communicate."
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:44
#: d8fff0e5c7d846da8b9ae15b61dafda2
msgid "Node A and B running in the same host"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:48
#: 251f8cec95dd4493965a0bee23c486ae
msgid "Same host"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:51
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:138
#: 3d95ca45242a489e8f2d2daac23ce3be cf1122184e0b482d8d65371a9c195875
msgid "Node B setting"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:60
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:76
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:147
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:163
#: 3b2beff34ab2456f9c9f0bd384d50965 80ee4d62f3fd40febdf3a4d995f15ba7
#: 8d594731170549f3b38e55bcd22dc734 f0245fcca4ed4038a085ee5ca97876c6
msgid "No static peer"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:63
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:103
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:150
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:190
#: 1385f305fe8a47f697992fc2cd5898fd 5b08f3d6a3a641ccb02940be44a77732
#: 94391fcdbd084903809d013c11110c7b c9b680e92d804f42aae7365fed3292f3
msgid "With static peer"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:69
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:72
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:77
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:104
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:156
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:159
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:164
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:191
#: 0d26000d1d1f4f9eb0bd86bdff36d523 2df393bf79f64efdaabea4e664f101c4
#: 4cf224cc6d66441c85f6b51796127760 6b513959772a47048b40427bcabe37d0
#: 86da4d0e55214247a0a7391355b4ee61 c2865fc999464f5bbc98bd70738d7bfc
#: dc280621a5df40a1b925b89f044353b0 ef63c9bf01724572bda963115742a58f
msgid "Off"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:70
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:73
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:86
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:113
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:157
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:160
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:173
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:200
#: 0d21abbbad814c638e154684c1db9282 816c5e3f58f848a1af623efdca97ad25
#: 82ff307b25f641ee92f04fdb17e5252c 984d012186f340f08efd2997f5df5f05
#: a806139ddfc442ba81b87eca1a8efe73 baed513303634c7980d6d978504fb75f
#: bd0df4a83e5e4bfcb2ed67df2c3636fc edc3d240d402422081591de8acc914ac
msgid "Localhost"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:71
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:74
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:95
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:122
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:158
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:161
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:182
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:209
#: 1c20366a41ee42b1a26beff3c966d6c6 43fe52814cec48e3a02f88b9d01746d9
#: 6837f1c1eb4b4ae9811376f5fcdf5ef4 6b0bb784a5954ac2b3c81eb0aa5ecf3f
#: 86a801ee15f44ee49094e275a599badf 9f2563d88d834adfb41d9523184388c8
#: af836eee31e545a79c8cd185ecabfd0c e55254ab10b14e06932157647f5fc6cd
msgid "Subnet"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:75
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:162
#: 79a7f9ad98b543e8bebe9423d690ab49 bb13db7bebc546fe97c01e21dc96a7ad
msgid "Node A setting"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:78
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:79
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:80
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:81
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:82
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:83
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:87
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:90
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:96
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:99
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:105
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:106
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:107
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:108
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:109
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:110
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:114
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:117
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:123
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:126
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:165
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:166
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:167
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:168
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:169
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:170
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:174
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:175
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:176
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:177
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:183
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:184
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:186
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:192
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:193
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:194
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:195
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:196
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:197
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:201
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:204
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:210
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:213
#: 115010ad1c7b48f0a35dd5a4010dd3c7 14820f7132e74377a42050aa32f10407
#: 17928e3a61e34a80ab391077bd8b8578 1bfdc8a2d56d4124a726b5d2c69db44a
#: 1f65cf4acdf6447ba34f02c8b3e45e20 266ae36a0cfb484982e20dbd2d56ce68
#: 42b48fa8ab3c43adba27f6bface05363 4f5ccf179bee46f0b72da9b856e2444b
#: 523a4d98f11648c39649b4721c4ffea3 568964a885af473fbc3ceb9c1be3541a
#: 594556040d52415f8699e8dc54446091 5989b51aac0c4c1b8ddc0fcad699c61e
#: 5bd19bf56dcb400aa613f3dcbeea0ec8 5cb5d7438371457a972bb17c1bd5586d
#: 61689b3f43f64e359df4c4e4ad4c9d02 61e2e34b66754bc6a6e68ed59073fdbc
#: 6600cd89094241ad9bffe4873f549aad 6abefe27db8841d4b74c74a175d27be1
#: 6d3a580085d4400593725a0dab5b7fb3 72fc10f89a974673b123117349ad94ef
#: 74723b1ab4eb41ca9674c3c45211daa2 7b8c81ea62db43339a0b91b56f3a03f2
#: 8517aa6dc1fb4aed90e744c798f11f2c 88258081004e4724adb5775588429409
#: 8edd06ced39b48ce86281e98f9df054c 90abaa54a34e4ef180a2ff7c57416051
#: 9ce4c9b09257428e878dc4ad677d4cd6 a4c0bf14e4524057aa882a67dd6a6053
#: a7929228de5544d8a5fb8574baa618a4 a9a6aa9c585e4efdae934d5ab325d5ce
#: bd89c1377ed34c6a869a931d88951a63 c5c94433f4414175b71c49237165cd07
#: cb6e38546ad5493b81522a6ab15f9a9f cbe6a2f9dae54c6281474bc3b9e1c442
#: d4ad8fca07e646268f1afd0309ecdd50 d4feaefe28f2419c81f159261b5e6414
#: e2266ea2dc9e4b679c958267a4101e92 e4c129d947614276a49471422a066c74
#: ee874174d4514dc4b79cf090e51e2e35 eefb59e3ab2446fa8f55a3581550cf6b
#: f2f48488efdf400f881912f8cb198ab2 f8b08331ff6c47a4a5c4b0bfcb6835fc
#: fd1a216ddcec48489f16d6247f09b263
msgid "``X``"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:88
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:89
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:91
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:92
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:97
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:98
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:100
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:101
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:115
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:116
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:118
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:119
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:124
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:125
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:127
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:128
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:178
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:179
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:185
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:187
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:188
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:202
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:203
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:205
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:206
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:211
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:212
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:214
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:215
#: 0255cd8a269549aca763d9d2786d30ce 0820caf0d9244f5897fa145fe0e7bd77
#: 10fc57ab1b774e60ac3d0fa857aa518b 121121a0a43f4ccfb4563a587452e5aa
#: 159c51b9a32b402c818d710a688a6ae0 34eb313f053e4d56b384b382a647b248
#: 34f581cca809454b8efbda500eca1de7 368a67435bc148428ad1c39768fe8718
#: 52db22f4743b42db9f13a9e6f9332e6a 66047902780444379637f80636fa2a59
#: 6b209dea4d3f4b44b51e3c8138a1008c 6c986108025a42e0b2c22c5dc7d19c49
#: 6cd5baa864a94e54bb74e8af811f0dbe 7c89bc6e2b174b48805d043abad34477
#: 85cd92a7e8174daa8d35168d2f6746e1 86199a3fb18d4de59c0543fb56212243
#: a40b6de19f534fa38d498884528d95b5 af338265d73e4825a33234bb9fedd6b8
#: b8f103aec7614340a0c6a651692cfbc2 b9a9362361e846c8ab2479eb710a9835
#: c43e06a78f3d46cc8bf9d9c3ccad1bf3 c6bf87fc47b643b59fe5b265d84f2f11
#: c8e8d69edc014616a86d711ee8583c9b d5159d89869e455884107c24c3dc5e34
#: d777e9c3fd894822866b2acf0574ca2c e12518f7399249fc9de5854172fe06c2
#: e75b06e10e23471db2d6151da1093dd8 e7bdf3f7555d409f9bec13b8994c3ed1
#: fe5fade305ba45d1b9774665ee8e980d
msgid "``O``"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:131
#: fe7ed3f781d442028a5de45527311dfc
msgid "Node A and B running in the different hosts"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:135
#: 2ed8b21da07646a7bd33e98a6c4274a3
msgid "Different hosts"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:221
#: ae1db7b169c5469bb771c81a1986fb8c
msgid ""
"For example, the following commands will limit the ROS 2 communication "
"only with localhost and specific peers:"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:232
#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:246
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:175
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:187
#: 771ea7faf6424fcba0a8d69751019c6b a2ff91d525cf4ad8bc6ea26dba90c25e
#: ee19c9ac109b4f0d808295d93b45a977 fa4fbf4a405648beb2f616cc0d37e2c2
msgid ""
"To maintain this setting between shell sessions, you can add the command "
"to your shell startup script:"
msgstr ""

#: ../../source/Tutorials/Advanced/Improved-Dynamic-Discovery.rst:260
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:199
#: 60e7ba5b46ab4178937e117b4f3586eb ea4c55daf89546d489bccf6db2e346f5
msgid "If you want to make this permanent between shell sessions, also run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:8
#: 6388efb8e8724cd4aba022b22ed1947e
msgid "Recording a bag from a node (C++)"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:10
#: 061c9ef81de84765948f5ef40d2d3b43
msgid "**Goal:** Record data from your own C++ node to a bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:18
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:18
#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:19
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:13
#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:19
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:20
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:19
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:19
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:18
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:17
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:12
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:18
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:16
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:19
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:18
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:18
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:18
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:17
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:18
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:19
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:16
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:16
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:18
#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:18
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:18
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:18
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:18
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:18
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:18
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:18
#: 01e016bc62744c5c9accf2705a3d8ba6 0313dd36f4324dd18031747313bb0a72
#: 056ce9d966f2415780f1dcbe0ebbd645 0fee83ecc56243868a0afcd342ec129d
#: 10d067b1b76d4abfb9ea34a62628f493 13b56f6f3d124e629be374f5039e10f3
#: 1ed5454226e74ed391964ccba03696ca 24631e6703fb40bdbd0aac84e5cc0439
#: 24bc567cebbb476bbead3b471e182f3f 2823db265e2149b292563285eb753fbe
#: 2b7027cd66a74059ae96c1ba7dd27923 2ebcc65713ee40669d57ee9cf5d11289
#: 3161ac973d454c29b6b1b2bb171c1b99 3895e85db129499799f90485fed1e8c4
#: 3a8913ee0718480f9a76ce5704e89794 3c334b9184674dbe860e1a2a5e867666
#: 3e2ddc2587dd4f6db621a1f112069e3c 42249e5ccc2146aa8c0740a93773acab
#: 45a301a1b50c4460803c868ee729a5be 4a162330774f457c90b558d597b8fd45
#: 4ee551699bc24e259c5c53c83498509b 54d9d4287cec4079a49ebfb5f64f03cc
#: 56ab28643f4947c5a7afffd3611b7bc6 57875087b0724b209fcc73e7a359831e
#: 58dd7ab6452b496fa7d6e999f2cfedce 5a1fb3e2a69c4acca039496237c70491
#: 5b69303235474784ba5176837d13374b 5bd68f6741f143eabbe66d4c7c536763
#: 5f63a37bba764aaa8e784197bb12d86f 66666ae909f44e6d84cf8d7cbafe5df5
#: 66de58ea9bea487180e48a6d3c3f056d 6787512cdf374ceabc397f827b57fcc0
#: 7c3b9272cdc742e680ef13154c5562af 7c7037f4ae87497aa7e2593818042dd5
#: 7f7b49052ab3441981a1a025871e052a 8249774dbf2245a791274b362a122302
#: 82626ce826f14ddbb39f586ad97e6302 934d9f5227af4cc58755a3f8fee05db4
#: 966948b134134e6cbbcf73f88722fadd 97a24ee655b140a2a00f69ac8c321a29
#: 9ccebcf626564b4ab7b719dee07bb419 9f093a8724874e67b68d0d960a219ea2
#: a7ff8c54d3fe41ed8f34b21f36f519b0 aa8a10c16a504b76818bda9cf6e031ba
#: ad8500f7cfca4fd6bc1e1c6e8ed0f66e b1eeae6d6e7c42f48c5ba403463554e8
#: b290af0291594b52bfed9a2c0fa9d6e7 b3004be3f3b94711be635b29847909f9
#: b82d5ce0ff7a4521828d1fec4c72caa8 bd5f930b256143d4b66483a2f992d631
#: c14126894916462098563e7162c52f82 c65c3e7e10ca4d9385240425f7804c9b
#: c8cfcceea8494282b9fa740bc474360f d4f29bc273fd4715b7ff3cb941cdc241
#: d867b372ad1544d197cf806c1cf0c801 de8906b8752d49bd98651513f22083e9
#: dfcd693486a14dc2a5c7a5cbb1a95b55 e2b3adb6526f40be92cc5deebfa56890
#: e63d4ec3847e4adb97f605c5aff93b26 e8816f759dac4ff78816f7fd658ef4c5
#: e969f50c00ce4d47a033f7e730042487 edf66ecab6ed4433a4c2c1d4b03f2b0c
#: f13c49c8eaac4ae3b1789069cf6b41a3 f815eaa49bc448e3bb5a5644b8aaf21f
#: fe85b33ac4ed46ba859b2e636ac70520 ff16f635a895400ca372385f889628a5
#: fff0ecc84b6d41acb85a7234bf6ab3c1
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:23
#: ad66c417980b46baa495b57df603752c
msgid ""
"``rosbag2`` doesn't just provide the ``ros2 bag`` command line tool. It "
"also provides a C++ API for reading from and writing to a bag from your "
"own source code. This allows you to subscribe to a topic and save the "
"received data to a bag at the same time as performing any other "
"processing of your choice on that data."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:30
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:33
#: 36c9103042864637afd21fc736126b52 5c9a1b3163d34e4a8f400d7d3de2db15
msgid ""
"You should have the ``rosbag2`` packages installed as part of your "
"regular ROS 2 setup."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:32
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:35
#: 3270691b282a40faac4c2d5783268595 911d976fb9dc42efb8d30343ce787dab
msgid ""
"If you've installed from Debian packages on Linux, it may be installed by"
" default. If it is not, you can install it using this command."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:39
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:42
#: 193262e3e0ce432b826d9ff4cc8292a3 9198de652e8a487099143e4dce79658d
msgid ""
"This tutorial discusses using ROS 2 bags, including from the terminal. "
"You should have already completed the :doc:`basic ROS 2 bag tutorial "
"<../Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-"
"Playing-Back-Data>`."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:43
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:46
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:33
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:32
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:46
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:45
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:30
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:55
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:41
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:48
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:43
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:42
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:48
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:45
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:50
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:37
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:41
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:43
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:39
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:45
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:125
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:37
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:36
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:39
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:44
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:34
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:34
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:35
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:35
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:37
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:34
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:39
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:42
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:34
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:44
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:44
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:30
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:30
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:39
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:34
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:39
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:39
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:38
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:34
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:34
#: 04c3315dd4664b0980fd50985362ac1b 0eccde96709544dd9ecbab9ff3515a83
#: 0f7a481755e84ce9984d1906f24ea7be 12bea7349d1548bfa0ec6b9dc7c13d10
#: 1543947aacc8463c990bb10f27bfd4f2 19b6469f4e60437ca8b2fe1330db55eb
#: 1d154c5883064c6e92e4feab2a18529d 1f97664578c34ca2a07e8fac1731550c
#: 23d0ecfb7c2a431eb773bc5921bb02ab 330cffaa35f842cb80282a23cf79fb2e
#: 3e9bb2375197455dbe2339f74012b94c 40d792a707904a2596318ecc61f12bec
#: 4c35657dc79e48e8b3c492c03926e85a 4cbfd0778b174b6f90db0392a92ea51a
#: 502295be26b14e7480d06509de6fac97 51a3e1cbd3db4700a23670f774518bde
#: 53c26fc50e6844009e3583ca18f9e0a8 5be34367e55f41d3a41e45ee66882498
#: 61286c1db81d4cbaa80748eb03585c5b 6204cd29cb13407b829e0ab7f05a4c04
#: 627079d3a5a84b6b9f1035cf2853b53d 63d6b982998c49d78620eb0f9f62d08f
#: 6ad1466c46f144939e52081db1eff7ec 6ae27e01bfea4017ac5509cbc19feeb9
#: 6cef7ac13a6148a8aafcafbe1609d6a6 75f759ea4ba94864b5c10c9ce1964810
#: 84b0143b8ebd49149598f8fbde9bce0e 884b4b19347f48ac8151d6c4a4a8ecb9
#: 96efe357ed704ac8a43fb65220f569fd 98555b9950da49ad9dd5a589f4e2960b
#: 9dec5dba178a45b986bb644659bc05fc 9fce15b6518540ac97dd5c494b70a58a
#: a043dbf090304dbab959d86095b9b55f a3b52ae7207c4537a363d8888d2a8e15
#: a60c7868ec98427e8f1eb2197849f31a a6a3242cfe394fbdbe1be12c24ed24a9
#: adae01e550e04c45b505e891a8c62451 bdf1452d1c734ed692ec479a8f53f256
#: c160bbb4d29244d3be3646dcbf5cdec2 cabd66308f7f482a812241af09f8a97a
#: cf44378e4a5947e4aad21971bc544a21 d06d9cd626bb4e589a764688f0eae9af
#: d15c3d5e2d8c45f6b273e3afbdf0c21e d9c6d2e5c9cb4598a402c3da181d9449
#: e67c6c92a67944a7a75b603eced85555 e6f392a15ffd4fb59310d3af6ad9be39
#: e84d175d459d4878a9d7ee916aeeb589 ec0b32c0b50a4747a8b921eb9c8b056f
#: fd983828555d40f090d0d6b3d6bedf11
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:46
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:49
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:128
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:47
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:37
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:37
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:38
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:38
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:40
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:37
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:37
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:40
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:42
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:42
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:41
#: 029f41c4ba0e49bea0f21c19a3d156b1 0d73c741c2b34adeab507d9fca26113f
#: 1cf3573d9c00416fa77821ad4e7a8a5e 4b7a29a2d5254536bc5f961fc73edd1b
#: 50eec12cf2864646a2707b81e8d31f0b 54196e8ea5104f4993e0b8826490ceda
#: 5b5265e2e0ac4784a4822ba96973ec33 778255e119d24225b69b9b375b691a94
#: 82958d85cd634c8bb309dad86220a8ae 8d6b6543e75e4ee69cf946ec8dce883b
#: 98a308b1729e44059784dd9ddd1622e7 e7cbc54792504a6ab6a18624f9372588
#: f3bc063e871e436cbb31888f000fc27a f523519131f041618fe809fcb786e6b0
#: fc96bb8d108a4d6d8c9d96dc6642c4ff
msgid "1 Create a package"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:48
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:51
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:39
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:39
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:40
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:40
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:42
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:39
#: 1491efb056944a3d99a34e41e5bb31fb 1980b1acfde0451da9e3a5f56fab5b25
#: 378f1dfb09c642a9b7cbc74d7f2224c9 94523484a48b4148a00c764f552b28d2
#: a8756058865e4e6ca68862ffab57b7f9 bfe4ea5764854b54bf9458a0dd6b05ca
#: c3072a42146f4e64a008267aa284a883 e912b45d498f421187aa8c773393126a
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation "
"<../Beginner-CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` "
"commands will work."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:50
#: fe9e83a502cb4320859ffc9c8756d9ee
msgid ""
"Navigate into the ``ros2_ws`` directory created in a :ref:`previous "
"tutorial <new-directory>`. Navigate into the ``ros2_ws/src`` directory "
"and create a new package:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:57
#: ebf6b45ecb714979bf86a7788fc09027
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``bag_recorder_nodes`` and all its necessary files and folders. "
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml`` and ``CMakeLists.txt``. In this case,"
" the package will use the ``rosbag2_cpp`` package as well as the "
"``rclcpp`` package. A dependency on the ``example_interfaces`` package is"
" also required for later parts of this tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:63
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:55
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:55
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:66
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:65
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:58
#: 0e732db9d0224da98b9c751340fe1d9b 5b3f864508ae4b6b972c09306d9dd329
#: 5caceaaa0f59494db0cacc185d88efd0 61736335aa7d4fd8885d78ad6ecfc1a5
#: b6b28f5d6af848a2ac1bff19e8f946e5 d783dae02c54496e9c4d734955903332
msgid "1.1 Update ``package.xml``"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:65
#: 47de5455158a4875902c8c35e033da35
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don't have to manually add dependencies to ``package.xml`` or "
"``CMakeLists.txt``. As always, though, make sure to add the description, "
"maintainer email and name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:75
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:68
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:70
#: 14c51c2652784215a217c58503ba8bc8 33dac5249dc4456a9730b04bc6dfd755
#: c99b504098d14c12b7f88c7535fa58e0
msgid "2 Write the C++ node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:77
#: 5e0c14f100ef46acb7f6fe84140dfd17
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes/src`` directory, create a new"
" file called ``simple_bag_recorder.cpp`` and paste the following code "
"into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:124
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:143
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:117
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:109
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:141
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:116
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:139
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:129
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:118
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:437
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:405
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:438
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:276
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:287
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:170
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:194
#: 01ed238e11fd4ef59c9447114e78784e 1652fa30744a47fc891c1fffcbbd104f
#: 229f9b5a564c449d817138570f943cbf 398e979865e74dc1b90d6bc448c382b2
#: 4963f32353e94f8e937a1cafd138098d 4f0938179a684683a4c2ca7dbbac83c1
#: 6983eca1cccb4e3eaa92767c3021f78f 6f6d3fea36a44524a60bee1bf83923bf
#: 8444d25ea07140c394cc8bd520d36c8f 8ab0dbb5518c49efa2622db0d038638c
#: 92530b96874f42a6a25577915b48b77f a67e9bba14194ff2bada548507279cad
#: b49104aff4d94a8ba8639017f0fb59ff c2b2f705e5fd4fafb924f2828b927cfe
#: e62011362424462eb5079b8ce8bf0a02 f2731d497ba04ff98c895814249e3db9
msgid "2.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:126
#: c50faa9cca99446585f556872ac3e56c
msgid ""
"The ``#include`` statements at the top are the package dependencies. Note"
" the inclusion of headers from the ``rosbag2_cpp`` package for the "
"functions and structures necessary to work with bag files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:129
#: 325131183fe44f51a0b36e32363c4d1f
msgid ""
"In the class constructor we begin by creating the writer object we will "
"use to write to the bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:135
#: e75bf0f30ec84bfcb7abe25ea37c9ae3
msgid ""
"Now that we have a writer object, we can open the bag using it. We "
"specify just the URI of the bag to create, leaving other options at their"
" defaults. The default storage options are used, which means that an "
"``mcap``-format bag will be created. The default conversion options are "
"used, too, which will perform no conversion, instead storing messages in "
"the serialisation format they are received in."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:144
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:180
#: a40c88f359a5485fa5cc0f31bcfa6b73 f77270687618429398be92922aa29149
msgid ""
"With the writer now set up to record data we pass to it, we create a "
"subscription and specify a callback for it. We will write data to the bag"
" in the callback."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:152
#: 485866bbdca34d0c890e2a425a613cc7
msgid ""
"The callback itself is different from a typical callback. Rather than "
"receiving an instance of the data type of the topic, we instead receive a"
" ``rclcpp::SerializedMessage``. We do this for two reasons."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:156
#: ee357228fc614e16ace25aa94e3ec729
msgid ""
"The message data will need to be serialised by ``rosbag2`` before being "
"written to the bag, so rather than unserialising it when receiving the "
"data and then re-serialising it, we ask ROS to just give us the "
"serialised message as-is."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:157
#: fec36c5b735447ea8086068e52cf2298
msgid "The writer API can accept a serialised message."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:164
#: 24784a9f78c143b187292b3003a3620c
msgid ""
"Within the subscription callback, the first thing to do is determine the "
"time stamp to use for the stored message. This can be anything "
"appropriate to your data, but two common values are the time at which the"
" data was produced, if known, and the time it is received. The second "
"option, the time of reception, is used here."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:172
#: 7539045a1a0a478e8ec4292d56f98934
msgid ""
"We can then write the message into the bag. Because we have not yet "
"registered any topics with the bag, we must specify the full topic "
"information with the message. This is why we pass in the topic name and "
"the topic type."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:180
#: 370e7a425e374260a028e5a77d1851fd
msgid "The class contains two member variables."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:182
#: 3d31f080bfac463795ac344f7b6e8aef
msgid "The subscription object."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:183
#: 4ccb62851baf4420a86b9cadad71e99e
msgid ""
"A managed pointer to the writer object used to write to the bag. Note the"
" type of writer used here is the ``rosbag2_cpp::Writer``, the generic "
"writer interface. Other writers may be available with different "
"behaviours."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:192
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:205
#: 451e4a77fdbf488f8048f85b791dcc58 ed08beab67554fb4940b13f2dfb4e65c
msgid ""
"The file finishes with the ``main`` function used to create an instance "
"of the node and start ROS processing it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:205
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:206
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:167
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:168
#: 01656305b06d473ba4d256d00ba2eaf9 052019fd4bf94a279239ae216861fb60
#: 37a2ee359a5344a2a7cdd1898838f775 c073f226f7a745068d164f7c9daf57f3
msgid "2.2 Add executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:207
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:160
#: 2103529b2d4b46238bd7597cf8f39f76 f260493c11ff495293f54a8db06804ea
msgid "Now open the ``CMakeLists.txt`` file."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:209
#: de47c2eed39945f3a87457c795d5cf87
msgid ""
"Near the top of the file, change ``CMAKE_CXX_STANDARD`` from ``14`` to "
"``17``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:218
#: b5913f4d7cbe4bd5ac544ed8907d6472
msgid ""
"Below the dependencies block, which contains ``find_package(rosbag2_cpp "
"REQUIRED)``, add the following lines of code."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:231
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:230
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:222
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:213
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:183
#: 1a0d073aac094b8f8c9d0912bab5fc39 5c653658c0c840f68ec0ba092d27de7a
#: 6ce7fc13e9e74cc9a7130e255f2a9f14 d4d3f30cf74d425b8ec448c5e38d29b8
#: fc3630db99a941f4bcd615ec996f81d4
msgid "3 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:233
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:232
#: 322e69083c3f42fa91862672f85b3e45 780c4dbcda6149dc8fd82477de778b50
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"new package."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:255
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:455
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:254
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:453
#: 4ea8b17333b44f3d83569ade7575d265 63477688877a48ba8d0209ee64d6cc60
#: b8d68d8edeb942a8adda17027e3ec81b f097cab04b7b4868a029c44f1c1472d9
msgid "Open a new terminal, navigate to ``ros2_ws``, and source the setup files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:277
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:479
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:276
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:477
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:306
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:286
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:277
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:231
#: 1fb75ab492764438953084718f38792c 2a416850cf114c7788bfb6a5844670a2
#: 3ac4a5ac7a6c464e9e0563c45cfb1cfe 3ec0c2dea2bc41a99dae2c3c4a22e3df
#: 6b80e1dd37c84c85a98fae3cc8402f09 84bc738f16ea4be68a329570c128e904
#: a50280bb917746ac877cf1dbba370379 c969cfddc1ed4d03939f9c7139167c78
msgid "Now run the node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:283
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:282
#: 2da9441639a1400caecfb34ae8b2136d 8dc63b85a78d4596a86c80ab2950178a
msgid "Open a second terminal and run the ``talker`` example node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:289
#: f683a6c2640e48bca191cac257d3a3d0
msgid ""
"This will start publishing data on the ``chatter`` topic. As the bag-"
"writing node receives this data, it will write it to the ``my_bag`` bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:292
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:293
#: 457f2d63300541bb8cde0698e967665d f92dd648fd0b4c9280bbb5f010a42899
msgid ""
"Terminate both nodes. Then, in one terminal start the ``listener`` "
"example node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:299
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:300
#: 023366311cda4121a6ad24d0d9090c71 1a99bc2e0c3e495190d4b1c8bef1e2f3
msgid ""
"In the other terminal, use ``ros2 bag`` to play the bag recorded by your "
"node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:305
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:306
#: 3ffbf3bb024342bf90e1976f6783d5a4 bd04deeaa8ec4192a86451d744dc3b63
msgid ""
"You will see the messages from the bag being received by the ``listener``"
" node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:307
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:308
#: 94903a4ae4934b0aaf43310871799c39 cb22f4051c0f4d51b72df9c5f7ce57e5
msgid ""
"If you wish to run the bag-writing node again, you will first need to "
"delete the ``my_bag`` directory."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:310
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:311
#: 03212eae87074de5932d2a05b27a50ae d6b3f24ebd5c4d94b1cc88184113a4d1
msgid "4 Record synthetic data from a node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:312
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:313
#: 665cca74a3c74a4ab7898fa14fd789bc f5198cf54ef34856b1214866887d0a03
msgid ""
"Any data can be recorded into a bag, not just data received over a topic."
" A common use case for writing to a bag from your own node is to generate"
" and store synthetic data. In this section you will learn how to write a "
"node that generates some data and stores it in a bag. We will demonstrate"
" two approaches for doing this. The first uses a node with a timer; this "
"is the approach that you would use if your data generation is external to"
" the node, such as reading data directly from hardware (e.g. a camera). "
"The second approach does not use a node; this is the approach you can use"
" when you do not need to use any functionality from the ROS "
"infrastructure."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:320
#: 5f2a7bad55f3428baa21f4885a07fde1
msgid "4.1 Write a C++ node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:322
#: a886011bc106419dbefca6bd63ecf010
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes/src`` directory, create a new"
" file called ``data_generator_node.cpp`` and paste the following code "
"into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:377
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:374
#: 06f681533cb344dc8b802ae746118b59 bdb3e4e8d59c414ea95570e43d8c046b
msgid "4.2 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:379
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:376
#: 905b5ac20fc74637964ed211e24bd344 911088a305af43459fc59d53a57bda31
msgid ""
"Much of this code is the same as the first example. The important "
"differences are described here."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:382
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:379
#: 41ffd5362c9440d7a45c66d3de687cf2 a7b69dac74de499a915ee43e36fd6d0f
msgid "First, the name of the bag is changed."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:388
#: c625188134e14e12b6ec372e95e541c0
msgid ""
"In this example we are registering the topic with the bag in advance. "
"This is optional in most cases, but it must be done when passing in a "
"serialised message without topic information."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:399
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:397
#: 236278fe32434bec8198be3913b8a2ac ea7ad124c8574f3b86099c576c6327f8
msgid ""
"Rather than a subscription to a topic, this node has a timer. The timer "
"fires with a one-second period, and calls the given member function when "
"it does."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:406
#: f1bacefdb22743899a419628b4934557
msgid ""
"Within the timer callback, we generate (or otherwise obtain, e.g. read "
"from a serial port connected to some hardware) the data we wish to store "
"in the bag. The important difference between this and the previous sample"
" is that the data is not yet serialised. Instead we are passing a ROS "
"message data type to the writer object, in this case an instance of "
"``example_interfaces/msg/Int32``. The writer will serialise the data for "
"us before writing it into the bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:416
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:415
#: 1c13da42b80448db9bea9caed7feb552 24a9dcdc900348e6b573ad969c81a65a
msgid "4.3 Add executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:418
#: f55f7ac254de4cb3ba9f622e885b5229
msgid ""
"Open the ``CMakeLists.txt`` file and add the following lines after the "
"previously-added lines (specifically, after the ``install(TARGETS ...)`` "
"macro call)."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:431
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:429
#: 1415be12b4b34b24b9aa92c77e759265 a36ea86db5fe451797f18e15663e24ad
msgid "4.4 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:433
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:589
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:431
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:589
#: 08f642ae36df461396dcd05df3cf8b0f 1d548c598c3f46f9bced0164820a9dff
#: 71c9184fe80640a4a8867907e8c16062 91cfaa83ef724300b4185fad4d007d09
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"package."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:477
#: 2f2e0f2939cc46c2a82157ce8162c7fa
msgid ""
"(If the ``timed_synthetic_bag`` directory already exists, you must first "
"delete it before running the node.)"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:485
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:483
#: 0ba09b6bf4cb4a0780961c2946411560 8a57fa4b330148b08b412ccf4323ee95
msgid ""
"Wait for 30 seconds or so, then terminate the node with :kbd:`ctrl-c`. "
"Next, play back the created bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:492
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:649
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:490
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:649
#: 19a3cd1dc389409fbc6e4bde2eb51026 35514bbc5b354e7ebe96afed8a38a4ca
#: 35a8334487564b86aff490ec69704f14 ceefa9a782b74c48b869a36a0372449a
msgid "Open a second terminal and echo the ``/synthetic`` topic."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:498
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:496
#: 545d53a09b884b85bff50f01141523b5 96d7409557fc4a5b89b40f6b35dd8961
msgid ""
"You will see the data that was generated and stored in the bag printed to"
" the console at a rate of one message per second."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:501
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:499
#: c6a623c49be94dad936aa912f8987991 f8d585cec2104063a16a17654b97b929
msgid "5 Record synthetic data from an executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:503
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:501
#: 6e7f1f83953a4b51bb18a8d8b2bbd581 d98ee39eaa3544d58b2e6848adbfc053
msgid ""
"Now that you can create a bag that stores data from a source other than a"
" topic, you will learn how to generate and record synthetic data from a "
"non-node executable. The advantage of this approach is simpler code and "
"rapid creation of a large quantity of data."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:507
#: c931618c3158462d9db0a2a92def483e
msgid "5.1 Write a C++ executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:509
#: 9c1ba3db6f5c4b6396d9167f65a9e76c
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes/src`` directory, create a new"
" file called ``data_generator_executable.cpp`` and paste the following "
"code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:550
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:548
#: 18f45500294442f5959baec2706af409 f9ca1519ad36493bac3d561708e71388
msgid "5.2 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:552
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:550
#: e2ddf29fc76140a7838e9705470d05d4 f85e6b934d674db79703077f36bb2780
msgid ""
"A comparison of this sample and the previous sample will reveal that they"
" are not that different. The only significant difference is the use of a "
"for loop to drive the data generation rather than a timer."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:555
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:553
#: 76587152acb8458a8c35ced9e64e817d be6c59e1e81548fc8f78ea8f85d86e79
msgid ""
"Notice that we are also now generating time stamps for the data rather "
"than relying on the current system time for each sample. The time stamp "
"can be any value you need it to be. The data will be played back at the "
"rate given by these time stamps, so this is a useful way to control the "
"default playback speed of the samples. Notice also that while the gap "
"between each sample is a full second in time, this executable does not "
"need to wait a second between each sample. This allows us to generate a "
"lot of data covering a wide span of time in much less time than playback "
"will take."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:572
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:572
#: 3f53df53b66d419cba4beee5d50cfe14 74008ba246c34be7b7eac3cca7dc335c
msgid "5.3 Add executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:574
#: 3159139959ef4c53afa54cdc7b74258a
msgid ""
"Open the ``CMakeLists.txt`` file and add the following lines after the "
"previously-added lines."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:587
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:587
#: 8c6461e8773e4fff856485f14de94fc4 da47049d2b0e4d3199bbf0accf086fa1
msgid "5.4 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:611
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:611
#: 6daa308f38db4a1188587f14ad57e8b2 a5dd4120be3e466aa0dbe13f0f19b96f
msgid "Open a terminal, navigate to ``ros2_ws``, and source the setup files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:633
#: 0b1fb912f73c4137931fb256b1342a9e
msgid ""
"(If the ``big_synthetic_bag`` directory already exists, you must first "
"delete it before running the executable.)"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:635
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:635
#: 0e931734620447da946a7bcb69484363 dad4f3cdf9b24f51a6bcae0f47e689ff
msgid "Now run the executable:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:641
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:641
#: 6b63ed0127fa442a88204d86a6bba86f 841d54bdb6bb4e8aa3c72e705a6e372a
msgid "Note that the executable runs and finishes very quickly."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:643
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:643
#: 40f6276af674474aaaf48ac867b9a9c0 8507aa9b3acc4246952c3d62bb88bc10
msgid "Now play back the created bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:655
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:655
#: 9034cbb1211c4ae99baed75bdfdf596a c7337b067c43484194280b292b5db095
msgid ""
"You will see the data that was generated and stored in the bag printed to"
" the console at a rate of one message per second. Even though the bag was"
" generated rapidly it is still played back at the rate the time stamps "
"indicate."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:659
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:659
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:237
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:218
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:515
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:189
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:141
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:324
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:214
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:263
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:105
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:269
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:347
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:184
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:241
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:260
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:323
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:126
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:367
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:525
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:822
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:187
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:320
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:487
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:431
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:431
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:536
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:410
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:517
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:338
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:200
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:351
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:310
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:534
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:396
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:342
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:592
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:547
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:303
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:124
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:97
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:230
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:119
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:118
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:739
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:450
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:471
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:415
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:368
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:431
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:450
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:273
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:385
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:352
#: 0c59c8e6cb6e402db35d9e3c368d22b5 0c8cdd04678240019172ee8b353c8b48
#: 180b3e4df5e34f1e92e45d81dec0683c 1d4555d4b70a472c863a435343ae8abc
#: 1f262d79661b40bf96d950e442640d2f 218e7f6d59fa49b99ada973816b9c716
#: 23d7931a09b44378a763b57423e7fd01 26ae9062849642c98f4f198c43d48792
#: 27d2215d2e2d4e119186298fb1b538cb 28da3141858745ab9200b2f1142a0383
#: 3775d6ab5b274515a118797cd70c71a8 3a7450fbc0504a05a739f6a6c24bde61
#: 3ee6df145b3e414e82036922eb8f532a 4423fffab3f34400ad347741801f5210
#: 46d182366d1843f6b9f84764e22fe6c1 471d4e9c594e449abc61b47fddae2ad7
#: 52ae004d6c42438f8a4146d4ca6fde4f 5a62c4e7c9d749da9ebcafbd12fb0457
#: 61448735aca34008be5ccb5b06610b2f 6752171e4d764b6789079ecc60c495fd
#: 68c19c75deab465da7d823b240eeb34a 6bcab829265742979482e795ed60a1cc
#: 7198928d68cf4fa0a87eeb06c42fe64c 79ecaf97cda747a9a5654731bb987252
#: 7e9533652f5542d88fa149ecc98e3a58 7fad6cf2a15a4778b374ddf2182f2da4
#: 7ff791915f1740c88ec01d6e8d98dd58 84b253bca4844895a96dce76e3a9d78e
#: 973ffbe0c57f4f228c0ea642c0d24f3f 983aa30f679b44f8820183a43e1508e5
#: a7cfc1598d8e46db8d442811a40be372 addbab02d30c4a558e50a66d654241f4
#: af47c1bee42240d2b80eee86da9b3ba3 b28f1199076b44958bedf86836c0b50e
#: b30c856d243941d2804b0dfcbbb4d1ef bb576d3a80994f5da6fd1298174faeb3
#: be33adf9dd8541b0b33a166fe28795bb c2bc27ac827647cea16326c0c28c903f
#: c393ccc569b941a5933781122bc7d0b4 c73338607e4b480ca20741c933d74882
#: cc4f97fb70974c7c97ebe4552907ed02 d4142295d414488f9e927bc168a995f0
#: d85051672a17488d96b782c454f24b71 dd492f44f57e42deba772006c26c7759
#: e2c9b3ad49a44be69e35ae9b3c636aae e5c25e1f980e4a80a6707e203224fd82
#: e6dc84a2781149a89ad68e2e294c8a97 ea0c19d0a6bc44a4b905a0d928e9b5e0
#: eed1f79ae8ac4344b684a1d44dba4529 f3b6b644c4c64bbe80d0731f5419e1b6
#: f794c6997d594f4d8960fd21b6cc73c3 f86a34e6685b4fa59188f9d020e70a2d
#: f96cb6ef6acd467d87e2ee0b2c3a9d29 fa4936c94844444b8fa03e274486408e
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-CPP.rst:661
#: 742dad5042cf4d3d9c5960fa2bab846b
msgid ""
"You created a node that records data it receives on a topic into a bag. "
"You tested recording a bag using the node, and verified the data was "
"recorded by playing back the bag. You then went on to create a node and "
"an executable to generate synthetic data and store it in a bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:8
#: 84222686171849ca9163cde9b633a01f
msgid "Recording a bag from a node (Python)"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:10
#: c84a813a07d144838a03c44304e7a4ea
msgid "**Goal:** Record data from your own Python node to a bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:23
#: 859d8b97bd7a4dd7a1e29a7488cc9fd3
msgid ""
"``rosbag2`` doesn't just provide the ``ros2 bag`` command line tool. It "
"also provides a Python API for reading from and writing to a bag from "
"your own source code. This allows you to subscribe to a topic and save "
"the received data to a bag at the same time as performing any other "
"processing of your choice on that data. You may do this, for example, to "
"save data from a topic and the result of processing that data without "
"needing to send the processed data over a topic just to record it. "
"Because any data can be recorded in a bag, it is also possible to save "
"data generated by another source than a topic, such as synthetic data for"
" training sets. This is useful, for example, for quickly generating a bag"
" that contains a large number of samples spread over a long playback "
"time."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:53
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:41
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:41
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:44
#: 1c2f9350fc4e40eb87671d6a88667190 5257c8adf94345e0b1e0af912cfcdb4d
#: 5bd807194fe24d40aa4cc70a5faa8a6e 94d8768469ba480fb94ebe30ffe05301
msgid ""
"Follow :ref:`these instructions <new-directory>` to create a new "
"workspace named ``ros2_ws``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:55
#: 36876fa225f540c9a1ee3a0cad7e04ef
msgid "Navigate into the ``ros2_ws/src`` directory and create a new package:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:61
#: 889a180fcc21436795a30b91c1fc20c6
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``bag_recorder_nodes_py`` and all its necessary files and "
"folders. The ``--dependencies`` argument will automatically add the "
"necessary dependency lines to the ``package.xml``. In this case, the "
"package will use the ``rosbag2_py`` package as well as the ``rclpy`` "
"package. A dependency on the ``example_interfaces`` package is also "
"required for message definitions."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:67
#: c542f37a998841aeb9633ff8a310afa4
msgid "1.1 Update ``package.xml`` and ``setup.py``"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:69
#: 1649bb2eff184a06be572c2c1d9c3cc5
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don't have to manually add dependencies to ``package.xml``. As "
"always, though, make sure to add the description, maintainer email and "
"name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:78
#: 8c627e4924b8403d8e4a01248df36ffc
msgid "Also be sure to add this information to the ``setup.py`` file as well."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:88
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:68
#: 2676e6bd12d44993ad7e83d3d2976401 ae567ab0a5764581a1c0da984bb6ac42
msgid "2 Write the Python node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:90
#: 54fe9f77696e470291c08a29bcd8cdaf
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``simple_bag_recorder.py`` and paste "
"the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:145
#: a793741d114f49fa9fc71c45f521746d
msgid ""
"The ``import`` statements at the top are the package dependencies. Note "
"the importation of the ``rosbag2_py`` package for the functions and "
"structures necessary to work with bag files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:148
#: de2a9e292d4b4ccfafcff01ca1008338
msgid ""
"In the class constructor, we begin by creating the writer object that we "
"will use to write to the bag. We are creating a ``SequentialWriter``, "
"which writes messages into the bag in the order they are received. Other "
"writers with different behaviours may be available in `rosbag2 "
"<https://github.com/ros2/rosbag2/tree/{REPOS_FILE_BRANCH}/rosbag2_cpp/include/rosbag2_cpp/writers>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:156
#: ae4fcbc4077f4bedb71bfc92afa7df2e
msgid ""
"Now that we have a writer object, we can open the bag using it. We "
"specify the URI of the bag to create and the format (``mcap``), leaving "
"other options at their defaults. The default conversion options are used,"
" which will perform no conversion and store the messages in the "
"serialization format they are received in."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:168
#: 451af11342c24821bdfa082b2314006c
msgid ""
"Next, we need to tell the writer about the topics we wish to store. This "
"is done by creating a ``TopicMetadata`` object and registering it with "
"the writer. This object specifies the topic name, topic data type, and "
"serialization format used."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:192
#: afdd01578b5148eb888edff628990362
msgid ""
"The callback receives the message in unserialized form (as is standard "
"for the ``rclpy`` API) and passes the message to the writer, specifying "
"the topic that the data is for and the timestamp to record with the "
"message. However, the writer requires serialised messages to store in the"
" bag. This means that we need to serialise the data before passing it to "
"the writer. For this reason, we call ``serialize_message()`` and pass the"
" result of that to the writer, rather than passing in the message "
"directly."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:216
#: f8b7bae407ba46b18f96d6d7a6ea630f
msgid "2.2 Add entry point"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:218
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:417
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:574
#: 3defb536a6604b7caf752e9f47bac502 be329d3ffe474bd582155750928d90e0
#: de9ac39c052b451785f393d70261e998
msgid ""
"Open the ``setup.py`` file in the ``bag_recorder_nodes_py`` package and "
"add an entry point for your node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:288
#: dc53907f06d34bf182629dbfda1871fa
msgid ""
"This will start publishing data on the ``chatter`` topic. As the bag-"
"writing node receives this data, it will write it to the ``my_bag`` bag. "
"If the ``my_bag`` directory already exists, you must first delete it "
"before running the ``simple_bag_recorder`` node. This is because "
"``rosbag2`` will not overwrite existing bags by default, and so the "
"destination directory cannot exist."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:321
#: f40d6e617f544404a090ed71aee87860
msgid "4.1 Write a Python node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:323
#: c216f796f50e436bbc5cbb68398c776a
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``data_generator_node.py`` and paste "
"the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:387
#: 4e016ae779c84937a1af54506b36b509
msgid "The name of the topic is also changed, as is the data type stored."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:404
#: 3589b8d70f904f79bb32ff51dec4e4f6
msgid ""
"Within the timer callback, we generate (or otherwise obtain, e.g. read "
"from a serial port connected to some hardware) the data we wish to store "
"in the bag. As with the previous example, the data is not yet serialised,"
" so we must serialise it before passing it to the writer."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:475
#: 2195f343d8aa4b67a07c2bfc1b07fdea
msgid ""
"If the ``timed_synthetic_bag`` directory already exists, you must first "
"delete it before running the node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:505
#: 3d8ee2afe20d45708be9e7a50e968396
msgid "5.1 Write a Python executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:507
#: 0612f5c85b75418daa1c98ceb25e984d
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``data_generator_executable.py`` and "
"paste the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:633
#: 8570d89a11c94d0ba1fad0ab56dd5c1c
msgid ""
"If the ``big_synthetic_bag`` directory already exists, you must first "
"delete it before running the executable."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:661
#: ef1e2180f6b94b30900932b91cd840fc
msgid ""
"You created a node that records data it receives on a topic into a bag. "
"You tested recording a bag using the node, and verified the data was "
"recorded by playing back the bag. This approach can be used to record a "
"bag with additional data than it received over a topic, for example with "
"results obtained from processing the received data. You then went on to "
"create a node and an executable to generate synthetic data and store it "
"in a bag. The latter approaches are useful especially for generating "
"synthetic data that can be used, for example, as training sets."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:8
#: ef9464a86acc4f4aa24f865649b11c59
msgid "Setting access controls"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:10
#: 23b17109950b46b2b983c0a9fff2c853
msgid "**Goal:** Limit the topics a node can use."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:24
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:24
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:24
#: 62c575fd131640689bbaa3d228dd4b74 85f44aa968c242fba03a98b032de0a9d
#: 9a43c8cacf0e43f99e975595aea61aad
msgid ""
"Before proceeding ensure you have completed the :doc:`Introducing-"
"ros2-security` tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:26
#: 1d91bf57966d476cb69efaed1f3127f2
msgid ""
"Permissions are quite flexible and can be used to control many behaviors "
"within the ROS graph."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:28
#: e4762476375945108492335edcfb6993
msgid ""
"For this tutorial, we demonstrate a policy which only allows publishing "
"messages on the default ``chatter`` topic. This would prevent, for "
"instance, remapping the topic when launching the listener or using the "
"same security enclaves for another purpose."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:31
#: 37183542648e4b83891ec40e2933e31f
msgid ""
"In order to enforce this policy, we need to update the "
"``permissions.xml`` file and re-sign it before launching the node. This "
"can be done by modifying the permissions file by hand, or by using XML "
"templates."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:36
#: f0dd0a4b25894e64a185cda781f5b8ba
msgid "Modify ``permissions.xml``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:38
#: 1c1084c6bbe446dc9fc9d378f8af5fca
msgid ""
"Begin by making a backup of your permissions files, and open "
"``permissions.xml`` for editing:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:47
#: 9327179fb7ac463d97a1e382a3cddb76
msgid ""
"We will be modifying the ``<allow_rule>`` for ``<publish>`` and "
"``<subscribe>``. The topics in this XML file use the DDS naming format, "
"not the ROS name. Find details on mapping topic names between ROS and DDS"
" in the `Topic and Service Names design document "
"<https://design.ros2.org/articles/topic_and_service_names.html#mapping-"
"of-ros-2-topic-and-service-names-to-dds-concepts>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:51
#: a7fe240abcdc4c40b5874cf3e6283939
msgid ""
"Paste the following XML content into ``permission.xml``, save the file "
"and exit the text editor. This shows the ``chatter`` and ``rosout`` ROS "
"topics renamed to the DDS ``rt/chatter`` and ``rt/rosout`` topics, "
"respectively:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:104
#: a5456c8b3f7c428a881aa0f2a509b15e
msgid ""
"This policy allows the talker to publish on the ``chatter`` and the "
"``rosout`` topics. It also allows includes publish and subscribe "
"permissions needed for the talker node to manage parameters (a "
"requirement for all nodes). Discovery permissions remain unchanged from "
"the original template."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:110
#: 6142555b7eb74120ae794c5d2e04b202
msgid "Sign the policy file"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:112
#: 8763e3d29b8248c591026ea830e60850
msgid ""
"This next command creates the new S/MIME signed policy file "
"``permissions.p7s`` from the updated XML file ``permissions.xml``. The "
"file must be signed with the Permissions CA certificate, **which requires"
" access to the Permission CA private key**. If the private key has been "
"protected, additional steps may be required to unlock and use it accoring"
" to your security plan."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:124
#: 512a20013dcd4ac9a6782d150a1112fe
msgid "Launch the node"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:126
#: eca29fcec5114685850133c8b4ce94ae
msgid ""
"With the updated permissions in place, we can launch the node "
"successfully using the same command used in prior tutorials:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:132
#: ac12f74c83dd426abe89927db5653a42
msgid ""
"However, attempting to remap the ``chatter`` topic prevents the node from"
" launching (note that this requires the ``ROS_SECURITY_STRATEGY`` set to "
"``Enforce``)."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:141
#: faefb7d64199488ca366c5cb0e1e5305
msgid "Use the templates"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:143
#: fbfc70ce3aa54f0bade4dd6bb90ce5f8
msgid ""
"Security policies can quickly become confusing, so the ``sros2`` "
"utilities add the ability to create policies from templates. Do this by "
"using the `sample policy file "
"<https://github.com/ros2/sros2/blob/{REPOS_FILE_BRANCH}/sros2/test/policies/sample.policy.xml#L1>`_"
" provided in the ``sros2`` repository. Let's creates a policy for both "
"the ``talker`` and the ``listener`` to only use the ``chatter`` topic."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:147
#: d77be46f4a684baca25ffb6f95ffb0e6
msgid ""
"Begin by downloading the ``sros2`` repository with the sample policy "
"files:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:153
#: 5bf394d812954941a91d0ee9422d5b2c
msgid ""
"Then use the ``create_permission`` verb while pointing to the sample "
"policy to generate the XML permission files:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:164
#: c7e6e2edcba4452bbdcd8a973f6e9ee3
msgid ""
"These permission files allow nodes to only publish or subscribe to the "
"``chatter`` topic, and enable communications required for parameters."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:166
#: e59e1e942416483abd13feeefb22c887
msgid ""
"In one terminal with security enabled as in previous security tutorials, "
"run the ``talker`` demo program:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:172
#: fb47b3d34ab5470da13cf5b64e9b3c6c
msgid "In another terminal do the same with the ``listener`` program:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Access-Controls.rst:178
#: c4d46c8f54fe4cad8cc62622488df2ca
msgid ""
"At this point, your ``talker`` and ``listener`` nodes will be "
"communicating securely using explicit access control lists. However, the "
"following attempt for the ``listener`` node to subscribe to a topic other"
" than ``chatter`` will fail:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:2
#: 4b20b20358934ddb9aaa9ef82da52eb7
msgid "Deployment Guidelines"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:4
#: e579d667dd5c4701b4635d45482b2ba1
msgid ""
"**Goal:** Understand the best practices when deploying security artifacts"
" into production systems."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:18
#: 2c8bc012c766491d918e6d909a09ed70
msgid ""
"Typical deployment scenarios often involve shipping containerized "
"applications, or packages, into remote systems. Special attention should "
"be payed when deploying security enabled applications, requiring users to"
" reason about the sensitivity of packaged files."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:21
#: ae6dd9818e704118896f8327eef61c4b
msgid ""
"Complying with the `DDS Security standard <https://www.omg.org/spec/DDS-"
"SECURITY/1.1/About-DDS-SECURITY/>`_, the ``sros2`` package provides a "
"collection of utilities for managing security under ROS 2 environments in"
" a highly modular and flexible fashion."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:24
#: 4a9916dbb411468c9aeb62fb52c0b6e9
msgid ""
"Basic core guidelines on how to organize the different certificates, keys"
" and directories remains a critical factor to avoid compromising the "
"security of the system. This includes protection-awareness and criteria "
"for selecting the minimum set of necessary files to be deployed upon "
"remote production systems for minimizing security exposure."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:30
#: acf51897b7d442278e8bc881d5a66ffb
msgid ""
"A docker installation with the compose plugin. Please refer to the "
"installation steps detailed in `Docker installation "
"<https://docs.docker.com/engine/install/>`_ and `Compose Plugin "
"<https://docs.docker.com/compose/install>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:32
#: 94f9b448e38d4eee9fcdba4bd74268c2
msgid ""
"(Recommended) A basic understanding on `ROS 2 Security design "
"<https://design.ros2.org/articles/ros2_dds_security.html>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:33
#: baa908ee59534d22982d0eeb7e893e9a
msgid "(Recommended) Previous security tutorials completion. In particular:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:35
#: 173ac539fa00484d9c62cae285d11779
msgid ":doc:`Introducing-ros2-security`"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:36
#: c56149fd6c4b43418021f3b0d1b14a50
msgid ":doc:`The-Keystore`"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:37
#: 60da2df99ab444c18a4615e36cd4613f
msgid ":doc:`Access-Controls`"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:40
#: 58bb3259b2974740ac17bf43bc3fcf14
msgid "General Guidelines"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:42
#: 7095397ccb6a4dea8e29c317f889568b
msgid ""
"ROS 2 leverages DDS Security extensions to ensure security on message "
"exchanges within the same enclave. The different signed files and "
"certificates within an enclave are generated from the private keys and "
"certificates of a `Certificate Authority (CA) "
"<https://en.wikipedia.org/wiki/Certificate_authority>`_ trusted entity. "
"In fact, two different CA's can be selected for identity and permissions,"
" per enclave. Those CA artifacts are stored inside ``private/`` and "
"``public/`` sub-directories of a `Keystore "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ with the"
" following folder structure:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:58
#: ce5e51af55584b89b1fca4a8c348612b
msgid ""
"A good practice for the creation and usage of a certain Certificate "
"Authority on a typical deployment for a production system, is to:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:60
#: c18d348c7bdf4c408cde56c30050fc15
msgid "Create it within the organization system intended for internal use only."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:61
#: 7f138497039d48b2a94a2054fd30ca20
msgid "Generate/modify desired enclaves bearing in mind that:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:63
#: 36c627cb88264d3aa818b2b0baa63d72
msgid "Not all the generated enclaves should be deployed to all target devices."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:64
#: 6dc3365324b647eeb27a8de16b7cddee
msgid ""
"A reasonable way to proceed would be having one enclave per application, "
"allowing for a separation of concerns."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:66
#: 6a76703ca943440db8dafac1abc5f739
msgid ""
"Ship ``public/`` alongside with corresponding ``enclaves/`` into the "
"different remote production devices during setup."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:67
#: 58f717658a5a4b04a76ac1e2e5974c13
msgid ""
"Keep and protect ``private/`` keys and/or certification requests in the "
"organization."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:69
#: c221ba5412b44fceb409789080e6359a
msgid ""
"It is important to note that if ``private/`` files are lost, it won't be "
"possible to change access permissions, add or modify security profiles "
"anymore."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:71
#: 4f58d1d8f4a84a5faae13e03149b66d2
msgid "In addition, further practices may be taken into consideration:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:73
#: 67a103f944d643c69a460153f0e3aa8a
msgid "Granting read-only permissions to the ``enclaves/`` directory contents."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:74
#: 5707359b8e504fb19a08e7b7449a3c8a
msgid ""
"If a PKCS#11 compliant URI is given for generating enclave's private "
"keys, a `Hardware Security Module (HSM) "
"<https://en.wikipedia.org/wiki/Hardware_security_module>`_ could be used "
"to store them."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:76
#: bca29f6ee64d4ede829f2d7f34ad70a0
msgid ""
"The following table depicts a summary of the previous statements relating"
" the Keystore directory with the Recommended location:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:79
#: fd041da872f74b78844e64b62c28a800
msgid "Directory / Location"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:79
#: d2363705c4f5404ea0823a48846d7ebf
msgid "Organization"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:79
#: 51b5232a0b5d41b2b257879d3b78e7c4
msgid "Target Device"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:79
#: 1461855c0cad4c9abf234fe2a0472aea
msgid "Material Sensitivity"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:81
#: be5f694249f447898c04ba4f0c217a17
msgid "public"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:81
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:83
#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:85
#: 50cfdd6609fa46ad8b64b4c256e97de2 54b4367776c549f0822d26d76cba0a70
#: 63729b37271c4b388a3702d922481a9f 65a027213ef1477992ba5ba9d963b801
#: b6d42758f0274990aae104599d0a2a91
msgid "✓"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:81
#: 64dc20786f63452e83fd7c9188b0a315
msgid "Low"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:83
#: 81eec04670ed479dafe02ff1ea0ff957
msgid "private"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:83
#: 567840db8e704a119a14e585136de8e8
msgid "✕"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:83
#: 5866804e5db340e89ba85cc294c99d59
msgid "High"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:85
#: 9ff75dacb46946e0b470899efd94e063
msgid "enclaves"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:85
#: 6507ed6d1d9d438a85ca00d8eb8c00c8
msgid "Medium"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:90
#: 18e1ce5def39445eb84f7134f0c7fd7e
msgid "Building a deployment scenario"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:92
#: 5bd5f6b1c374497090c621670cc4ef40
msgid ""
"To illustrate a simple deployment scenario, a new docker image will be "
"built on top of the one provided by ``ros:<DISTRO>``. Starting from the "
"image, three containers will be created with the aim of:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:95
#: 3528376bc2c94e6fb495a69e3a2307e9
msgid "Initializing the keystore in a local host's shared volume."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:96
#: b7b22ac341754922add111ca5a8a82b9
msgid ""
"Simulating two deployed remote devices that interact with each other in a"
" secure way."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:98
#: 7c10af302ad543e494ab7fe2c9f9f065
msgid ""
"In this example, the local host serves as the organization's system. Let "
"us start by creating a workspace folder:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:107
#: 3bfeba921b5046c7a985f6073d1f0fe4
msgid "Generating the Docker Image"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:109
#: 5e3b577883c54f80bf0a365759f99a2b
msgid ""
"In order to build a new docker image, a Dockerfile is required. The one "
"proposed for this tutorial can be retrieved with the following command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:117
#: 8f0b8c86a7f249d0937295ffe57574f6
msgid "Now, build the docker image with the command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:125
#: f12eb6d27f7b4188bb361d978f55bda7
msgid "Understanding the compose file"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:127
#: 15a38b58c0804fe6abb4a975706f3e17
msgid ""
"A compose configration file takes an image to create containers as "
"services. In this tutorial, three services are defined within the "
"configuration:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:130
#: 2ee2c564c76a40798b075b916a44989e
msgid ""
"*keystore-creator*: That, similarly to previous tutorials, it internally "
"initializes a new keystore tree directory. This will create *enclaves/* "
"*public/* and *private/*, which are explained in more detail in `ROS 2 "
"Security enclaves "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_. The "
"``keystore`` directory is configured to be a shared volume across "
"containers."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:134
#: 9074b1a23ff44cb7910a32758caec63a
msgid ""
"*listener* and *talker*: Act as the remote device actors in this "
"tutorial. Required ``Security`` environment variables are sourced as well"
" as the necessary keystore files from the shared volume."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:137
#: d24b84fd6cc0417394b08a607a443df0
msgid "The compose configuration yaml file can be downloaded with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:145
#: 8715404f430f461da849daee5be4e094
msgid "Running the example"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:147
#: 6becbb92de6a41f7a80e86371d1a6a2a
msgid "In the same working directory ``~/security_gd_tutorial``, run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:154
#: c06ceda2a5054522abed2d9c036dce6f
msgid "This should result in the following output:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:156
#: fc03e27f439e42d283921f2e4b318219
msgid ""
"*tutorial-listener-1*: ``Found security directory: "
"/keystore/enclaves/talker_listener/listener``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:157
#: 42db4e83021c481e932f72baf24bf0b8
msgid ""
"*tutorial-talker-1*: ``Found security directory: "
"/keystore/enclaves/talker_listener/talker``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:158
#: 7093d77ff6f24f8cb07e549c68c522c0
msgid "*tutorial-listener-1*: ``Publishing: 'Hello World: <number>'``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:159
#: 1c4d0217b0474e82bd13e958a5592934
msgid "*tutorial-talker-1*: ``I heard: [Hello World: <number>]``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:162
#: f87417747a6e4d12a791677570a4ddcb
msgid "Examining the containers"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:164
#: ce046ef980e444dd8b96b2bd09751c51
msgid ""
"While having the containers running that simulate the two remote devices "
"for this tutorial, attach to each of them by opening two different "
"terminals and enter:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:178
#: db281129c88540cbadd2f0d12fcb9600
msgid "A similar output to the one depicted below should be obtained:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:220
#: 83ef3e18df084837ab2a09963354e0c1
msgid "Note that:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:222
#: 65e468c69a4b409dbe4f0a4cbe856d8e
msgid "*private/* folder is not moved but left in the local host (organization)."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:223
#: ecdeecf766dd4ee0970f6cd621a25893
msgid ""
"Each one of the deployed devices contain its own minimum enclave required"
" for its application."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Deployment-Guidelines.rst:227
#: 89ba6488ff914d3d9a88a427a7d3385c
msgid ""
"For the sake of simplicity, the same CA is used within this enclave for "
"both identity and permissions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:8
#: cedc7079b3a24562b119143fa30ab34a
msgid "Examining network traffic"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:10
#: d00043ff7afc4a0e8b687d0095e74e7b
msgid "**Goal:** Capture and examine raw ROS 2 network traffic."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:24
#: 8479eb7926eb4e54a6dfc5487bd00633
msgid ""
"ROS 2 communications security is all about protecting communications "
"between nodes. Prior tutorials enabled security, but how can you "
"**really** tell if traffic is being encrypted? In this tutorial we'll "
"take a look at capturing live network traffic to show the difference "
"between encrypted and unencrypted traffic."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:30
#: a307d17392ae456d955cde3d709720de
msgid ""
"``rmw_fastrtps_cpp`` uses `Shared Memory Transport <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/transport/shared_memory/shared_memory.html>`_"
" by default to improve the performance in the transport layer when the "
"endpoints are in the same host system. Security enclaves are still "
"applied, and data will be encrypted. However, you cannot capture live "
"network traffic since the data will not be on the network interface. If "
"you are using  ``rmw_fastrtps_cpp``, you need to either go through this "
"tutorial and use a different host system between the publisher and "
"subscriber, or disable shared memory transport with `Enabling UDP "
"Transport <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/transport/udp/udp.html#enabling-"
"udp-transport>`_ and `How to set Fast-DDS XML configuration "
"<https://github.com/ros2/rmw_fastrtps#full-qos-configuration>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:36
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:91
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:45
#: 028e4da2fbd84483ae3f5f1918275ded 2f32fa350b2842678b3afe1f60100c14
#: c24dd0bc82bd4fefa32def57effffd33
msgid "Run the demo"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:39
#: c95595762064435b82a09d1c8056007c
msgid "Install ``tcpdump``"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:41
#: b8c25849d8a34c41a441a44d8d5498d1
msgid ""
"Begin in a new terminal window by installing `tcpdump "
"<https://www.tcpdump.org/manpages/tcpdump.1.html>`_, a command-line tool "
"for capturing and displaying network traffic. Although this tutorial "
"describes ``tcpdump`` commands, you can also use `Wireshark "
"<https://www.wireshark.org/>`_, a similar graphical tool for capturing "
"and analyzing traffic."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:49
#: 45f95b40b97b44af9e1e1eaa238a708a
msgid ""
"Run following commands on a single machine through multiple ``ssh`` "
"sessions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:52
#: ba69309920814f38a323f438c6c8c45b
msgid "Start the talker and listener"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:54
#: 47dc824b066440dda4479ea65bf19076
msgid ""
"Start both the talker and the listener again, each in its own terminal. "
"The security environment variables are not set so security is not enabled"
" for these sessions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:70
#: 049aa234ba194b23840054ec9e3968c0
msgid "Display unencrypted discovery packets"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:72
#: eeb3eb1b68814d528c91d2d4bc8ac044
msgid ""
"With the talker and listener running, open another terminal and start "
"``tcpdump`` to look at the network traffic. You need to use ``sudo`` "
"since reading raw network traffic is a privileged operation."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:75
#: 8f83ed407ec64f3ba13927aab257b7df
msgid ""
"The command below uses the ``-X`` option to print packet contents, the "
"``-i`` option to listen for packets on any interface, and captures only "
"`UDP <https://en.wikipedia.org/wiki/User_Datagram_Protocol>`_ port 7400 "
"traffic."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:81
#: 7ecb7abd0b544b0190edd24d6016b81c
msgid "You should see packets like the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:94
#: 2b9c724702914cc28cc7b7b3bfa3ee42
msgid ""
"This is a discovery datagram--the talker looking for subscribers. As you "
"can see, the node name (``/talker_listener/talker``) and the enclave "
"(also ``/talker_listener/talker``) are passed in plain text. You should "
"also see similar discovery datagrams from the ``listener`` node. Some "
"other features of a typical discovery packet:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:99
#: e003e8f4bedd4aff83611ed9675d5023
msgid ""
"The destination address is 239.255.0.1, which is a multicast IP address; "
"ROS 2 uses multicast traffic for discovery by default."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:100
#: 2fc3f5ead29d4dbabf8dca7a6b5591be
msgid ""
"UDP 7400 is the destination port, as per the `DDS-RTPS specification "
"<https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:101
#: ecb8edb97424477d82a1969b8c65049a
msgid ""
"The packet contains the \"RTPS\" tag, also as defined to the DDS-RTPS "
"specification."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:105
#: 75d65c25c06c4eae869fef0d1cc76a41
msgid "Display unencrypted data packets"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:107
#: 5c4d8dadee7445aab7a52281418bba4f
msgid ""
"Use ``tcpdump`` to capture non-discovery RTPS packets by filtering on UDP"
" ports above 7400:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:113
#: 38c02cc004814ff18d9213259868865c
msgid ""
"You will see few different types of packets, but watch for something like"
" the following which is obviously data being sent from a talker to a "
"listener::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:124
#: 4ed390a709204c159436dd4bbc6f011e
msgid "Some features to note about this packet:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:126
#: 840ac4b412224402ae55672f65ed0446
msgid "The message contents, \"Hello World: 2135\", are sent in clear text"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:127
#: f452abc3daf54a2c9c4a629a34d29845
msgid ""
"The source and destination IP address is ``localhost``: since both nodes "
"are running on the same machine, the nodes discovered each other on the "
"``localhost`` interface"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:131
#: 6f3d33f08d3042fda8812858cffd2bc2
msgid "Enable encryption"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:133
#: 5832f04cdcd0489a849fd60d644f8f6f
msgid ""
"Stop both the talker and the listener nodes. Enable encryption for both "
"by setting the security environment variables and run them again."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:152
#: 41385b6fe37744d1974c98b70c9f34be
msgid "Display encrypted discovery packets"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:154
#: 1cd8d861d5704e9e93a94bcea6bda85a
msgid ""
"Run the same ``tcpdump`` command used earlier to examine the output of "
"discovery traffic with encryption enabled:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:160
#: 0ef31d3fbeaf4a16a49b6e064d5f5cef
msgid "The typical discovery packet looks somewhat like the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:181
#: 67fc9e1db73440c88d5f2cf9e71d40b0
msgid ""
"This packet is much larger and includes information which can be used to "
"set up encryption among ROS nodes. As we will see shortly, this actually "
"includes some of the security configuration files that were created when "
"we enabled security. Interested in learning more? Take a look at the "
"excellent paper `Network Reconnaissance and Vulnerability Excavation of "
"Secure DDS Systems <https://arxiv.org/abs/1908.05310>`_ to understand why"
" this matters."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:187
#: 680720e46344488ba3f0a721bf41273d
msgid "Display encrypted data packets"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:189
#: 7f35b91b387441ce9395e1550230d1d6
msgid "Now use ``tcpdump`` to capture data packets:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:195
#: 48cb1895db3945ebb29768ccf0b27f6a
msgid "A typical data packet looks like the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:210
#: 34495769511f491ebf454ca9c271407c
msgid "The data in this RTPS packet is all encrypted."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Examine-Traffic.rst:212
#: 518b4f3b573e486686fc63a6170d140a
msgid ""
"In addition to this data packet, you should see additional packets with "
"node and enclave names; these support other ROS features such as "
"parameters and services. Encryption options for these packets can also be"
" controlled by security policy."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:9
#: 18fc1c5db99a467c9042bfcecbdeb1cc
msgid "Setting up security"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:11
#: 41f154ecd904469b972b22f9bdf96d45
msgid "**Goal:** Set up security with ``sros2``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:25
#: b7697001374042348cff5846d08bcffe
msgid ""
"The ``sros2`` package provides the tools and instructions to use ROS2 on "
"top of DDS-Security. The security features have been tested across "
"platforms (Linux, macOS, and Windows) as well as across different "
"languages (C++ and Python). The SROS2 has been designed to work with any "
"secure middleware, although not all middleware is open source and support"
" varies depending on the ROS distribution in use. Please reach out to the"
" :ref:`ROS 2 Security Working Group <Security Working Group>` if you "
"encounter any support issues."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:32
#: 0d36efc5ffda4410bea99f56d6d00dbf
msgid "Installation"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:34
#: 3842d2e5f95f4bf096d8b8b2fb5ddb29
msgid ""
"Typically security is available following installation using the "
":doc:`ROS 2 Installation Guide <../../../Installation>` and the "
":doc:`configuration guide <../../Beginner-CLI-Tools/Configuring-"
"ROS2-Environment>`. However, if you intend to install from source or "
"switch middleware implementations, consider the following caveats:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:39
#: 256b50a707f94ab6a9ff962740dc4156
msgid "Installing from source"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:41
#: 2bfd8d33ea9446008b8de605f83e9af9
msgid ""
"Before installing from source, you will need to have a recent version "
"openssl (1.0.2g or later) installed:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:52
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:105
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:132
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:162
#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:202
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:48
#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:80
#: 24540f0a9cb14f6eaaa5fa36d66c7a3e b7567e8e03a04752b42077d3d2ea3470
#: bebf284d10744d029e532ddbf948af37 c675d44e771d4370850f8914c8865ce8
#: dbeb47d7adf04390beb74a8d151677f7 f5f0fb500d7e43eab228e6b87aa9267c
#: ff7c5570d7664600be634a88445c7059
msgid "MacOS"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:58
#: 79e6c9211f284ea683e91ef18bc836f2
msgid ""
"You will need to have OpenSSL on your library path to run DDS-Security "
"demos. Run the following command, and consider adding to your "
"``~/.bash_profile``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:69
#: 7b6753482c9843d78caec5ea1818197c
msgid ""
"If you don't have OpenSSL installed, please follow :ref:`these "
"instructions <windows-install-binary-installing-prerequisites>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:71
#: 0432de95ca5f4d54af5e2342dd20f9d8
msgid ""
"Fast DDS requires an additional CMake flag to build the security plugins,"
" so the colcon invocation needs to be modified to pass:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:79
#: 50fca49ceff64744a53a3c8d73cb85ad
msgid "Selecting an alternate middleware"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:81
#: d5ec07bb337b45aabb50fd8fdeb55fd5
msgid ""
"If you choose not to use the default middleware implementation, be sure "
"to :doc:`change your DDS implementation <../../../Installation/DDS-"
"Implementations/>` before proceeding."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:83
#: 70f470e81730401fade00bae94afa05b
msgid ""
"ROS2 allows you to change the DDS implementation at runtime. See `how to "
"work with mulitple RMW implementations <../../../How-To-Guides/Working-"
"with-multiple-RMW-implementations>` to explore different middleware "
"implementations."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:86
#: 4000c81d0fc84b99969f04a395d74075
msgid "Note that secure communication between vendors is not supported."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:94
#: 22642b67315f471e8ed69f7319b3b7b2
msgid "1\\. Create a folder for the security files"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:95
#: 8bd53029b2b341dfbbcc23aec636db24
msgid "Begin by creating folder to store all the files necessary for this demo:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:118
#: 9c4ac6502e9b4b95a92ae65bdd1aede5
msgid "2\\. Generate a keystore"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:120
#: d4a57dadd63a460299eea796d0660372
msgid ""
"Use the ``sros2`` utilities to create the keystore. Files in the keystore"
" will be used to enable security for all the participants in the ROS 2 "
"graph."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:147
#: 4371488c0a794a91882bb751c87681d6
msgid "3\\. Generate keys and certificates"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:149
#: b1ca8380bcbf461b85737594ab7fe127
msgid ""
"Once the keystore is created, create keys and certificates for each node "
"with security enabled. For our demo, that includes the talker and "
"listener nodes. This command uses the ``create_enclave`` feature which is"
" covered in more detail in the next tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:177
#: 635fbc6f0fe34d6fbfa99f370d186ae9
msgid ""
"If ``unable to write 'random state'`` appears then set the environment "
"variable ``RANDFILE``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:183
#: 8fea90042bef4731a85efcca7abffd3b
msgid "Then re-run the commands above."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:187
#: 6e8244ad84e4437cb300bdd0f06fbef0
msgid "4\\. Configure environment variables"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:189
#: e9b0aaa12f9442b28e845909b82c6db8
msgid ""
"Three environment variables allow the middleware to locate encryption "
"materials and enable (and possibly enforce) security. These and other "
"security-related environment variables are described in the `ROS 2 DDS-"
"Security Integration design document "
"<https://design.ros2.org/articles/ros2_dds_security.html>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:218
#: a6ca2597ff8041ba89f2cab1659392b5
msgid ""
"These variables need to be defined in each terminal used for the demo. "
"For convenience you can add them to your boot environment."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:223
#: 1c9aaae8e6bb4529aa5976da81c6586b
msgid "5\\. Run the ``talker/listener`` demo"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:225
#: da5341eb97bc46c8bba629c91805d8fc
msgid "Begin the demo by launching the talker node."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:231
#: 2b4746f5526b47ff87d64aeb7deabb77
msgid ""
"In another terminal, do the same to launch the ``listener`` node. The "
"environment variables in this terminal must be properly set as described "
"in step 4 above."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:238
#: b14abfc01cc349c0bf48431ef99fea85
msgid ""
"These nodes will be communicating using authentication and encryption! If"
" you look at the packet contents (for example, using ``tcpdump`` or "
"``Wireshark`` as covered in another tutorial), you can see that the "
"messages are encrypted."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:241
#: 8bc0986f3b9c4b0ba7f1a78770d5e3b2
msgid ""
"Note: You can switch between the C++ (demo_nodes_cpp) and Python "
"(demo_nodes_py) packages arbitrarily."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:243
#: 2d82a563046d45c1b9b3ca54340c7abf
msgid ""
"These nodes are able to communicate because we have created the "
"appropriate keys and certificates for them."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:245
#: 99166c0658054001a5bf6d4665a8ea94
msgid "Leave both nodes running as you answer the questions below."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:249
#: 2fe7ebfbd3c64ae6b2d9931a35e9ac4a
msgid "Take the Quiz!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:253
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:222
#: 89e99a172320412ba5fe33fa0d099bb7 dbf031a3e3a44fee9804457f4b6ba578
msgid "Question 1"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:255
#: 8aa3bb998ab746b8851aafa788e6504f
msgid ""
"Open another terminal session, but **do not** set the environment "
"variables so that security is not enabled. Start the listener. What do "
"you expect to happen?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:259
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:241
#: 4351702168a94adcab66f19932566bfd 7061aa8fb0924dc4a5f0e10d59c17f9e
msgid "Answer 1"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:261
#: 64b85751875347c9ba095051c8777981
msgid ""
"The listener launches but does not receive any messages. All traffic is "
"encrypted, and without security enabled the listener does not receive "
"anything."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:267
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:252
#: 0f2f298548c84d508f471994c937d69f f5fcc95e57a348e0a5923176f1d750c8
msgid "Question 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:269
#: a5d1e9d6da7c47499ae1fd02218f1dbf
msgid ""
"Stop the listener, set the environment variable ``ROS_SECURITY_ENABLE`` "
"to ``true`` and start the listener again. What results do you expect this"
" time?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:272
#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:256
#: 5976f487ec164e9883e5809ea257fa1b 92224059a68945f5b5f00439ed486566
msgid "Answer 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:274
#: 905ab51dd6304b61aa5ae2c79c91f032
msgid ""
"The listener still launches but does not receive messages. Although "
"security has now been enabled, it is not been configured properly since "
"ROS is unable to locate the key files. The listener launches, but in non-"
"secure mode since security is not enforced, which means that although the"
" properly configured talker is sending encrypted messages, this listener "
"is unable to decrypt them."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:280
#: aaf69b122bb74b9dba773e33cee71c96
msgid "Question 3"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:282
#: 28965fe7bab4478385a8d66455d3ceac
msgid ""
"Stop the listener and set ``ROS_SECURITY_STRATEGY`` to ``Enforce``. What "
"happens now?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:285
#: 7cf97d83b8ed4a748acae50a0885c7c2
msgid "Answer 3"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:287
#: 14a6b4c673b843e5915aa91871f0c581
msgid ""
"The listener fails to launch. Security has been enabled and is being "
"enforced. Since it still is not properly configured, an error is thrown "
"rather than launching in non-secure mode."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:293
#: 724a393fada6478bb5e24daec6250386
msgid "Learn More!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Introducing-ros2-security.rst:295
#: 721b7817f52049078aa57c619987cda3
msgid ""
"Are you ready to go further with ROS Security? Take a look at the `Secure"
" Turtlebot2 Demo <https://github.com/ros-swg/turtlebot3_demo>`_. You'll "
"find a functioning and complex implementation of ROS 2 security, ready to"
" try out your own custom scenarios. Be sure to create pull requests and "
"issues here so we can continue improving security support in ROS!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-Main.rst:2
#: b2d4df51affe4c42bcf4467719d56447
msgid "Security"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:8
#: 95e5535a2fc44b98be56d527a5ebfd61
msgid "Ensuring security across machines"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:10
#: 6055cdfbeb3045ec843b5a5d3683fe62
msgid "**Goal:** Make two different machines communicate securely."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:14
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:14
#: ../../source/Tutorials/Intermediate/Rosdep.rst:16
#: 1d33b06a94234afd89740602564a09d8 38a2e467ad41488094337761403d98bc
#: 832157a070314f3e884e72da8f316839 8523fbbd45354dd6a6ad439605c244ea
#: b8960e5ce428428b81ee79d3854023db bce157d0138a40378c6ab2992bf5368e
#: f05ab3c5a42146e19a8ac2f43c980eb6
msgid "**Time:** 5 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:26
#: f16dc150a6a64b59831fca414d06a3a1
msgid ""
"The previous tutorials have used two ROS nodes on the same machine "
"sending all network communications over the localhost interface. Let's "
"extend that scenario to involve multiple machines, since the benefits of "
"authentication and encryption then become more obvious."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:29
#: e3bb649686c448e18f974cb0b955064e
msgid ""
"Suppose that the machine with the keystore created in the previous demo "
"has a hostname ``Alice``, and that we want to also use another machine "
"with hostname ``Bob`` for our multi-machine ``talker/listener`` demo. We "
"need to move some keys from ``Alice`` to ``Bob`` to allow SROS 2 to "
"authenticate and encrypt the transmissions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:34
#: e54b4af076014a798a22191ec505bd42
msgid "Create the second keystore"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:36
#: 6d4e4280213245a097dcd7126309b330
msgid ""
"Begin by creating an empty keystore on ``Bob``; the keystore is actually "
"just an empty directory:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:66
#: 89d03e4b69de40ea8fa4c6681408faca
msgid "Copy files"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:68
#: 4712d84af77d4b058f041eac5b3d7dd7
msgid ""
"Next copy the keys and certificates for the ``talker`` program from "
"``Alice`` to ``Bob``. Since the keys are just text files, we can use "
"``scp`` to copy them."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:96
#: 913b2ebab98b453b947d3741c27638b8
msgid ""
"Note that in this case the entire keystore is shared across the different"
" machines which may not be the desired behavior, as it may result in a "
"security risk. Please refer to :doc:`Deployment-Guidelines` for more "
"information in this regard."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:99
#: 6126470f1a244619ae169da888d81e5c
msgid ""
"That will be very quick, since it's just copying some very small text "
"files. Now, we're ready to run a multi-machine talker/listener demo!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:104
#: fa0469b45bd74863a551b803ae07377f
msgid "Launch the nodes"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:106
#: 7ff171776b9a4756b041db9178c91559
msgid "Once the environment is set up, run the talker on ``Bob``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:112
#: f75b06f8d3fe4139b55cc25a311634df
msgid "and launch the listener on ``Alice``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:118
#: 4163b327b95e451a91e678bbbb0d0be0
msgid "Alice will now be receiving encrypted messages from Bob."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/Security-on-Two.rst:120
#: 2b3a9404b02047e1a0cef759762b0bd6
msgid ""
"With two machines successfully communicating using both encryption and "
"authentication, you can use the same procedure to add more machines to "
"your ROS graph."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:8
#: c98212fca7b04b738a16f78b33f68ddd
msgid "Understanding the security keystore"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:10
#: f9d345636a024587bf63ee532c2d41b6
msgid "**Goal:** Explore files located in the ROS 2 security keystore."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:26
#: e24186001910424e9f0f15fc68e373ae
msgid ""
"The ``sros2`` package can be used to create keys, certificates and "
"policies necessary to enable ROS 2 security. However, the security "
"configuration is extrememly flexible. A basic understanding of the ROS 2 "
"Security Keystore will allow integration with an existing PKI (Public Key"
" Infrastructure) and managment of sensitive key materials consistent with"
" organizational policies."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:32
#: 1e2c5005f69141ddae15d66869d2de56
msgid "Security Artifact Locations"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:34
#: b3e39d48f26a484b9ebf4bb2c2a237b5
msgid ""
"With communications security enabled in the prior tutorial, let's take a "
"look at the files which were created when security was enabled. These are"
" the files which make encryption possible."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:37
#: a046dae841a246aca13d4fca8d73f1da
msgid ""
"The ``sros2`` utilities (``ros2 security ...``) separate files into "
"public, private and enclave key materials."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:39
#: 985c5c1c360a48959c12b8cb4089d430
msgid ""
"ROS uses the directory defined by the environmental variable "
"``ROS_SECURITY_KEYSTORE`` as the keystore. For this tutorial, we use the "
"directory ``~/sros2_demo/demo_keystore``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:44
#: 8b722b94d29d4af48f82f3fb90943ca5
msgid "Public Key Materials"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:46
#: feb8a0762fa34be881e8ae237c7a5264
msgid ""
"You will find three encryption certificates in the public directory at "
"``~/sros2_demo/demo_keystore/public``; however, the identity and "
"permissions certificates are actually just a link to the Certificate "
"Authority (CA) certificate."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:48
#: 69b73eb17701467a8ac2cac1f3070fc5
msgid ""
"In a public key infrastructure, the `Certificate Authority "
"<https://en.wikipedia.org/wiki/Certificate_authority>`_ acts as a trust "
"anchor: it validates the identities and permissions of participants. For "
"ROS, that means all the nodes that participate in the ROS graph (which "
"may extend to an entire fleet of individual robots). By placing the "
"Certificate Authority's certificate (``ca.cert.pem``) in the proper "
"location on the robot, all ROS nodes can establish mutual trust with "
"other nodes using the same Certificate Authority."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:52
#: 7593dce668a041349c4069de27a2480c
msgid ""
"Although in our tutorials we create a Certificate Authority on-the-fly, "
"in a production system this should be done according to a pre-defined "
"security plan. Typically the Certificate Authority for a production "
"system will be created off-line, and placed on the robot during initial "
"setup. It may be unique for each robot, or shared across a fleet of "
"robots all intended to trust each other."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:56
#: 724980d753794b6698e54c2c01a30dec
msgid ""
"DDS (and ROS, by extension) supports separation of identity and "
"permission trust chains, so each function has its own certificate "
"authority. In most cases a ROS system security plan does not require a "
"separation between these duties, so the security utilities generate a "
"single Certificate Authority which is used for both identity and "
"permissions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:59
#: e83d230f535d464d9a65b841d4191150
msgid "Use ``openssl`` to view this x509 certificate and display it as text:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:66
#: a0aeb9c79627417fbc09bd8fe671f1e1
msgid "The output should look similar to the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:103
#: c98ddf60cf5b4e25aa55208baa985fcf
msgid "Some things to note about this CA certificate:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:100
#: 01985d92735a4f939dcd313ed6da44c4
msgid ""
"The certificate subject name ``sros2testCA`` is the default provided by "
"the ``sros2`` utilities."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:101
#: e2cdbff1f8b247c886d1576749ff9718
msgid "This certificate is valid for ten years from time of creation"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:102
#: 43388af5966b4af98cea029bd800d282
msgid ""
"Like all certificates, this contains a public key used for public-private"
" key encryption"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:103
#: 8e071818e19847dcbf1ef846aa2c086a
msgid ""
"As a Root Certificate Authority, this is a `self-signed certificate "
"<https://en.wikipedia.org/wiki/Self-signed_certificate>`_; i.e., it is "
"signed using its own private key."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:105
#: 1043e57e934c4bfea80d0bc2a7d43c93
msgid ""
"Since this is a public certificate, it can be freely copied as needed to "
"establish trust throughout your ROS system."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:109
#: 16b97f6272274a1fbf538d8c06a9c187
msgid "Private Key Materials"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:111
#: 8b59f96868364ed3bf2554b958d55c06
msgid ""
"Private key materials can be found in the keystore directory "
"``~/sros2_demo/demo_keystore/private``. Similar to the ``public`` "
"directory, this contains one certificate authority key ``ca.key.pem`` and"
" symbolic links to it to be used as both an Identity and a Permissions CA"
" private key."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:116
#: b4e45f269795450fa2bdc1af25054733
msgid "Protect this private key and create a secure backup of it!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:118
#: 378050bb0c0b42d9b9ca7ca4a1f75c9e
msgid ""
"This is the private key associated with the public Certificate Authority "
"which serves as the anchor for all security in your ROS system. You will "
"use it to modify encryption policies for the ROS graph and to add new ROS"
" participants. Depending upon your robot's security needs, the key can be"
" protected with access permissions and locked down to another account, or"
" it can be moved off the robot entirely and onto another system or "
"device. If the file is lost, you will be unable to change access "
"permissions and add new participants to the system. Similarly, any user "
"or process with access to the file has the ability to modify system "
"policies and participants."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:124
#: 3ff05673ccbe40a18987b3142c162e18
msgid ""
"This file is only required for configuring the robot, but is not needed "
"for the robot to run. It can safely be stored offline in another system "
"or removable media."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:127
#: adb584e8ce994bac97e181462b7cb02d
msgid ""
"The ``sros2`` utilities use `elliptic curve cryptograpy "
"<https://en.wikipedia.org/wiki/Elliptic-curve_cryptography>`_ rather than"
" RSA for improved security and reduced key size. Use the following "
"command to show details about this elliptic curve private key:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:136
#: 0b1c76dc804a4994b329ffe8be1b361f
msgid "Your output should look similar to the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:153
#: 349fa98037fe4839aef1c56fa58a435c
msgid ""
"In addition to the private key itself, note that the public key is "
"listed, and it matches the public key listed in the Certificate Authority"
" ``ca.cert.pem``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:157
#: 33cd53d9f7e0483886c215e4459d7f0a
msgid "Domain Governance Policy"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:159
#: 521f0c6641994ffb8ba184b6c7157621
msgid ""
"Find the domain governance policy in the enclave directory within the "
"keystore, ``~/sros2_demo/demo_keystore/enclaves``. The ``enclave`` "
"directory contains XML governance policy document ``governance.xml``, as "
"well as a copy of the document which has been signed by the Permissions "
"CA as ``governance.p7s``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:162
#: b7793d9d3bde482085205734b8c607d3
msgid ""
"The ``governance.p7s`` file contains domain-wide settings such as how to "
"handle unauthenticated participants, whether to encrypt discovery, and "
"default rules for access to topics."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:164
#: 36067998595441878fa47c7997fdcbf4
msgid ""
"Use the following command to validate the `S/MIME signature "
"<https://en.wikipedia.org/wiki/S/MIME>`_ of the governance file:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:170
#: 14e4c712baff48e8a02e3047fba9001c
msgid ""
"This command will print out the XML document, and the last line will be "
"``Verification successful`` to show that the document was properly signed"
" by the Permissions CA."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:174
#: 4c3b5459ff0543a087a047a426a0cd2f
msgid "Security Enclaves"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:176
#: ae345af648af48468bfbff5eb66f0292
msgid ""
"Secure processes (typically ROS nodes) run within a security enclave. In "
"the simplest case, all the processes can be consolidated into the same "
"enclave, and all processes will then use the same security policy. "
"However, to apply different policies to different processes, the "
"processes can use different security enclaves when starting. For more "
"details about security enclaves, see the `design document "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_. The "
"security enclave is specifed by using the ROS argument ``--enclave`` when"
" running a node."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:182
#: 393b3cce7fa14c18b64a3cfba150d360
msgid ""
"**Each security enclave requires six files** in order to enable security."
" Each file **must** be named as defined below, and as outlined in the "
"`DDS Security standard <https://www.omg.org/spec/DDS-SECURITY/1.1/About-"
"DDS-SECURITY/>`_. In order to avoid having mulitple copies of the same "
"files, the ``sros2`` utilities create links for each enclave to the "
"single governance policy, the Identity CA and Permissions CA descibed "
"above."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:186
#: 0314bf53ca22455682da9512f660b2b0
msgid ""
"See the following six files within the ``listener`` enclave. Three are "
"specific to this enclave, while three are generic to this ROS system:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:189
#: 149666144caf44b4930576136d7564e6
msgid ""
"``key.pem``, the private key used to encrypt and decrypt within this "
"enclave"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:190
#: 0f4ff1ccb6fc411ba57c37c5c9de8671
msgid ""
"``cert.pem``, the public certificate for this enclave; this certificate "
"has been signed by the Identity CA"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:191
#: f9bfd1df9c3a4fa993b40554830e34a7
msgid ""
"``permissions.p7s``, the permissions for this enclave; this file has been"
" signed with the Permissions CA"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:192
#: aba735cf47a74803a0124ccd1a4fa7d0
msgid ""
"``governance.p7s``, a link to the signed security policy file for this "
"domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:193
#: 0c0f5e622c874f1799259385a232f59d
msgid "``identity_ca.cert.pem``, a link to the Identity CA for this domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:194
#: c3a3640144ca41ee900b284b74f349a9
msgid "``permissions_ca.cert.pem``, a link to the Permissions CA for this domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:196
#: 19e1f61434ba465dad2026150f0590d5
msgid ""
"The private encryption key ``key.pem`` should be protected according to "
"your security plan. This key encrypts, decrypts and validates "
"communications within this specific enclave. Should the key be lost or "
"stolen, revoke the key and create a new identity for this enclave."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:200
#: 572b8ed870d04f4c9d2d4f494b67e3ce
msgid ""
"The file ``permissions.xml`` has also been created in this directory and "
"can be used to recreate the signed permissions file. However, this file "
"is not required to enable security since DDS uses the signed version of "
"the file instead."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:205
#: e90f6379a1e441a083b1a65c03a76c25
msgid "Take the quiz!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:207
#: 4ba8bc8ecd544f97b61c1fd586d265d9
msgid ""
"See if you can answer these questions about the ROS security keystore. "
"Begin with a new terminal session and enable security with the keystore "
"created in the prior tutorial:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:218
#: 35c1b452bee3403fad6a296bf4f6b62e
msgid "Make a backup copy of ``permissions.p7s`` before beginning."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:224
#: 035576af9c574f3088e04ebdfaa9fe22
msgid ""
"Open ``permissions.p7s`` in a text editor. Make a negligible change to "
"the XML content (e.g., add a space or a blank line) and save the file. "
"Launch the listener node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:231
#: c434a6f5a4d4409b8b3806f359679bfa
msgid "What do you expect to happen?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:233
#: 98f1f17f98f44ec8980a12de08f78fba
msgid "Can you launch the talker node?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:239
#: 4b79ad0b55bc44238031ef6f5e72891c
msgid ""
"What is the difference between launching the listener and launching the "
"talker?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:243
#: 8522564425624314a0495a82917db0e5
msgid ""
"The listener fails to launch and throws an error. When the "
"``permissions.p7s`` file was modified--however minor--the file's "
"signature became invalid. A node will not launch with security enabled "
"and enforced when the permissions file is invalid."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:247
#: 9c353c47962345f69aacd786f98a53ac
msgid ""
"The talker will start as expected. It uses the ``permissions.p7s`` file "
"in a different enclave, and the file is still valid."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:254
#: 84bd23604381407f87a0f5a2a850d370
msgid ""
"What command lets you check to see if the signature on the modified "
"``permissions.p7s`` file is valid?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:258
#: 3ee0395f3f6948b1ae1551907251fbf4
msgid ""
"Check that ``permissions.p7s`` has been properly signed by the "
"Permissions CA using the ``openssl smime`` command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:264
#: 0fda2df5abac474b90b65ce080a2db5b
msgid ""
"Restore your original, properly signed ``permissions.p7s`` file before "
"proceeding to the next tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:8
#: 3cfb36f0c1c94ef889a23b1cbb48813d
msgid "Setting up a robot simulation (Gazebo)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:10
#: a3b3d1d156a54c78b48501a59b2e92f1
msgid "**Goal:** Launch a Simulation with Gazebo and ROS 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:23
#: f36c549ecfcd44be8c3b6f7753e9253d
msgid "First of all you should install ROS 2 and Gazebo. You have two options:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:26
#: 9303cb9aa95c457a9e0a3dd90c19994b
msgid ""
"Install from deb packages. To check which versions are available from deb"
" packages please check this `table "
"<https://github.com/gazebosim/ros_ign>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:27
#: dd99836591f74f39b95df57d3ded3318
msgid "Compile from sources:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:29
#: c63495280ef848babca1f83d4232cf17
msgid ":doc:`ROS 2 install instructions <../../../../Installation>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:30
#: 58fad29419b34f8789f417fea97c5076
msgid "`Gazebo install instructions <https://gazebosim.org/docs>`__"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:36
#: 40af455d6dbc49be9ea623c9d18d0417
msgid "1 Launch the simulation"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:38
#: 2497d9160e8843759762ac45286a4379
msgid ""
"In this demo you are going to simulate a simple diff drive robot in "
"Gazebo. You are going to use one of the worlds defined in the Gazebo "
"examples called `visualize_lidar.sdf <https://github.com/gazebosim/gz-"
"sim/blob/main/examples/worlds/visualize_lidar.sdf>`__. To run this "
"example you should execute the following command in a terminal:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:54
#: 92c2a37714444b1797fc19a82e691dd8
msgid ""
"When the simulation is running you can check the topics provided by "
"Gazebo with the ``ign`` command line tool:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:64
#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:94
#: 7046156747894c9cb1fec375db845e47 c02dbfe626fb48bf8a663698bf4e117f
msgid "Which should show:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:83
#: 1aa14c54706c4d2d8970b5e517f81d65
msgid ""
"Since you have not launched an ROS 2 nodes yet, the output from ``ros2 "
"topic list`` should be free of any robot topics:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:102
#: 3c2e00a0dd284089adff23d43ec5696f
msgid "2 Configuring ROS 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:104
#: 765cd26fc862432db9a77eb27117e877
msgid ""
"To be able to communicate our simulation with ROS 2 you need to use a "
"package called ``ros_gz_bridge``. This package provides a network bridge "
"which enables the exchange of messages between ROS 2 and Gazebo "
"Transport. You can install this package by typing:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:116
#: 53dad826a0e9418da913e598160c535f
msgid ""
"At this point you are ready to launch a bridge from ROS to Gazebo. In "
"particular you are going to create a bridge for the topic "
"``/model/vehicle_blue/cmd_vel``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:128
#: 60787a6cbe8744b698e8fae3bac9e51d
msgid ""
"For more details about the ``ros_gz_bridge`` please check this `README "
"<https://github.com/gazebosim/ros_gz/tree/ros2/ros_gz_bridge>`__ ."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:130
#: 709c3cee09994297bf6238fc12f364f7
msgid ""
"Once the bridge is running the robot is able to follow your motor "
"commands. There are two options:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:133
#: 92dac1f6ea6a43de87457e1592772242
msgid "Send a command to the topic using ``ros2 topic pub``"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:143
#: c4c3264561fe4c4f8f5a2c02f485621d
msgid ""
"``teleop_twist_keyboard`` package. This node takes keypresses from the "
"keyboard and publishes them as Twist messages. You can install it typing:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:153
#: 27bb0819646f446dbc5a673d3a32f4b4
msgid ""
"The default topic where ``teleop_twist_keyboard`` is publishing Twist "
"messages is ``/cmd_vel`` but you can remap this topic to make use of the "
"topic used in the bridge:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:165
#: 2223770a82a540bd82a8e8266c17aeef
msgid "Which will show:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:197
#: 17fd836f4c6049b1ad730315dc5b9996
msgid "3 Visualizing lidar data in ROS 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:199
#: f70267d4c3814e29baa1d3fb84e6557b
msgid ""
"The diff drive robot has a lidar. To send the data generated by Gazebo to"
" ROS 2, you need to launch another bridge. In the case the data from the "
"lidar is provided in the Gazebo Transport topic ``/lidar2``, which you "
"are going to remap in the bridge. This topic will be available under the "
"topic ``/lidar_scan``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:213
#: 71ac77e5e99e4c40a49c92ba500f231d
msgid "To visualize the data from the lidar in ROS 2 you can use Rviz2:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:224
#: 8bf37edf0674482b83c6b8d8d6a929af
msgid "Then you need to configure the ``fixed frame``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:228
#: 5cd7a8844fa04a7cbcf4c3cf9272c93b
msgid ""
"And then click in the button \"Add\" to include a display to visualize "
"the lidar:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:232
#: 0c39096643e1487cb1eca315004b0a1a
msgid "Now you should see the data from the lidar in Rviz2:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Gazebo.rst:239
#: f36bc98076a44f259d161f4541ccd0dc
msgid ""
"In this tutorial, you launched a robot simulation with Gazebo, launched "
"bridges with actuators and sensors, visualized data from a sensor, and "
"moved a diff drive robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Simulation-Gazebo.rst:2
#: 6045b3001e33486194d206de4172f419
msgid "Gazebo"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Gazebo/Simulation-Gazebo.rst:4
#: 9b02e8d937e6451dacb0b6752debab11
msgid ""
"This set of tutorials will teach you how to configure the Gazebo "
"simulator with ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Simulation-Main.rst:8
#: 02046ede0f87442983eeee48d6e50723
msgid "Simulators"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Simulation-Main.rst:10
#: fe86251d34f74e3283318c28662dada6
msgid ""
"Several advanced robot simulators can be used with ROS 2, such as Gazebo,"
" Webots, etc. Unlike turtlesim, they provide fairly realistic results "
"relying on physics-based models for robots, sensors, actuators and "
"objects. Hence, what you observe in simulation is very close to what you "
"will get when transferring your ROS 2 controllers to a real robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Simulation-Main.rst:14
#: 7e755542d5094306b8d9c938ffc36c26
msgid ""
"This set of tutorials will teach you how to configure different "
"simulators with ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:2
#: 0bf48439dcb044fd8d1cd1e302629ee5
msgid "Installation (macOS)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:4
#: 6d4aa9fac97b48bca438f0db53aabbe4
msgid ""
"**Goal:** Install the ``webots_ros2`` package and run simulation examples"
" on macOS."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:8
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:8
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:8
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:8
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:8
#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:13
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:14
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:14
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:14
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:13
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:14
#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:14
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:14
#: 0f4acc707e0141179f6efb3c0d2ede2f 25fe2bf38ea3402599cfc3261a7724cc
#: 29ffba41e71d4f49aa03f9a217ad28b2 2ed82c88382640bfbe0a122640bbef31
#: 3985edbfa26a4955a90b4dc81964d284 3daef0ed84bc4bf9a2ae4fa5a0484fc5
#: 3dfa5d7737954bcdba41f28e728a39db 4f8841a830894d678e32b51cc4f96ea9
#: 59677cfca2314d62b090ed5db74e18c1 59af234c803045e795318fbe5219344e
#: 5b7ee7d95b214434beee291e992367f3 698add7dbeae46e587408c67fead086f
#: 832ba00a786149d88e2bf0814943cc2e 8bbf371d5fe9485880d95399af117243
#: 9b62a361b5b446cfba053869797d8196 9d73f58a031b4c1a8291a3c870852d69
#: a8edca9b32664dceab525fc3d4549393 aa25cb00c1d54121b4afcb32951aba0f
#: b1a3069bf6af4d9bb325368345baf188 b504e4e0b79445bf874ad48997a32ffa
#: b63a0b9917ff4b08ae60e1c7cbef5ec5 bc2a75c17b94488dbda67bd13495fb36
#: c1a2feecdfc240be9b5e278c689ba9af e551e01c661249ab9367f2b0e0959730
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:17
#: de4da5ddebe24123a1534e18edd72298
msgid ""
"The ``webots_ros2`` package provides an interface between ROS 2 and "
"Webots. It includes several sub-packages, including "
"``webots_ros2_driver``, which allows you to start Webots and communicate "
"with it. Other sub-packages are mainly examples that show multiple "
"possible implementations using the interface. In this tutorial, you are "
"going to install the package and learn how to run one of these examples."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:25
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:26
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:25
#: 0d64edd02b9a4593bf1b9f28c052e20a 5b354603db3142b89922850a65170f97
#: 874ada62d39b4fd7b1767472d6dbc726
msgid ""
"It is recommended to understand basic ROS principles covered in the "
"beginner :doc:`../../../../Tutorials`. In particular, :doc"
":`../../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace` and :doc"
":`../../../Beginner-Client-Libraries/Creating-Your-First-ROS2-Package` "
"are useful prerequisites."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:28
#: 16e64b68418c4d8a949f807bbb5771cd
msgid ""
"It is necessary to install Webots natively on the mac in order to use the"
" ``webots_ros2`` package in the virtual machine as explained below. You "
"can follow the `installation procedure <https://cyberbotics.com/doc/guide"
"/installation-procedure>`_ or `build it from sources "
"<https://github.com/cyberbotics/webots/wiki/macOS-installation/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:34
#: f8766734889743738bb1dfd1812d5223
msgid ""
"On macOS, a solution based on UTM virtual machines provides an improved "
"user experience with ROS 2 compared to native macOS installation, as it "
"runs ROS in a Linux environment. However, Webots should be installed "
"natively on macOS and it will be able to communicate with the ROS nodes "
"running in the Virtual Machine (VM). This solution allows for native 3D "
"hardware acceleration for Webots. The VM runs all the ROS part (including"
" RViz) and connects to the host machine through TCP to start Webots. A "
"shared folder allows the script to transfer the world and other resource "
"files from the VM to macOS where Webots is running."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:40
#: 00ec246402d945ee8fce0a8de7adc3dd
msgid ""
"The following steps explain how to create the VM image with the "
"installation of the ``webots_ros2`` released package. It is also possible"
" to install it from sources."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:44
#: 39d1ff82ad3240e3a58a587cdf9899d8
msgid "1 Create the VM image"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:46
#: 181eabe3dbc147e0a42c9908ba4f4b8e
msgid ""
"Install UTM on your macOS machine. The link can be found on the `official"
" UTM website <https://mac.getutm.app/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:49
#: 30d68ca9e97c4c8b82cd59620060e28d
msgid ""
"Download the .iso image of `Ubuntu 22.04 "
"<https://cdimage.ubuntu.com/jammy/daily-live/current/>`_ for Humble and "
"Rolling or `Ubuntu 20.04 <https://cdimage.ubuntu.com/focal/daily-"
"live/pending/>`_ for Foxy. Be sure to download the image corresponding to"
" your CPU architecture."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:52
#: 2d12cf624ce545868b7f1e6c6746ce1d
msgid "In the UTM software:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:54
#: bd374b75e6b948609cb3d8d2fe6c6dc2
msgid "Create a new image and choose ``Virtualize`` option."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:55
#: a8df3033845d430496c737c897d95d43
msgid "Select the ISO image you have downloaded in the ``Boot ISO Image`` field."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:56
#: f3b5c89cf31c403baa83ac88a6c8c7e4
msgid ""
"Leave all hardware settings at default (including hardware acceleration "
"disabled)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:57
#: 4f3f93dda0b0498a851f8e2331a385b0
msgid ""
"In the ``Shared Directory`` window, select a folder that will be used by "
"``webots_ros2`` to transfer all the Webots assets to the host. In this "
"example, the selected folder is ``/Users/username/shared``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:59
#: 147a8ea5884f42a2817df1d11aa9d2f1
msgid "Leave all the remaining parameters as default."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:60
#: eebd43a164d140acb54192f87830489a
msgid ""
"Start the VM. Note that you can select another shared folder each time "
"you start the VM."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:62
#: e53466177b9b46f5ab263324c03545ba
msgid ""
"During the first launch of the VM, install Ubuntu and choose a username "
"for your account. In this example, the username is ``ubuntu``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:63
#: dad0567da9364971b7af1334d3baee86
msgid ""
"Once Ubuntu is installed, close the VM, remove the iso image from the "
"CD/DVD field and restart the VM."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:66
#: 06aee565ef4f43f4ab5dd7035e5ccf7d
msgid "2 Configure the VM"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:67
#: 02e5282235394c9ba6e334f7bfbf433d
msgid ""
"In this section, ROS 2 is installed in the VM and the shared folder is "
"configured. The following instructions and commands are all run inside "
"the VM."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:70
#: cc8c862b28bd4d278a33c8edfe198517
msgid ""
"Open a terminal in the started VM and install the ROS 2 distribution you "
"need by following the instructions in :doc:`../../../../Installation"
"/Ubuntu-Install-Debians`:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:71
#: e40934b3db5c42eaa540f53244cf9551
msgid ""
"Create a folder in the VM to use as a shared folder. In this example, the"
" shared folder in the VM is ``/home/ubuntu/shared``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:78
#: ecec9ce6891e473795464b3ec84b241f
msgid ""
"To mount this folder to the host, execute the following command. Don't "
"forget to modify the path to the shared folder, if it is different in "
"your case."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:85
#: 20a5507009734cf291ea69b4209857cd
msgid ""
"To automatically mount this folder to the host when starting the VM, add "
"the following line to ``/etc/fstab``. Don't forget to modify the path to "
"the shared folder, if it is different in your case."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:92
#: f09ffb6dbf62409d87408945ee64476f
msgid ""
"The environment variable ``WEBOTS_SHARED_FOLDER`` must always be set in "
"order for the package to work properly in the VM. This variable specifies"
" the location of the shared folder that is used to exchange data between "
"the host machine and the virtual machine (VM) to the ``webots_ros2`` "
"package. The value to use for this variable should be in the format of "
"``<host shared folder>:<VM shared folder>``, where ``<host shared "
"folder>`` is the path to the shared folder on the host machine and ``<VM "
"shared folder>`` is the path to the same shared folder on the VM."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:96
#: 35c754b2eb2b41679d9bd73397bd0873
msgid "In this example:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:102
#: 686fc567fb4748efa9090cd1193c69ae
msgid ""
"You can add this command line to the ``~/.bashrc`` file to automatically "
"set this environment variable when starting a new terminal."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:105
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:59
#: 3723676c7e734953b6526227ee3f2a96 d52d4f80e78a4adb8ec89bcd0433975d
msgid "3 Install ``webots_ros2``"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:107
#: 8dd72fea92914930a4242e014cc59cdc
msgid ""
"You can either install ``webots_ros2`` from the official released "
"package, or install it from the latest up-to-date sources from `Github "
"<https://github.com/cyberbotics/webots_ros2>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:111
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:54
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:66
#: 05521eaab10a4ce2940860c183efa5dd 2cfed99c5a47432c8803609a1d15a9be
#: c1cb1c5d5ca4403ab3f9803680f76c16
msgid "Install ``webots_ros2`` distributed package"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:113
#: 6d68f6a93bdd41c88dcd2d3ef847fa35
msgid "Run the following command in the VM terminal."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:119
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:62
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:74
#: 2034c1880c0646af9dab0fb4cb454449 2f3bd8afde3b4c67ae277393ac36a604
#: eca53dbe4b5a4bf6911170292b70d931
msgid "Install ``webots_ros2`` from sources"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:121
#: be07affef5a14ad7839b51cc7aff6b34
msgid "Install git."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:127
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:64
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:76
#: 1f25bcee1e5941b797f55937be4d4bea 6bfe9c8dc8474eff8c4baee8bf6ecf7a
#: 9b326afc5edd4aa9b4509235f63af425
msgid "Create a ROS 2 workspace with its ``src`` directory."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:133
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:70
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:82
#: 0e1ad58e2d764d54b22e4e29e9e4e22c 40fe4929eecd4156aff40a277e9bea00
#: 45165d97434440339a8aad3bf772e158
msgid "Source the ROS 2 environment."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:139
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:76
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:88
#: 12fac82ec963459694ab1cbaa1b7171b 8d33809ddf40487eb339ba4b6f09d6c9
#: ea228d08f4d849939de196ceb0c8b213
msgid "Retrieve the sources from Github."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:146
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:83
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:95
#: 0d2fb7f8f8a54f9c858cac6e49e12dc9 ab2f24b00cc0405983ee7509490048d6
#: f139182c48be49c0b848a9bd1c8cfe08
msgid "Install the package dependencies."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:154
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:91
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:103
#: 77724d5fcc1647ad87df9f4251843850 8526cd7bba5b42cf9c59cbc3a4f80548
#: c421df625b3c4e57b0731967563857f8
msgid "Build the package using ``colcon``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:160
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:97
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:109
#: 5489e9f760fc4cd29bda72c0a32efc02 dbf0b2f28b5842f59fc3ed8108d8dd1b
#: e474097193524db58744d5b53ec655af
msgid "Source this workspace."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:167
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:117
#: 14fd338d21ea4c989d588a948bddc9b5 80eb569da48d4904806065de377643d1
msgid "4 Launch the ``webots_ros2_universal_robot`` example"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:169
#: a3f6feeaf0544bf09529b8e752f9a4e7
msgid ""
"As mentioned in previous sections, the package uses the shared folder to "
"communicate with Webots from the VM to the host. In order for Webots to "
"be started on the host from the VM's ROS package, a local TCP simulation "
"server must be run."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:172
#: d9c63557243f428696a5bb8f2b7cd550
msgid ""
"The server can be downloaded here: `local_simulation_server.py "
"<https://github.com/cyberbotics/webots-"
"server/blob/main/local_simulation_server.py>`_. Specify the Webots "
"installation folder in ``WEBOTS_HOME`` environment variable (e.g. "
"``/Applications/Webots.app``) and run the server using the following "
"commands in a new terminal on the host (not in the VM):"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:180
#: b98711f13dec4b9082c76d95162fb303
msgid ""
"In the VM, open a terminal and execute the following commands to start a "
"package:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:182
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:108
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:123
#: 13bab16085054944a73e1c4b5cfceb85 2020a63d2a504e03ac8c823123868948
#: 42fd68a393dd472cba2f8e057233c33a
msgid "First source the ROS 2 environment, if not done already."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:188
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:120
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:136
#: 7ae2f98009a04b4297d8fce49f32bd3d 8003f431f3774bee84d82390a2d422d3
#: fb17edd88e154b508ae6abd39f8f4e26
msgid ""
"If installed from sources, source your ROS 2 workspace, if not done "
"already."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:195
#: e19b7f7022294588b5096c137532bda7
msgid ""
"If not already set in ``~/.bashrc``, set ``WEBOTS_SHARED_FOLDER`` (see "
"previous sections for details). Be sure to change the paths according to "
"the location of your respective directories."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:202
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:127
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:143
#: 7e2402c9ec5f43339a6db3dcf7c1586a a280c75a89a74d08b9c3fbcc877d6bb0
#: f20c84685e17416598219625c7a9dbb9
msgid ""
"Use the ROS 2 launch command to start demo packages (e.g. "
"``webots_ros2_universal_robot``)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-MacOS.rst:208
#: 977c314e043c4b4893e6bae3ac80c85f
msgid ""
"If Webots is closed or the ROS 2 process is interrupted, the local server"
" will automatically wait for a new package launch and the shared folder "
"will be cleaned for the next run."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:2
#: 9e5b0ce2e2b24c40bec434bfc83e26a6
msgid "Installation (Ubuntu)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:4
#: 826a30e1be6c4e0699f587cbe1b4814a
msgid ""
"**Goal:** Install the ``webots_ros2`` package and run simulation examples"
" on Ubuntu."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:17
#: b2c2d0a5b6654e16a3da0a25cdb1a5a4
msgid ""
"The ``webots_ros2`` package provides an interface between ROS 2 and "
"Webots. It includes several sub-packages, including "
"``webots_ros2_driver``, which allows you to start Webots and communicate "
"with it. This interface is used in most of the following tutorials, so it"
" is required to install it beforehand. Other sub-packages are mainly "
"examples that show multiple possible implementations using the interface."
" In this tutorial, you are going to install the package and learn how to "
"run one of these examples."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:29
#: ac13c6dd73c541e487d780c70ef7f653
msgid ""
"The Webots software should be installed in order to use the "
"``webots_ros2`` interface. You can follow the `installation procedure "
"<https://cyberbotics.com/doc/guide/installation-procedure>`_ or `build it"
" from sources <https://github.com/cyberbotics/webots/wiki/Linux-"
"installation/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:32
#: b4337cbc3f904d26887e4bc7102b131a
msgid ""
"Alternatively, you can also let ``webots_ros2`` download and install "
"Webots automatically. This option appears when you launch an example of "
"the package and no Webots installation is found."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:36
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:35
#: 0fa08cb5f40b448e82a1d89bd834dc21 227aa2e889394e69add4a7ebe43fd07a
msgid "Multiple Installations of Webots"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:38
#: 21e8ff90cb054b23a702a9aed31b0858
msgid ""
"If you have installed different versions of Webots on your computer, "
"``webots_ros2`` will look for Webots at the following locations (in this "
"order):"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:40
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:39
#: 0d4d1cf599db445896307326e0129a12 977eaf9449284ebeb2a97e90e2eaefcc
msgid ""
"If the ``ROS2_WEBOTS_HOME`` environment variable is set, ROS 2 will use "
"the Webots in this folder, regardless of its version."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:41
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:40
#: 272ca933f5454cf484954350386c85d7 dbbf9062f0034b5da1180e68c6259748
msgid ""
"If the ``WEBOTS_HOME`` environment variable is set, ROS 2 will use the "
"Webots in this folder, regardless of its version."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:42
#: c4793cf056e348d496d3ec1f36342a6a
msgid ""
"If none of these variables is set, ``webots_ros2`` will look for Webots "
"in the default installation paths for a compatible version: "
"``/usr/local/webots`` and ``/snap/webots/current/usr/share/webots``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:43
#: 20f1eff4c15c469a8230815688ae5ae1
msgid ""
"If Webots couldn't be found, ``webots_ros2`` will show a window offering "
"the automatic installation of the latest compatible version of Webots."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:49
#: 75a76afa07a64386b8dc56ba845eb668
msgid "1 Install ``webots_ros2``"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:50
#: c8813c7babd0489b90bc5d48bf7fb7d9
msgid ""
"You can either install the official released package, or install it from "
"the latest up-to-date sources from `Github "
"<https://github.com/cyberbotics/webots_ros2>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:56
#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:68
#: 182a0f1bf25e459ca3d916252cb3e3fc c02c886110b74438ba6078ccc0cede63
msgid "Run the following command in a terminal."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:104
#: 1487ab7e7295474a90c53bc6deec763f
msgid "2 Launch the ``webots_ros2_universal_robot`` example"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:106
#: b8043b88c9d84213b1d11b32099adb49
msgid "The following instructions explain how to start a provided example."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Ubuntu.rst:114
#: 7dfc6e724a684f9596486c40df1608f9
msgid ""
"Setting the ``WEBOTS_HOME`` environment variable allows you to start a "
"specific Webots installation."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:2
#: 698d4c119db145909642a8697409b45d
msgid "Installation (Windows)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:4
#: 82911000cd1146f19fe7b67cd910db4f
msgid ""
"**Goal:** Install the ``webots_ros2`` package and run simulation examples"
" on Windows."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:17
#: 2164298c63ef4b798955a95754bc8011
msgid ""
"The ``webots_ros2`` package provides an interface between ROS 2 and "
"Webots. It includes several sub-packages, including "
"``webots_ros2_driver``, which allows ROS nodes to communicate with "
"Webots. Other sub-packages are mainly examples that show multiple "
"possible implementations using the interface. In this tutorial, you are "
"going to install the package and learn how to run one of these examples."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:28
#: 2ba962f11e89497bad68cd10b0deb644
msgid ""
"Webots is a prerequisite to use the ``webots_ros2`` package. You can "
"follow the `installation procedure <https://cyberbotics.com/doc/guide"
"/installation-procedure>`_ or `build it from sources "
"<https://github.com/cyberbotics/webots/wiki/Windows-installation/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:31
#: 79d4f0b8b12f418d9bba3caac2a10d68
msgid ""
"Alternatively, you can also let ``webots_ros2`` download Webots "
"automatically. This option appears when you launch an example of the "
"package and no Webots installation is found."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:37
#: 2cccf9c0356942428c6610595d65b868
msgid ""
"If you have more than one installation of Webots, ROS 2 will look for "
"Webots at the following locations (in this order):"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:41
#: 91a653edd474452588542b032fc8b086
msgid ""
"If none of the previous points is set/installed ROS 2 will look for "
"Webots in the default installation paths for a compatible version: "
"``C:\\Program Files\\Webots``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:42
#: 7cb945c42f8f4ea48aa5d8960e61b0ac
msgid ""
"If Webots couldn't be found, ``webots_ros2`` will show a window and offer"
" automatic Webots installation of the last compatible version."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:48
#: d94c0afe34604b4bb4e83c0924ba4532
msgid "1 Install WSL2"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:50
#: 89a887e7026949f89cd4b8091fd8b9fb
msgid ""
"On Windows, WSL (Windows Subsystem for Linux) improves the user "
"experience with ROS 2 compared to native Windows installation, as it runs"
" on a Linux platform. Install WSL with an Ubuntu version which is "
"compatible with your ROS distribution and upgrade to WSL2 following the "
"`official Microsoft tutorial <https://learn.microsoft.com/en-"
"us/windows/wsl/install>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:54
#: 94762b283e8540f5a043823e2461cccf
msgid "2 Install ROS 2 in WSL"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:56
#: a0f14457921844a99d421325e630927b
msgid ""
"Install ROS 2 inside Ubuntu WSL, following :doc:`../../../../Installation"
"/Ubuntu-Install-Debians`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:60
#: 63626d4afc974be89a243d9267374795
msgid ""
"You can then either install ``webots_ros2`` from the official released "
"package, or install it from the latest up-to-date sources from `Github "
"<https://github.com/cyberbotics/webots_ros2>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:62
#: 207bb54718804e838356ef1160473d80
msgid "The following commands must be run inside the WSL environment."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:119
#: f282805b108747bd8b84f0f9f480f81a
msgid ""
"WSL doesn't support hardware acceleration (yet). Therefore, Webots should"
" be started on Windows, while the ROS part is running inside WSL. To do "
"so, the following commands must be run inside the WSL environment."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:129
#: 49d5fbdddc4e4dc294a68ff80db0a543
msgid ""
"Setting the ``WEBOTS_HOME`` environment variable allows you to start a "
"specific Webots installation (e.g. ``C:\\Program Files\\Webots``). Use "
"the mount point \"/mnt\" to refer to a path on native Windows."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:151
#: d1a1f7ced6894a48919a65882032c7d1
msgid "5 RViz troubleshooting"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:153
#: 045e7162315c421d98b6b1b95089d813
msgid "With recent versions of WSL2, RViz should work out of the box."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:155
#: 74aff6d1c9b1444292df36a3ecdd1ed9
msgid ""
"You can check if it works correctly by running any example that uses "
"RViz, for example:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:162
#: 1515084a2e414b02a7e7ed53948ea23a
msgid "The Tiago robot can be controlled using:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:168
#: 580361a05dbb4bfab8dec723f126a3f2
msgid ""
"With older WSL versions, RViz2 may not work directly, as no display is "
"available. To use RViz, you can either upgrade WSL or enable X11 "
"forwarding."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:171
#: 364a78a21be64c56a08ccfa0c842d5ff
msgid "Upgrade WSL"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:173
#: 8260a9c5800546edb7251fad8a2f13ee
msgid "In a Windows shell:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:179
#: 433cef9bc78f4eb18cc3310a52f0c969
msgid "Enable X11 forwarding"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:181
#: a14d6f04578542ecb8a548134e21f93a
msgid "For older versions of WSL, the following steps can be followed:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:183
#: d7542fd1c70f4e3c86d78d8084a1641b
msgid "Install `VcXsrv <https://sourceforge.net/projects/vcxsrv/>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:184
#: 0dc7181f00af4161a643d6801e630dea
msgid ""
"Launch VcXsrv. You can leave most of the parameters default, except the "
"``Extra settings`` page, where you must set ``Clipboard``, ``Primary "
"Selection`` and ``Disable access control`` and unset ``Native opengl``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:185
#: 61c51067e30f495dbe076a42ab438614
msgid "You can save the configuration for future launches."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:186
#: 5684f44c09d544ee8446015da5a86852
msgid ""
"Click on ``Finish``, you will see that the X11 server is running in the "
"icon tray."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:187
#: 22eac8aac7a340e6a940179e93abbc73
msgid "In your WSL environment, export the ``DISPLAY`` variable."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Installation-Windows.rst:193
#: e2c1f8aa47e346bb95c1308a76b828c7
msgid ""
"You can add this to your ``.bashrc``, so that it is set for every future "
"WSL environment."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:2
#: 3ccdb6d3a64f4d2a9640ee0d083320f3
msgid "Setting up a robot simulation (Advanced)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:4
#: b4471698223041f3890f6a1121245bfd
msgid "**Goal:** Extend a robot simulation with an obstacle avoider node."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:17
#: 594d70ed0c2c4e33946668732dcf45f3
msgid ""
"In this tutorial you will extend the package created in the first part of"
" the tutorial: :doc:`./Setting-Up-Simulation-Webots-Basic`. The aim is to"
" implement a ROS 2 node that avoids obstacles using the robot's distance "
"sensors. This tutorial focuses on using robot devices with the "
"``webots_ros2_driver`` interface."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:24
#: 436ab8fdccb744e4b2e083e3a5e2ff75
msgid ""
"This is a continuation of the first part of the tutorial: :doc"
":`./Setting-Up-Simulation-Webots-Basic`. It is mandatory to start with "
"the first part to set up the custom packages and necessary files."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:27
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:52
#: d81aa1d17afd44f8ba8f3806dbbdb2d4 f48286a372394c18b95b7050df85d070
msgid ""
"This tutorial is compatible with version 2023.1.0 of ``webots_ros2`` and "
"Webots R2023b, as well as upcoming versions."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:33
#: b6221c3c697447df8576aef67bbb9afe
msgid "1 Updating ``my_robot.urdf``"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:35
#: 0bc603a9b60a4f3bb837d6940e137f25
msgid ""
"As mentioned in :doc:`./Setting-Up-Simulation-Webots-Basic`, "
"``webots_ros2_driver`` contains plugins to interface most of Webots "
"devices with ROS 2 directly. These plugins can be loaded using the "
"``<device>`` tag in the URDF file of the robot. The ``reference`` "
"attribute should match the Webots device ``name`` parameter. The list of "
"all existing interfaces and the corresponding parameters can be found `on"
" the devices reference page "
"<https://github.com/cyberbotics/webots_ros2/wiki/References-Devices>`_. "
"For available devices that are not configured in the URDF file, the "
"interface will be automatically created and default values will be used "
"for ROS parameters (e.g. ``update rate``, ``topic name``, and ``frame "
"name``)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:41
#: e25552b4daf646a5a0eda1130f623679
msgid "In ``my_robot.urdf`` replace the whole contents with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:45
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:63
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:135
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:66
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:179
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:288
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:315
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:403
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:47
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:69
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:166
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:185
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:220
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:362
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:384
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:429
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:482
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:294
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:378
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:456
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:481
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:509
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:571
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:662
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:756
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:782
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:810
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:35
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:60
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:84
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:113
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:136
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:248
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:61
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:162
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:272
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:90
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:141
#: 05be498f989b4a41bb2654c5dd51aa10 0ec450c55a9d459a810680033840d452
#: 1bcdd09e53024a40b0c7d1435330b7b7 226e5ad207164ff093dd62cb5b493c21
#: 255a2a5eba784820b938550f8dc05f88 3c8c8d883e8848ec9af7957a31a15ed0
#: 3e89aae3934f436aa3077cf557779e27 3ee5469f570441b8a2b360e7b79f2f56
#: 3f156499ccb84e0b836aa2deb6b50d34 45cbb4e785f24fb197a6ddb229f8a25e
#: 4ec99f5985874bfba72b00bcfe6dec86 5adbc870f8244b829af17b7ed7c749ef
#: 642b1df1e3c145b18e0237b456a96d90 666df9706f8544f582087ed52e882706
#: 6b3a14ce07a44add848508fbd85a1ea3 6d860e65f8614e13bca5c1e7901f54d9
#: 7b0b41814a2a42ee96dfa78f316f74f3 869b1b1676ef496ab5946381551b2344
#: 8cbcc902620d4fb1859234692dc669b5 91a3b3f3333149109fd3d30a6ca5e093
#: 91f8c6de8b3e4964ad18ba9187083c24 92c67da0177a4989b47799f4098eff06
#: 941aa04b603b4a62a7d3b0471623cea3 9a46d934c4124f9a8ed4408b284f23ea
#: a7a29383c58c4823b92d21cbc20de6ef b20707c7d232462cb0babadf7df1f96d
#: b3a32592f89d48079935baca8b6f74d6 be981e9f9d1040608065f12dee64a252
#: c108ccd3794b4776b9db7ec7ae4f57fa c49ad2419ca743ec909fa96e0edab8ef
#: c7bad1d8130b4292928d456224e376ae cf0cdba90cab43909d437ae7205f4e43
#: d0f914593bb844fdae6aca874325b6e6 d47635cc807442cc8df3ab45c950f07a
#: d95e6dad2b40479d8a8e56f85eb60761 da39c663af134764985eb88f0891512f
#: e6ada2042a584caaac40cfb7fb964432 f29ad9d43a804ed3a2c13f025744f7bb
msgid "Python"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:50
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:94
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:146
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:104
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:221
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:296
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:323
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:413
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:250
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:340
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:450
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:467
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:499
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:538
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:609
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:750
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:767
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:800
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:25
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:50
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:74
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:100
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:127
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:72
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:126
#: 039d85610fc5476ab6c15cbed0957b67 106a2abb95604231b87375708df500c0
#: 13342e98ef114989a63af58daeb79006 194afed407a546d798ab75246334cbd0
#: 24110236e4ff43fa981f0f6d0c3748f5 2805c0f62ae54819956759447f2bf0c5
#: 36109a98a002426e89b1c25f10f516ff 3b2807c240d84e6da769ce8bf9ac7981
#: 5fdd9214c9ae430aa0c90a7ee7743769 624474b278f14e2eb409d711c2ba923e
#: 6a4d86cd60f14cf5ae17e80387cf4503 6c5e0d5c530d4a3ca02296b6d7f7398e
#: 6e8d74b73947465e9c9046f650d1a1cb 7021bd4f7e114f2c81f018b621e186cf
#: 827eedbe2b2d461f9de79baa6448bbd9 9e4fbb4a5f7d4059a72d1705744d99a5
#: a1edbb534b794af388eb8d68332b377f a5c57fadcce34fde90071efe0b5d823b
#: b3f208e0aad8416bb6f048230dfaf10b b7dfd550ee2946c1b2e2b645e79f46a8
#: c3147150f35744438c1b49694be582a4 e4e0c0adedcb4d52869f7c8503909ee4
#: ed854145d9bf4b228e4df32d048f1f3d f79ea27343c749ba85cc09509fb8c5cb
#: f9456592b2d241ecaad55f6d699df6d3
msgid "C++"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:56
#: 1bdc126148e840f6a18467123c4d4508
msgid ""
"In addition to your custom plugin, the ``webots_ros2_driver`` will parse "
"the ``<device>`` tags referring to the **DistanceSensor** nodes and use "
"the standard parameters in the ``<ros>`` tags to enable the sensors and "
"name their topics."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:59
#: cf3866b89baf4903aaaaf453608a1b52
msgid "2 Creating a ROS node to avoid obstacles"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:65
#: 9be53962112b4598812ede2694520e4c
msgid ""
"The robot will use a standard ROS node to detect the wall and send motor "
"commands to avoid it. In the ``my_package/my_package/`` folder, create a "
"file named ``obstacle_avoider.py`` with this code:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:71
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:107
#: 2f56d96752a84090ad5fde0703fe3f94 9d3c328c47ea40d4af9dcf2cd53bda1e
msgid ""
"This node will create a publisher for the command and subscribe to the "
"sensors topics here:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:78
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:113
#: 5b248aa4ec364a018be4508e117c8bb0 63662f8792a24ccfa79412fc6e058c60
msgid ""
"When a measurement is received from the left sensor it will be copied to "
"a member field:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:85
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:119
#: 14eb895bcbad44eeb596b277fb05caca 5a5ffd139b1144ccb487a5ed55903c31
msgid ""
"Finally, a message will be sent to the ``/cmd_vel`` topic when a "
"measurement from the right sensor is received. The ``command_message`` "
"will register at least a forward speed in ``linear.x`` in order to make "
"the robot move when no obstacle is detected. If any of the two sensors "
"detect an obstacle, ``command_message`` will also register a rotational "
"speed in ``angular.z`` in order to make the robot turn right."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:96
#: f5304126ec364fd88ad88f4ffff0b2f8
msgid ""
"The robot will use a standard ROS node to detect the wall and send motor "
"commands to avoid it. In the ``my_package/include/my_package`` folder, "
"create a header file named ``ObstacleAvoider.hpp`` with this code:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:102
#: 51dd068cfe5f4d7d93b95b83c4d8425f
msgid ""
"In the ``my_package/src`` folder, create a source file named "
"``ObstacleAvoider.cpp`` with this code:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:129
#: f4dbdf0b7e7d40d999df7fcd1fb2a90d
msgid "3 Updating additional files"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:131
#: 1d973253fd214f54849f58a8ee06afe1
msgid "You have to modify these two other files to launch your new node."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:137
#: 455bce7fa80a458c8ffbc414ea62e1dc
msgid "Edit ``setup.py`` and replace ``'console_scripts'`` with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:144
#: 89cd2620a5604686a4f0df9b4dde09fb
msgid "This will add an entry point for the ``obstacle_avoider`` node."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:148
#: 392be297eac64f42b0f4794b1ae8ab37
msgid ""
"Edit ``CMakeLists.txt`` and add the compilation and installation of the "
"``obstacle_avoider``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:154
#: 90c56fd29bde49be89ef4aff298f71e1
msgid ""
"Go to the file ``robot_launch.py`` and replace ``def "
"generate_launch_description():`` with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:160
#: 724b91f543244822931b3001181ab225
msgid ""
"This will create an ``obstacle_avoider`` node that will be included in "
"the ``LaunchDescription``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:163
#: 708ba6c1163a461783f8d0b01f49918f
msgid "4 Test the obstacle avoidance code"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:165
#: 3e5007a1863f4f879824d170d0477bc3
msgid "Launch the simulation from a terminal in your ROS 2 workspace:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:171
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:443
#: 434363dd4afb4902bff083b1a0c1c4a8 c8b111742af7486b8c97eca288de5ed7
msgid "From a terminal in your ROS 2 workspace run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:181
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:456
#: cf9e9ee5509545b98cc71763bb63d571 de821b4feac7488b937cf9e56e08a552
msgid "From a terminal in your WSL ROS 2 workspace run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:190
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:465
#: a6f7e31981d54309b1a5e48afabc253b f178752fa2e3426a8da61e75cec453de
msgid ""
"Be sure to use the ``/mnt`` prefix in front of your path to the Webots "
"installation folder to access the Windows file system from WSL."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:194
#: fb99d8008fcb49e6bd2aea4a477e12d1
msgid ""
"In a terminal of the host machine (not in the VM), if not done already, "
"specify the Webots installation folder (e.g. "
"``/Applications/Webots.app``) and start the server using the following "
"commands:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:201
#: 7c75cce4b8e44faf9c00bdf6f7793951
msgid ""
"Note that the server keeps running once the ROS 2 nodes are ended. You "
"don't need to restart it every time you want to launch a new simulation. "
"From a terminal in the Linux VM in your ROS 2 workspace, build and launch"
" your custom package with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:212
#: 46656fb0c13b4f3984c8cc7008fd145f
msgid ""
"Your robot should go forward and before hitting the wall it should turn "
"clockwise. You can press ``Ctrl+F10`` in Webots or go to the ``View`` "
"menu, ``Optional Rendering`` and ``Show DistanceSensor Rays`` to display "
"the range of the distance sensors of the robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:220
#: bf140a97d21645839569fedb2a455dce
msgid ""
"In this tutorial, you extended the basic simulation with a obstacle "
"avoider ROS 2 node that publishes velocity commands based on the distance"
" sensor values of the robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:223
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:520
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:222
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:268
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:113
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:275
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:359
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:194
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:248
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:270
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:330
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:132
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:374
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:532
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:830
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:202
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:494
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:437
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:437
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:542
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:416
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:523
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:344
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:207
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:118
#: 0353db22ba394f168d1551f4d7b2edca 05d8ee700d3a4f27bdd2105096b54263
#: 0af72519c2c946c3b76386ac1195b1fc 104a9dc05b2644cbb9f58c0fd5e8643c
#: 1817e11738364ce69d4f3abb840195b3 2745b4cac4894aef81dbc02bd2d884a8
#: 3d957cab6f9a4d598d38096353a38048 4328aa05803c43da8c36b903546abd97
#: 545b83d8c7df4b7fbe37f5862dfa037b 54e3dcb535ff401785e18af2af176594
#: 57ab6af366bf4dd3b5d421f266b639c2 61a01d8b932943a090c8e0057bbf9180
#: 816fb270edd34ba28522c5a0d94c98b3 84ffb0f215fa47bc8b1d7f98d7f53f73
#: 8a32f366bb5747ac967616b7a95202a7 8d1a2c65adbb4005b6a18f2866462a9d
#: 8e5524f61b7e44508f7acd15b4d9cef6 8eef100ae15c4113a0a070c146fb96be
#: 91e3a17dca2446e3ba00d00ed941a6d9 95159ad42b114512b5ae37fcd7a58b60
#: 9711196b33fc41e1901da17ebb110c65 9936b7bf7e9d474097ffd6692acea485
#: 9ea2abbbdf294504bcb6518d1fbfd3f2 e6a5b4b3d4d247bd809d91f4d5aa4acc
#: edfe61fd7166417e9b3be61523e86c01
msgid "Next steps"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:225
#: 99446739f0404a44a7663909ffc98736
msgid ""
"You might want to improve the plugin or create new nodes to change the "
"behavior of the robot. You can also implement a reset handler to "
"automatically restart your ROS nodes when the simulation is reset from "
"the Webots interface:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Advanced.rst:228
#: 972df7864bd940be8cfe2f94743fa7b8
msgid ":doc:`./Simulation-Reset-Handler`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:7
#: 9fa224a3187941f5b06a7496d1b5b01e
msgid "Setting up a robot simulation (Basic)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:9
#: 86c722e2c9384d07b1908d372f882bab
msgid "**Goal:** Setup a robot simulation and control it from ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:13
#: d59667035a7f431992563cb4f524faaa
msgid "**Time:** 30 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:22
#: 48611596b7c24ac79dfdd17fc9e949a2
msgid ""
"In this tutorial, you are going to use the Webots robot simulator to set-"
"up and run a very simple ROS 2 simulation scenario."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:24
#: 42b66e7216c446ba849cab66843aceba
msgid ""
"The ``webots_ros2`` package provides an interface between ROS 2 and "
"Webots. It includes several sub-packages, but in this tutorial, you are "
"going to use only the ``webots_ros2_driver`` sub-package to implement a "
"Python or C++ plugin controlling a simulated robot. Some other sub-"
"packages contain demos with different robots such as the TurtleBot3. They"
" are documented in the `Webots ROS 2 examples "
"<https://github.com/cyberbotics/webots_ros2/wiki/Examples>`_ page."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:32
#: 8ec8e0903524443a8d4442c2ba536339
msgid ""
"It is recommended to understand basic ROS principles covered in the "
"beginner :doc:`../../../../Tutorials`. In particular, :doc"
":`../../../Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-"
"Turtlesim`, :doc:`../../../Beginner-CLI-Tools/Understanding-ROS2-Topics"
"/Understanding-ROS2-Topics`, :doc:`../../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace`, :doc"
":`../../../Beginner-Client-Libraries/Creating-Your-First-ROS2-Package` "
"and :doc:`../../../Intermediate/Launch/Creating-Launch-Files` are useful "
"prerequisites."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:39
#: e1ddf0999fcf4d218226ffcbc8525dbb
msgid ""
"The Linux and ROS commands of this tutorial can be run in a standard "
"Linux terminal. The following page :doc:`./Installation-Ubuntu` explains "
"how to install the ``webots_ros2`` package on Linux."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:44
#: 0bab427ad34f40acbed65e030f405d25
msgid ""
"The Linux and ROS commands of this tutorial must be run in a WSL (Windows"
" Subsystem for Linux) environment. The following page :doc"
":`./Installation-Windows` explains how to install the ``webots_ros2`` "
"package on Windows."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:49
#: bcbc035692b94f058251889045424a87
msgid ""
"The Linux and ROS commands of this tutorial must be run in a pre-"
"configured Linux Virtual Machine (VM). The following page :doc"
":`./Installation-MacOS` explains how to install the ``webots_ros2`` "
"package on macOS."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:58
#: df782958a7874408ba53cf8dd0fa1882
msgid "1 Create the package structure"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:60
#: df6acfbf2fd747e4bed4430dae19e270
msgid ""
"Let's organize the code in a custom ROS 2 package. Create a new package "
"named ``my_package`` from the ``src`` folder of your ROS 2 workspace. "
"Change the current directory of your terminal to ``ros2_ws/src`` and run:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:72
#: 76d9fb2eba2d4bbfa22ee56296eca3ea
msgid ""
"The ``--node-name my_robot_driver`` option will create a "
"``my_robot_driver.py`` template Python plugin in the ``my_package`` "
"subfolder that you will modify later. The ``--dependencies rclpy "
"geometry_msgs webots_ros2_driver`` option specifies the packages needed "
"by the ``my_robot_driver.py`` plugin in the ``package.xml`` file."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:75
#: ab960d88bd0f4b2b8c9c839eb2a99596
msgid ""
"Let's add a ``launch`` and a ``worlds`` folder inside the ``my_package`` "
"folder."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:83
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:130
#: b25ed410a0b542beb1c955351a73aa81 d8ab80c5fefa4032b7f456c3e376bb2e
msgid "You should end up with the following folder structure:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:110
#: 3d7dcd46365940b696215d25f7272e22
msgid ""
"The ``--node-name MyRobotDriver`` option will create a "
"``MyRobotDriver.cpp`` template C++ plugin in the ``my_package/src`` "
"subfolder that you will modify later. The ``--dependencies rclcpp "
"geometry_msgs webots_ros2_driver pluginlib`` option specifies the "
"packages needed by the ``MyRobotDriver`` plugin in the ``package.xml`` "
"file."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:114
#: 6497442c7d364f349c16aeec681750bf
msgid ""
"Let's add a ``launch``, a ``worlds`` and a ``resource`` folder inside the"
" ``my_package`` folder."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:123
#: 6d516bacca634cecb3bba140ff9afc43
msgid ""
"Two additional files must be created: the header file for "
"``MyRobotDriver`` and the ``my_robot_driver.xml`` pluginlib description "
"file."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:149
#: 1ffb52c95ada4bb6b06bc3c4db8d9db4
msgid "2 Setup the simulation world"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:151
#: 39f9054cf1934e8c856e483cee42e676
msgid ""
"You will need a world file containing a robot to launch your simulation. "
":download:`Download this world file <Code/my_world.wbt>` and move it "
"inside ``my_package/worlds/``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:154
#: 3b2717a3dcb348678b6c272f546ef88f
msgid ""
"This is actually a fairly simple text file you can visualize in a text "
"editor. A simple robot is already included in this ``my_world.wbt`` world"
" file."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:159
#: 8e1949c765214a7a871335a862d7fcac
msgid ""
"In case you want to learn how to create your own robot model in Webots, "
"you can check this `tutorial "
"<https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:162
#: 6d8c006b18b44ee8b486ccd5061e7799
msgid "3 Edit the ``my_robot_driver`` plugin"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:164
#: 0c69b3e7a01646a583dd27225a2711e4
msgid ""
"The ``webots_ros2_driver`` sub-package automatically creates a ROS 2 "
"interface for most sensors. More details on existing device interfaces "
"and how to configure them is given in the second part of the tutorial: "
":doc:`./Setting-Up-Simulation-Webots-Advanced`. In this task, you will "
"extend this interface by creating your own custom plugin. This custom "
"plugin is a ROS node equivalent to a robot controller. You can use it to "
"access the `Webots robot API  "
"<https://cyberbotics.com/doc/reference/robot?tab-language=python>`_ and "
"create your own topics and services to control your robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:172
#: ba5335ec948d4885ba1816dff0ee7aad
msgid ""
"The purpose of this tutorial is to show a basic example with a minimum "
"number of dependencies. However, you could avoid the use of this plugin "
"by using another ``webots_ros2`` sub-package named "
"``webots_ros2_control``, introducing a new dependency. This other sub-"
"package creates an interface with the ``ros2_control`` package that "
"facilitates the control of a differential wheeled robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:181
#: c4378ca556ac4e6da085526d0802856e
msgid ""
"Open ``my_package/my_package/my_robot_driver.py`` in your favorite editor"
" and replace its contents with the following:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:186
#: 2be68f35b8484e088bd667b063e32e86
msgid "As you can see, the ``MyRobotDriver`` class implements three methods."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:188
#: d63717d410744975b04d4983bf62e8e4
msgid ""
"The first method, named ``init(self, ...)``, is actually the ROS node "
"counterpart of the Python ``__init__(self, ...)`` constructor. The "
"``init`` method always takes two arguments:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:191
#: d312255305714af889017550f58c44be
msgid "The ``webots_node`` argument contains a reference on the Webots instance."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:192
#: 3d26c40d9a2b48c48f759c55cf371dc6
msgid ""
"The ``properties`` argument is a dictionary created from the XML tags "
"given in the URDF files (:ref:`4 Create the my_robot.urdf file`) and "
"allows you to pass parameters to the controller."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:194
#: 5eda9601dc8e49b2a6a2bbcaaf2b7426
msgid ""
"The robot instance from the simulation ``self.__robot`` can be used to "
"access the `Webots robot API <https://cyberbotics.com/doc/reference/robot"
"?tab-language=python>`_. Then, it gets the two motor instances and "
"initializes them with a target position and a target velocity. Finally a "
"ROS node is created and a callback method is registered for a ROS topic "
"named ``/cmd_vel`` that will handle ``Twist`` messages."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:203
#: 68709b4b2f4640bbb49dce47505fe157
msgid ""
"Then comes the implementation of the ``__cmd_vel_callback(self, twist)`` "
"callback private method that will be called for each ``Twist`` message "
"received on the ``/cmd_vel`` topic and will save it in the "
"``self.__target_twist`` member variable."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:210
#: eaee5e2fce3b49ecb3d69916fb040d0a
msgid ""
"Finally, the ``step(self)`` method is called at every time step of the "
"simulation. The call to ``rclpy.spin_once()`` is needed to keep the ROS "
"node running smoothly. At each time step, the method will retrieve the "
"desired ``forward_speed`` and ``angular_speed`` from "
"``self.__target_twist``. As the motors are controlled with angular "
"velocities, the method will then convert the ``forward_speed`` and "
"``angular_speed`` into individual commands for each wheel. This "
"conversion depends on the structure of the robot, more specifically on "
"the radius of the wheel and the distance between them."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:223
#: 815007507bc440e1bcf7f313aa06355a
msgid ""
"Open ``my_package/src/MyRobotDriver.hpp`` in your favorite editor and "
"replace its contents with the following:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:228
#: d31ede50415847c5b4a4ea7219b6459d
msgid ""
"The class ``MyRobotDriver`` is defined, which inherits from the "
"``webots_ros2_driver::PluginInterface`` class. The plugin has to override"
" ``step(...)`` and ``init(...)`` functions. More details are given in the"
" ``MyRobotDriver.cpp`` file. Several helper methods, callbacks and member"
" variables that will be used internally by the plugin are declared "
"privately."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:233
#: a6ad8d1598a04712b25ee5ff800072bd
msgid ""
"Then, open ``my_package/src/MyRobotDriver.cpp`` in your favorite editor "
"and replace its contents with the following:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:238
#: 301ebbe839e64063b611b5413956ab54
msgid ""
"The ``MyRobotDriver::init`` method is executed once the plugin is loaded "
"by the ``webots_ros2_driver`` package. It takes two arguments:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:241
#: 49c62333fe1943818bd00c010dc5e0a5
msgid ""
"A pointer to the ``WebotsNode`` defined by ``webots_ros2_driver``, which "
"allows to access the ROS 2 node functions."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:242
#: 06fac9f76f0f41418f4ad1cec2ae2a67
msgid ""
"The ``parameters`` argument is an unordered map of strings, created from "
"the XML tags given in the URDF files (:ref:`4 Create the my_robot.urdf "
"file`) and allows to pass parameters to the controller. It is not used in"
" this example."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:244
#: 17df7900db244581be8bde85e346995d
msgid ""
"It initializes the plugin by setting up the robot motors, setting their "
"positions and velocities, and subscribing to the ``/cmd_vel`` topic."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:250
#: f158c135bc76442cb1b720f8a8a622b4
msgid ""
"Then comes the implementation of the ``cmdVelCallback()`` callback "
"function that will be called for each Twist message received on the "
"``/cmd_vel`` topic and will save it in the ``cmd_vel_msg`` member "
"variable."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:256
#: 7cb958a4b5224be88a06d93b3f070c80
msgid ""
"The ``step()`` method is called at every time step of the simulation. At "
"each time step, the method will retrieve the desired ``forward_speed`` "
"and ``angular_speed`` from ``cmd_vel_msg``. As the motors are controlled "
"with angular velocities, the method will then convert the "
"``forward_speed`` and ``angular_speed`` into individual commands for each"
" wheel. This conversion depends on the structure of the robot, more "
"specifically on the radius of the wheel and the distance between them."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:265
#: a26616940fc84cc6a2a24051ae8dd655
msgid ""
"The final lines of the file define the end of the ``my_robot_driver`` "
"namespace and include a macro to export the ``MyRobotDriver`` class as a "
"plugin using the ``PLUGINLIB_EXPORT_CLASS`` macro. This allows the plugin"
" to be loaded by the Webots ROS2 driver at runtime."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:274
#: b0091ac1f7e34ecf80d14677a799eff8
msgid ""
"While the plugin is implemented in C++, the C API must be used to "
"interact with the Webots controller library."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:279
#: e14277dcc6ab49398abd78a95c129385
msgid "4 Create the ``my_robot.urdf`` file"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:281
#: 88e901743d154b6cbb6e7434a648b92b
msgid ""
"You now have to create a URDF file to declare the ``MyRobotDriver`` "
"plugin. This will allow the ``webots_ros2_driver`` ROS node to launch the"
" plugin and connect it to the target robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:284
#: 238456bf4a8546c59ab5c929807d9fa4
msgid ""
"In the ``my_package/resource`` folder create a text file named "
"``my_robot.urdf`` with this content:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:293
#: 574c52883d2745afbf82239c6d09528c
msgid ""
"The ``type`` attribute specifies the path to the class given by the "
"hierarchical structure of files. ``webots_ros2_driver`` is responsible "
"for loading the class based on the specified package and modules."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:301
#: 1f2562f0f771424e9f0bd83045265144
msgid ""
"The ``type`` attribute specifies the namespace and class name to load. "
"``pluginlib`` is responsible for loading the class based on the specified"
" information."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:306
#: dc086224f1024a35b602104745e894c4
msgid ""
"This simple URDF file doesn't contain any link or joint information about"
" the robot as it is not needed in this tutorial. However, URDF files "
"usually contain much more information as explained in the "
":doc:`../../../Intermediate/URDF/URDF-Main` tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:311
#: 9d1686b70b544f33995b07389ba9b18c
msgid ""
"Here the plugin does not take any input parameter, but this can be "
"achieved with a tag containing the parameter name."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:332
#: 0419df54f65e468ab6eb8e166b38784d
msgid ""
"This is namely used to pass parameters to existing Webots device plugins "
"(see :doc:`./Setting-Up-Simulation-Webots-Advanced`)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:335
#: 9881e41a3a7944beadc66e51035f42f6
msgid "5 Create the launch file"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:337
#: 96ab1d4e472642488e617b0252c4decd
msgid ""
"Let's create the launch file to easily launch the simulation and the ROS "
"controller with a single command. In the ``my_package/launch`` folder "
"create a new text file named ``robot_launch.py`` with this code:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:343
#: baea6240578d494c86b23da0258b28b3
msgid ""
"The ``WebotsLauncher`` object is a custom action that allows you to start"
" a Webots simulation instance. You have to specify in the constructor "
"which world file the simulator will open."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:351
#: 2f61c4100f6b46ed831a07e9b53cac2b
msgid ""
"Then, the ROS node interacting with the simulated robot is created. This "
"node, named ``WebotsController``, is located in the "
"``webots_ros2_driver`` package."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:358
#: 285614954b8b4239af50650ee41c2359
msgid ""
"The node will be able to communicate with the simulated robot by using a "
"custom protocol based on IPC and shared memory."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:362
#: da2fe5c3966847e1bf2853cc976d7879
msgid ""
"The node (in WSL) will be able to communicate with the simulated robot "
"(in Webots on native Windows) through a TCP connection."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:366
#: 24941748dbab41dda1cdc421874d5934
msgid ""
"The node (in the docker container) will be able to communicate with the "
"simulated robot (in Webots on native macOS) through a TCP connection."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:369
#: f3b4e60f5cbd4d8d8b3555d4815098f5
msgid ""
"In your case, you need to run a single instance of this node, because you"
" have a single robot in the simulation. But if you had more robots in the"
" simulation, you would have to run one instance of this node per robot. "
"The ``robot_name`` parameter is used to define the name of the robot the "
"driver should connect to. The ``robot_description`` parameter holds the "
"path to the URDF file which refers to the ``MyRobotDriver`` plugin. You "
"can see the ``WebotsController`` node as the interface that connects your"
" controller plugin to the target robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:380
#: cdb03e85679b460eaead7a2ca2169577
msgid ""
"After that, the two nodes are set to be launched in the "
"``LaunchDescription`` constructor:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:387
#: 7839d0eb21724a6d83f20fdc538effe2
msgid ""
"Finally, an optional part is added in order to shutdown all the nodes "
"once Webots terminates (e.g., when it gets closed from the graphical user"
" interface)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:396
#: acec89374d914317a78dd8f4ac6a166f
msgid ""
"More details on ``WebotsController`` and ``WebotsLauncher`` arguments can"
" be found `on the nodes reference page "
"<https://github.com/cyberbotics/webots_ros2/wiki/References-Nodes>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:399
#: 08c43b7cc7344d0fa237b5a3565603e3
msgid "6 Edit additional files"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:405
#: ee8a5496ea9c41b0a4f4a7bbc096357a
msgid ""
"Before you can start the launch file, you have to modify the ``setup.py``"
" file to include the extra files you added. Open ``my_package/setup.py`` "
"and replace its contents with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:411
#: 4fb1ec1ba92049a9a95619ae4f859a03
msgid ""
"This sets-up the package and adds in the ``data_files`` variable the "
"newly added files: ``my_world.wbt``, ``my_robot.urdf`` and "
"``robot_launch.py``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:415
#: d1bb2131c538480285d075b4e2b69fdc
msgid ""
"Before you can start the launch file, you have to modify "
"``CMakeLists.txt`` and ``my_robot_driver.xml`` files:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:417
#: 51b00cd4c04d4837b2e48ceb3e74cc89
msgid "``CMakeLists.txt`` defines the compilation rules of your plugin."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:418
#: e333108f6e5947f59242ee72d9400c6e
msgid ""
"``my_robot_driver.xml`` is necessary for the pluginlib to find your "
"Webots ROS 2 plugin."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:420
#: 709c35103ae6414297b168be634fa7ab
msgid "Open ``my_package/my_robot_driver.xml`` and replace its contents with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:425
#: 8775b64dfdc24e84b2e05eb99b85bd79
msgid "Open ``my_package/CMakeLists.txt`` and replace its contents with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:430
#: 83542c0e31c44a92b11991916741daf9
msgid ""
"The CMakeLists.txt exports the plugin configuration file with the "
"``pluginlib_export_plugin_description_file()``, defines a shared library "
"of the C++ plugin ``src/MyRobotDriver.cpp``, and sets the include and "
"library dependencies using ``ament_target_dependencies()``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:432
#: afe7e7970a7b45688188938704994f42
msgid ""
"The file then installs the library, the directories ``launch``, "
"``resource``, and ``worlds`` to the ``share/my_package`` directory. "
"Finally, it exports the include directories and libraries using "
"``ament_export_include_directories()`` and ``ament_export_libraries()``, "
"respectively, and declares the package using ``ament_package()``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:437
#: 9b89397889224cb1903c9b6708e6902c
msgid "7 Test the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:451
#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:467
#: c77a0be67c824c3ea05ab69f474b92cb c862dbf7ae7d47759c2cf5d688153408
msgid ""
"This will launch the simulation. Webots will be automatically installed "
"on the first run in case it was not already installed."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:472
#: 68f27a12212b4b88854256f900d9ab13
msgid ""
"On macOS, a local server must be started on the host to start Webots from"
" the VM. The local server can be downloaded `on the webots-server "
"repository <https://github.com/cyberbotics/webots-"
"server/blob/main/local_simulation_server.py>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:475
#: eb1fad9648b847aab4888c3c3c2a05bf
msgid ""
"In a terminal of the host machine (not in the VM), specify the Webots "
"installation folder (e.g. ``/Applications/Webots.app``) and start the "
"server using the following commands:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:482
#: 18cad9179afc43c198c6a643509091ce
msgid ""
"From a terminal in the Linux VM in your ROS 2 workspace, build and launch"
" your custom package with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:493
#: 4e92adb48800411a9c9c1304122047c8
msgid ""
"If you want to install Webots manually, you can download it `here "
"<https://github.com/cyberbotics/webots/releases/latest>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:496
#: 24e28281ea15486eb1ee94624ea6c4f7
msgid "Then, open a second terminal and send a command with:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:502
#: d3b69eb56c054c80861918ff54d023f0
msgid "The robot is now moving forward."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:506
#: 4d7553ead32d4e1bbf806918ebce5358
msgid ""
"At this point, the robot is able to blindly follow your motor commands. "
"But it will eventually bump into the wall as you order it to move "
"forwards."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:511
#: b81cc4bc619e423490fdd73b25acc74a
msgid ""
"Close the Webots window, this should also shutdown your ROS nodes started"
" from the launcher. Close also the topic command with ``Ctrl+C`` in the "
"second terminal."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:517
#: 69b57b6f06bb44aa9efc7dacaeb8bd23
msgid ""
"In this tutorial, you set-up a realistic robot simulation with Webots and"
" implemented a custom plugin to control the motors of the robot."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:522
#: 54f1648397ea464ba89c183fcca20678
msgid ""
"To improve the simulation, the robot's sensors can be used to detect "
"obstacles and avoid them. The second part of the tutorial shows how to "
"implement such behaviour:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Setting-Up-Simulation-Webots-Basic.rst:525
#: 86e782d2d7d941948a92ab61b30010d8
msgid ":doc:`./Setting-Up-Simulation-Webots-Advanced`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:2
#: 898712bee5ad4b9aaebf6b9d65719e93
msgid "Setting up a Reset Handler"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:4
#: f26826d8567f40ab97d2b63268c96af1
msgid ""
"**Goal:** Extend a robot simulation with a reset handler to restart nodes"
" when the reset button of Webots is pressed."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:17
#: fd75c8ecfd2c44ca93eeb35c23d3d9a3
msgid ""
"In this tutorial, you will learn how to implement a reset handler in a "
"robot simulation using Webots. The Webots reset button reverts the world "
"to the initial state and restarts controllers. It is convenient as it "
"quickly resets the simulation, but in the context of ROS 2, robot "
"controllers are not started again making the simulation stop. The reset "
"handler allows you to restart specific nodes or perform additional "
"actions when the reset button in Webots is pressed. This can be useful "
"for scenarios where you need to reset the state of your simulation or "
"restart specific components without completely restarting the complete "
"ROS system."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:26
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:24
#: 68e4ecae014047298b7bdcb25944bbbc 80b932edcbe640bbae70607f70699542
msgid ""
"Before proceeding with this tutorial, make sure you have completed the "
"following:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:28
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:26
#: 90dfe3392fd04a3bb042078e16809f84 cea547eb6292493896a42b1594f2e981
msgid ""
"Understanding of ROS 2 nodes and topics covered in the beginner "
":doc:`../../../../Tutorials`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:29
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:27
#: 29fbbe48a51f4e71b90d236a0b6d79ae e460791b8e9741d8aa96fd54bfc5c480
msgid "Knowledge of Webots and ROS 2 and its interface package."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:30
#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:28
#: 4e8507c66003469ebc7d342b0004a3e8 6218f90875aa4950bc97f0412566ceba
msgid "Familiarity with :doc:`./Setting-Up-Simulation-Webots-Basic`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:34
#: 48bcce55f42d4cfd8d74be265ab4fa83
msgid "Reset Handler for Simple Cases (Controllers Only)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:36
#: f93773d941d045d5b764d62f38fbc82e
msgid "In the launch file of your package, add the ``respawn`` parameter."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:59
#: 47dfa19941c64731a39b6d0088950c29
msgid ""
"On reset, Webots kills all driver nodes. Therefore, to start them again "
"after reset, you should set the ``respawn`` property of the driver node "
"to ``True``. It will ensure driver nodes are up and running after the "
"reset."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:64
#: b8b8244ddea44fc493b9c7eec64baef4
msgid "Reset Handler for Multiple Nodes (No Shutdown Required)"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:66
#: d64eabd789e547498c1c935865c959e1
msgid ""
"If you have some other nodes that have to be started along with the "
"driver node (e.g. ``ros2_control`` nodes), then you can use the "
"``OnProcessExit`` event handler:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:109
#: a4cdf096afec44709fa54180f46ed971
msgid ""
"It is not possible to use the ``respawn`` property on the "
"``ros2_control`` node, as the spawner exits during launch time and not "
"when the simulation is reset. Instead we should declare a list of nodes "
"in a function (e.g. ``get_ros2_control_spawners``). The nodes of this "
"list are started along other nodes when executing the launch file. With "
"the ``reset_handler``, the function is also declared as action to start "
"when the ``robot_driver`` node exits, which corresponds to the moment "
"when the simulation is reset in the Webots interface. The "
"``robot_driver`` node still has the ``respawn`` property set to ``True``,"
" so that it gets restarted along with ``ros2_control`` nodes."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:116
#: 274d11e23c9a4777a8c8853f96a5d809
msgid "Reset Handler Requiring Node Shutdown"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:118
#: 10aa2e746d854f1e97d00f28d44b6ba3
msgid ""
"With the current ROS 2 launch API, there is no way to make the reset work"
" in launch files where nodes need to be shutdown before the restart (e.g."
" ``Nav2`` or ``RViz``). The reason is that currently, ROS 2 doesn't allow"
" to shutdown specific nodes from a launch file. There is a solution, but "
"it requires to manually restart nodes after pushing the reset button."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:122
#: 779de74e5d2a4adfa6b34e1cb366d365
msgid "Webots needs to be started in a specific launch file without other nodes."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:135
#: 60fc23b3ec6f4a74a2ed11a89b4864e5
msgid ""
"A second launch file must be started from another process. This launch "
"file contains all other nodes, including robot controllers/plugins, "
"Navigation2 nodes, RViz, state publishers, etc."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:185
#: 2c08864627c0401597bb370ec04b6ca6
msgid ""
"The second launch file contains a handler that triggers a shutdown event "
"when the driver node exits (which is the case when the simulation is "
"reset). This second launch file must be manually restarted from the "
"command line after pressing the reset button."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Reset-Handler.rst:191
#: 4c093a13b1994c13a9bbb961a6d1ddef
msgid ""
"In this tutorial, you learned how to implement a reset handler in a robot"
" simulation using Webots. The reset handler allows you to restart "
"specific nodes or perform additional actions when the reset button in "
"Webots is pressed. You explored different approaches based on the "
"complexity of your simulation and the requirements of your nodes."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:2
#: 5442eb99c1b94422bb869a87f889fcc2
msgid "The Ros2Supervisor Node"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:4
#: 14227cc0edd7456988e0cb3c216d96ba
msgid ""
"**Goal:** Extend the interface with a default Supervisor robot, named "
"``Ros2Supervisor``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:17
#: 5a7f60cd5ebf4326bc3885bc94530a88
msgid ""
"In this tutorial, you will learn how to enable the ``Ros2Supervisor`` "
"node which enhances the interface by creating additional services and "
"topics to interact with the simulation. You can, for example, record "
"animations or spawn Webots nodes directly from the ROS 2 interface while "
"the simulation is running. These instructions list in details the current"
" implemented features and how to use them."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:31
#: 59efbd1fb1fa43fca383897b52fbf22a
msgid "The ``Ros2Supervisor``"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:33
#: fd7a664af87c4c71ab78652e3f64a382
msgid "The ``Ros2Supervisor`` is made of two main parts:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:35
#: 3183f006a7a8431184105177cb761a4c
msgid ""
"A Webots Robot node added to the simulation world. Its ``supervisor`` "
"field is set to TRUE."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:36
#: ca0b8a3e126341369c7486650b993454
msgid ""
"A ROS 2 node that connects to the Webots Robot as an extern controller "
"(in a similar way to your own robot plugin)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:38
#: fa59c3dee6144c4fbd0454ce120055d1
msgid ""
"The ROS 2 node acts as a controller that calls Supervisor API functions "
"to control or interact with the simulation world. User interactions with "
"the ROS 2 node are mainly performed through services and topics."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:41
#: 935d5fc02a9849c19e11b5f9df2a6c7e
msgid ""
"These nodes can be automatically created at the Webots launch using the "
"``ros2_supervisor`` parameter in the ``WebotsLauncher``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:51
#: 26f3aea080e149bb97681fe39f70ebe9
msgid ""
"The ``webots._supervisor`` object must also be included in the "
"``LaunchDescription`` returned by the launch file."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:70
#: ec7dca0b60164fb6a703fcbb39f08821
msgid ""
"More information about launch files for ``webots_ros2`` projects can be "
"found in :doc:`./Setting-Up-Simulation-Webots-Basic`."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:73
#: 0aa83fed65834c44ae6e6f6d3291178d
msgid "Clock topic"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:75
#: 0174113ed6d54cf8b3a48d0788ca3222
msgid ""
"The ``Ros2Supervisor`` node is responsible to get the time of the Webots "
"simulation and publish it to the ``/clock`` topic. This means that it is "
"mandatory to spawn the ``Ros2Supervisor`` if some other nodes have their "
"``use_sim_time`` parameter set to ``true``. More information about the "
"``/clock`` topic can be found in the `ROS wiki "
"<http://wiki.ros.org/Clock>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:80
#: d8cef34848bc4e82ad0f7d0403b8461a
msgid "Import a Webots node"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:82
#: 6483e8a0b8044551b2211761d2d152bf
msgid ""
"The ``Ros2Supervisor`` node also allows you to spawn Webots nodes from "
"strings through a service."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:84
#: 5b2b12cb00a34031a5d56114649c904a
msgid ""
"The service is named ``/Ros2Supervisor/spawn_node_from_string`` and is of"
" type ``webots_ros2_msgs/srv/SpawnNodeFromString``. The "
"``SpawnNodeFromString`` type expects a ``data`` string as input and "
"returns a ``success`` boolean."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:87
#: 4e08874f07184e84a144b4dc6df052d3
msgid ""
"From the given string, the Supervisor node is getting the name of the "
"imported node and adding it to an intern list for potential later removal"
" (see :ref:`Remove a Webots imported node`)."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:89
#: 457e51a070ab433b95b173ede10b0c7f
msgid ""
"The node is imported using the ``importMFNodeFromString(nodeString)`` "
"`API function <https://cyberbotics.com/doc/reference/supervisor?tab-"
"language=python#wb_supervisor_field_import_mf_node_from_string>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:91
#: bc6f4769dbe6418d9925f1a91595f859
msgid "Here is an example to import a simple Robot named ``imported_robot``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:98
#: 19b7977bd747432f99dd3ee10d0495e2
msgid ""
"If you try to import some PROTOs in the node string, their respective "
"URLs must be declared in the .wbt world file as EXTERNPROTO or as "
"IMPORTABLE EXTERNPROTO."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:103
#: 63d2c637d78c4708ba34804f6a7e9547
msgid "Remove a Webots imported node"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:105
#: eedc37c49cb243e388aeb18b62f29740
msgid ""
"Once a node has been imported with the "
"``/Ros2Supervisor/spawn_node_from_string`` service, it can also be "
"removed."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:107
#: 781c165716e64db182b26196d02df592
msgid ""
"This can be achieved by sending the name of the node to the topic named "
"``/Ros2Supervisor/remove_node`` of type ``std_msgs/msg/String``."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:109
#: 132356751dc341faad1811d7f0881794
msgid ""
"If the node is indeed in the imported list, it is removed with the "
"``remove()`` `API method "
"<https://cyberbotics.com/doc/reference/supervisor?tab-"
"language=python#wb_supervisor_node_remove>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:111
#: 8ac942f4271e437a8480496de3c7a43e
msgid "Here is an example on how to remove the ``imported_robot`` Robot:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:118
#: e0bcd0eacafc4fe2a5898f4ca4b99747
msgid "Record animations"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:120
#: 6bbd0c25f15d4dbfb0be85da6d73f9ee
msgid ""
"The ``Ros2Supervisor`` node also creates two additional services to "
"record HTML5 animations."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:122
#: d04edd6a68c948899b537369951e42a5
msgid ""
"The ``/Ros2Supervisor/animation_start_recording`` service is of type "
"``webots_ros2_msgs/srv/SetString`` and allows to start the animation. The"
" ``SetString`` type expects a ``value`` string as input and returns a "
"``success`` boolean. The input ``value`` represents the absolute path to "
"the directory where the animations files should be saved."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:126
#: 723f4f8c24944a92b0863d788ad87a2f
msgid "Here is an example on how to start an animation:"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:133
#: 08302d0a3a6b4f2c9e65d0bd7a2b0435
msgid ""
"The ``/Ros2Supervisor/animation_stop_recording`` service is of type "
"``webots_ros2_msgs/srv/GetBool`` and allows to stop the animation."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Supervisor.rst:143
#: a91aa285a8a24091a547ce46bcf9c3d0
msgid ""
"In this tutorial, you learned how to enable the ``Ros2Supervisor`` and "
"how to extend the interface with the Webots simulation. The node creates "
"multiple services and topics to interact with and modify the simulation."
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Webots.rst:2
#: 84751bd4b1e843af8f8d6a124d729ce5
msgid "Webots"
msgstr ""

#: ../../source/Tutorials/Advanced/Simulators/Webots/Simulation-Webots.rst:4
#: 99d5cd7f87614921a7f3998fca45f802
msgid ""
"This set of tutorials will teach you how to configure the Webots "
"simulator with ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:7
#: 6fc8fee3e25b4f268e0f3b07bed6cebf
msgid "Enabling topic statistics (C++)"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:9
#: d053f22cb0774366badceb00eff3856f
msgid ""
"**Goal:** Enable ROS 2 Topic Statistics and view the output statistics "
"data."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:21
#: 344c2f3bd43c4416b5a46e0e14e17ea9
msgid ""
"This is a short tutorial on how to enable topic statistics in ROS 2 and "
"view the published statistics output using command line tools "
"(:doc:`ros2topic <../../Beginner-CLI-Tools/Understanding-ROS2-Topics"
"/Understanding-ROS2-Topics>`)."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:23
#: c46c10eb1d1c49ae8fe4f7c6444f187b
msgid ""
"ROS 2 provides the integrated measurement of statistics for messages "
"received by any subscription, called Topic Statistics. With Topic "
"Statistics enabled for your subscription, you can characterize the "
"performance of your system or use the data to help diagnose any present "
"issues."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:28
#: bed710187546457e9eed6c9ce794aba6
msgid ""
"For more details please see the :doc:`Topic Statistics Concepts Page "
"<../../../Concepts/Intermediate/About-Topic-Statistics>`."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:33
#: 42f0a152af9f46a78f8a2f074cd53d68
msgid "An installation from either binaries or source."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:35
#: 80333ea043e74ba9803185b01e753c7b
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>`, :doc:`create a "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`, and create a :doc:`C++ <../../Beginner-Client-"
"Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber>` publisher and "
"subscriber."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:38
#: 5caca4164df14fc888ef46c19902eeb0
msgid ""
"This tutorial assumes that you still have your ``cpp_pubsub`` package "
"from the :doc:`C++ <../../Beginner-Client-Libraries/Writing-A-Simple-Cpp-"
"Publisher-And-Subscriber>` tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:44
#: fa67e690151343d2b97b223212f8aa65
msgid "1 Write the subscriber node with statistics enabled"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:46
#: 83fd09939d9148dcbdda25b7996ddd95
msgid ""
"Navigate into the ``ros2_ws/src/cpp_pubsub/src`` folder, created in the "
":doc:`previous tutorial <../../Beginner-Client-Libraries/Writing-A"
"-Simple-Cpp-Publisher-And-Subscriber>`, and download the example talker "
"code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:65
#: 5f9c0d94446c442c8a45a29a74ba8bbf
msgid ""
"Right click this link and select Save As "
"``publisher_member_function.cpp``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:67
#: 877c646148e74018a6422e0cd0ff8503
msgid "https://raw.githubusercontent.com/ros2/examples/{REPOS_FILE_BRANCH}/rclcpp/topics/minimal_subscriber/member_function_with_topic_statistics.cpp"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:69
#: b2c32a92df884654ae3fe98f55e3c979
msgid ""
"Now there will be a new file named "
"``member_function_with_topic_statistics.cpp``. Open the file using your "
"preferred text editor."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:123
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:142
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:132
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:169
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:155
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:173
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:211
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:181
#: 2968e9320e314088aa4aae21c05a2978 58ed0d845e9a47049b75c8c8902fe3f6
#: 8d354293932742efa5d4730ea39bfc45 c8c337a18e154c67aec7b09d547996f7
#: cd8f74fcd3bc4f16a4a8dbc749653e9e d12b8d876c5c488aad9d36adbc47f6fa
#: f54c0acecfe642c3907eb761f14b7292 fd7ca914ea6f4854a227245bc374d5ec
msgid "1.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:125
#: 6303c1f28637491fa6fd3e54aaea623b
msgid ""
"As in the :doc:`C++ <../../Beginner-Client-Libraries/Writing-A-Simple-"
"Cpp-Publisher-And-Subscriber>` tutorial, we have a subscriber node which "
"receives string messages from the ``topic`` topic from the "
"``topic_callback`` function. However, we've now added options to "
"configure the subscription to enable topic statistics with the "
"``rclcpp::SubscriptionOptions()`` options struct."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:136
#: dfc7e541838242bbacbe646e1a3bd3f9
msgid ""
"Optionally, fields such as the statistics collection/publish period and "
"the topic used to publish statistics can be configured as well."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:147
#: 1855b3d2d3244c4da510fd649556f6c4
msgid "The configurable fields are described in the following table:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:150
#: 8ac5b9ac92314b539dd889ce3e34192e
msgid "Subscription Config Field"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:150
#: 44c5b8e49ffc43c3856fe09ddc279c70
msgid "Purpose"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:152
#: 2c4c3d280708482fb3b2508bba55afb0
msgid "topic_stats_options.state"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:152
#: 801f88e13d5f47f7a5e8f77a4c5fb35d
msgid ""
"Enable or disable topic statistics (default "
"``rclcpp::TopicStatisticsState::Disable``)"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:153
#: 8ed1a21cfafc4259b30251540b45af66
msgid "topic_stats_options.publish_period"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:153
#: 8b2d5deaecde42ca91cbf915be50ca19
msgid ""
"The period in which to collect statistics data and publish a statistics "
"message (default ``1s``)"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:154
#: 403f5baaa4d649e3bb855359f2137a47
msgid "topic_stats_options.publish_topic"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:154
#: e593ca4b11754b5e93939933621263ce
msgid "The topic to use when publishing statistics data (default ``/statistics``)"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:158
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:160
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:220
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:247
#: 49650986f7bf45549a6ce0fde672ac1e 7e23301c78a1410a996fd3ec8582f77f
#: c9a1f4d3e6b449b3afe4b640c9a1cc52 c9cd1716e7784b81a7c094ba35bd3ec3
msgid "1.2 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:162
#: ce33c2c693094682aa9d0c8bec0b76e3
msgid ""
"Add the executable and name it ``listener_with_topic_statistics`` so you "
"can run your node using ``ros2 run``:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:175
#: 6af6b98d1d0949b5b7baff75e3a22d19
msgid ""
"Make sure to save the file, and then your pub/sub system, with topic "
"statistics enabled, should be ready for use."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:179
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:503
#: 22554682acad4b16a5086167f2701715 cc35b41cd86d4ebda6aa5b769a012ce4
msgid "2 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:181
#: 1ec44dee9fa144a3befea41d5db23a5e
msgid ""
"To build, see the :ref:`Build and run <cpppubsub-build-and-run>` section "
"in the pub/sub tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:183
#: fb31e759a1394544b616e1112aa34626
msgid "Run the subscriber with statistics enabled node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:189
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:501
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:481
#: 1c930909e9ca4ca99e5438a6df9091b7 310f2f2e840b40fab3f4b3fbf37d69a8
#: dc3bd3bc067c4c8aa10f22cb6ca935cf
msgid "Now run the talker node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:195
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:507
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:487
#: 08ee85cefb77476f91210e795ac48d43 6151cc3bdf214af398312e7143b78448
#: 626723f746a0482bbdf3c23fb1dfe536
msgid ""
"The terminal should start publishing info messages every 0.5 seconds, "
"like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:205
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:523
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:504
#: 1b4f9341ed374c22904012a63cb8f7f5 aa86ff3c6bdf42e9b451ae4276a7da33
#: f8651680d9874f6e932dc49f94207aae
msgid ""
"The listener will start printing messages to the console, starting at "
"whatever message count the publisher is on at that time, like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:215
#: 613db4f964254dc4990bb6f3e7e9e228
msgid ""
"Now that the subscriber node is receiving messages, it will periodically "
"publish statistics messages. We will observe these messages in the next "
"section."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:219
#: 01f071c6e1f445b6b6b9ee5b0fc6be71
msgid "3 Observe published statistic data"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:221
#: 407152fad6bf4b388a1ab0a3d9df0ba9
msgid ""
"While the nodes are running, open a new terminal window. Execute the "
"following command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:228
#: aedf7fba77eb4680aef170fd9c4589a1
msgid "This will list all currently active topics. You should see the following:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:238
#: 2ed90d656c2849ed88b92281aab4bae8
msgid ""
"If you optionally changed the ``topic_stats_options.publish_topic`` field"
" earlier in the tutorial, then you will see that name instead of "
"``/statistics``."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:241
#: 39cc1cd7936046bdb7fcb03510b1ae7e
msgid ""
"The subscriber node you created is publishing statistics, for the topic "
"``topic``, to the output topic ``/statistics``."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:244
#: cc245bb405d34f7aac605a82c7cc114b
msgid ""
"We can visualize this using :doc:`RQt <../../../Concepts/Intermediate"
"/About-RQt>`"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:248
#: c40a93384c2e4613974d57869189e11d
msgid ""
"Now we can view the statistics data published to this topic with the "
"following command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:254
#: 448e6ec14c5646078886219790a40938
msgid ""
"The terminal should start publishing statistics messages every 10 "
"seconds, because the ``topic_stats_options.publish_period`` subscription "
"configuration was optionally changed earlier in the tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:303
#: 9b07329c708849a08ccfe361beb7c29e
msgid ""
"From the `message definition "
"<https://github.com/ros2/rcl_interfaces/tree/{REPOS_FILE_BRANCH}/statistics_msgs>`__"
" the ``data_types`` are as follows"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:307
#: 122b913b028f4009982296fd1323107b
msgid "data_type value"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:307
#: 3bc2ad38765f4dd9ad5c2cf2e78329c3
msgid "statistics"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:309
#: 71a62ac4ed8d40d8929aecdf6eb10c19
msgid "1"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:309
#: 16efb12a559849e3b0a83797106305e5
msgid "average"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:310
#: 99c9a685ce8a47b4a960aded1dd49d19
msgid "2"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:310
#: 9f95585d3b224a8fa9801bec7e9da37e
msgid "minimum"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:311
#: 0e46ebd377624d97b60dd4108e076005
msgid "3"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:311
#: 3f1d512aa24a4093bcff1a301460ca92
msgid "maximum"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:312
#: b10563fb3b3f4bfd9142f49e4e1ddfa2
msgid "4"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:312
#: cc1641758b014ba0a73b63a6170612db
msgid "standard deviation"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:313
#: c2f956105de94dd5b0daa0bd9af20717
msgid "5"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:313
#: 89cc7782eae04e4fb4b34934fe23e9d8
msgid "sample count"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:316
#: 03dcaffa5eb548dea17f08da9f4bda94
msgid ""
"Here we see the two currently possible calculated statistics for the "
"``std_msgs::msg::String`` message published to ``/topic`` by the "
"``minimal_publisher``. Because the ``std_msgs::msg::String`` does not "
"have a message header, the ``message_age`` calculation cannot be "
"performed, so NaNs are returned. However, the ``message_period`` can be "
"calculated and we see the statistics populated in the message above."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:326
#: 5d4edd4ab7224748a88e917de12ee836
msgid ""
"You created a subscriber node with topic statistics enabled, which "
"published statistics data from the :doc:`C++ <../../Beginner-Client-"
"Libraries/Writing-A-Simple-Cpp-Service-And-Client>`'s publisher node. You"
" were able to compile and run this node. While running, you were able to "
"observe the statistics data."
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:331
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:273
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:281
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:365
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:200
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:275
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:196
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:500
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:548
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:422
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:529
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:350
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:305
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:212
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:349
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:390
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:357
#: 1c04a7c33a8046378166d3f327e8a0f2 2018e4adab5c4662bd09f983810249da
#: 24bbd78bd3214fde968a7fc2c967bd08 463400e7f39e4159a6c5ff5c038cb924
#: 4755834cb4854a4994e564ff32c8b4b5 4d7493c608d14e41bd4adc674e490854
#: 65fbcf6fd7ec4461bf9ad9347c984cfa 75274d1fee5b46b29b78f0b8489fb643
#: 86bb7e7ff0a94cc18b775eb2425f4677 a42176fefd334d61a07a4851783e23e9
#: abf7d4506bb74f7399fb33fa568181d8 baab8b03253f428486e4050a94004464
#: c2193f60737545628960dcb6acf0d048 d5303472ca824a7fbc7926dad48af3a4
#: d79c428d41bd4bd0b71f9008125c1c5a dd48048b240b479b8f40d824ea879621
#: f3c3fc7308e74f28881c37f6c21574b3
msgid "Related content"
msgstr ""

#: ../../source/Tutorials/Advanced/Topic-Statistics-Tutorial/Topic-Statistics-Tutorial.rst:333
#: 6663de3d8ac94367bbace8abab860ab1
msgid ""
"To observe how the ``message_age`` period is calculated please see the "
"`ROS 2 Topic Statistics demo "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/topic_statistics_demo>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools.rst:2
#: 5987840f9d794d219314878b4fb16dcd
msgid "Beginner: CLI tools"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:8
#: bb1b16b17d34459a88928a9da31f1c07
msgid "Configuring environment"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:10
#: 46f900c30ad343a5a9304d0c96dcd77c
msgid ""
"**Goal:** This tutorial will show you how to prepare your ROS 2 "
"environment."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:12
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:17
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:10
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:13
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:12
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:12
#: 008f782339904a679d3c378dbcf615d9 1d43ed3a7e364dfea365c47f1a0d2851
#: 289cab1ae6e143d0ba7ef0aafc3db00b 38529d9c7b6a4805a77da5e0ea306311
#: 41330f174be143a2a781e8276d9ed668 5e7258375a4d4f7bb9dbdaed66c81c38
#: 63a8ece323ac4e2b9fe696437da63752 67385cd1ab6c44658d08a419fb01453f
#: 68b1ae0b83b440aaa4ab823316d3610e 69218566108242faa8de13827aac5aa4
#: 8e5c6723c183495e884292540037a6ac 8ef0054a60d14e7084d0e4207026f566
#: 99a4aaadaf4447818b69ae2dddfdc7ab 9a719d7b1efa459382bad2803ecf9791
#: ab8649a8be214372a4c78a04f778d903 ac35c53f54f5405b8d0f70852e610cbb
#: aca7be5ff5dc476fad531dab32ff5352 c819d1b4730b4515bb8243e1e3774bf4
#: d0b9d3dae0434a429e53c4a10a7cef14 d9c3f685f90645aeb1e7b25eccf6841d
#: df81caf948f04ae8bfd4962637d5af45 fe93ae6ac4cc42f39156889c61894827
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:23
#: 5df113f6a1954bfea2ff7a6662b9a5f8
msgid ""
"ROS 2 relies on the notion of combining workspaces using the shell "
"environment. \"Workspace\" is a ROS term for the location on your system "
"where you're developing with ROS 2. The core ROS 2 workspace is called "
"the underlay. Subsequent local workspaces are called overlays. When "
"developing with ROS 2, you will typically have several workspaces active "
"concurrently."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:29
#: cc01e029f2954b968036f04bb9861eb9
msgid ""
"Combining workspaces makes developing against different versions of ROS "
"2, or against different sets of packages, easier. It also allows the "
"installation of several ROS 2 distributions (or “distros”, e.g. Dashing "
"and Eloquent) on the same computer and switching between them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:32
#: 95c2989b081748578c1c300f22146044
msgid ""
"This is accomplished by sourcing setup files every time you open a new "
"shell, or by adding the source command to your shell startup script once."
" Without sourcing the setup files, you won't be able to access ROS 2 "
"commands, or find or use ROS 2 packages. In other words, you won't be "
"able to use ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:39
#: 1d7e3ce732ec46f39af73d3e871c9bad
msgid ""
"Before starting these tutorials, install ROS 2 by following the "
"instructions on the ROS 2 :doc:`../../Installation` page."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:41
#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:35
#: 09644d9ab6e9434592790f9917304827 6618b1fec0f84b5189237f6e73004092
msgid ""
"The commands used in this tutorial assume you followed the binary "
"packages installation guide for your operating system (Debian packages "
"for Linux). You can still follow along if you built from source, but the "
"path to your setup files will likely be different. You also won't be able"
" to use the ``sudo apt install ros-<distro>-<package>`` command (used "
"frequently in the beginner level tutorials) if you install from source."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:45
#: 4d044010a8c94c8b8f2a12e539615b7b
msgid ""
"If you are using Linux or macOS, but are not already familiar with the "
"shell, `this tutorial <http://www.ee.surrey.ac.uk/Teaching/Unix/>`__ will"
" help."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:51
#: ae7f38e803974519a4af765951a27b32
msgid "1 Source the setup files"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:53
#: 64ab1eeb5dfd4d3b891eea8eb19106e0
msgid ""
"You will need to run this command on every new shell you open to have "
"access to the ROS 2 commands, like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:78
#: 0ce81ff460b74480b171e9754d04f10e
msgid ""
"The exact command depends on where you installed ROS 2. If you're having "
"problems, ensure the file path leads to your installation."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:82
#: 6ba451f04ed64c0c8939220a82526963
msgid "2 Add sourcing to your shell startup script"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:84
#: f3c5b5088af245a284a0bd8073f606e4
msgid ""
"If you don't want to have to source the setup file every time you open a "
"new shell (skipping task 1), then you can add the command to your shell "
"startup script:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:94
#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:102
#: 3527bdd87101428388660b723fdc4f44 520cc83951114a0e8bc019a7c92a253d
msgid ""
"To undo this, locate your system's shell startup script and remove the "
"appended source command."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:106
#: 8425183008ad4cdabfabbdd319a6310a
msgid ""
"Only for PowerShell users, create a folder in 'My Documents' called "
"'WindowsPowerShell'. Within 'WindowsPowerShell', create file "
"'Microsoft.PowerShell_profile.ps1'. Inside the file, paste:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:114
#: 70d1c3c4b68d49d9b535b1d499e742e1
msgid ""
"PowerShell will request permission to run this script everytime a new "
"shell is opened. To avoid that issue you can run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:121
#: 13394c8ae06845fb8bb5b3c465997628
msgid "To undo this, remove the new 'Microsoft.PowerShell_profile.ps1' file."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:124
#: 42172c7e73654c069454422d31c27967
msgid "3 Check environment variables"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:126
#: 9f55f0290b194d4d9866716bb6f496ee
msgid ""
"Sourcing ROS 2 setup files will set several environment variables "
"necessary for operating ROS 2. If you ever have problems finding or using"
" your ROS 2 packages, make sure that your environment is properly set up "
"using the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:149
#: 45b6b02822c64ce091e053f207a51fe7
msgid "Check that variables like ``ROS_DISTRO`` and ``ROS_VERSION`` are set."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:157
#: 30bb5b1bd5c846a1a9edb3a75cbfec25
msgid ""
"If the environment variables are not set correctly, return to the ROS 2 "
"package installation section of the installation guide you followed. If "
"you need more specific help (because environment setup files can come "
"from different places), you can `get answers <https://answers.ros.org>`__"
" from the community."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:161
#: 2361b6890d7a476ea634e8323afbf6a5
msgid "3.1 The ``ROS_DOMAIN_ID`` variable"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:163
#: dff9e572faf446c39a5a6fd65cad5e6b
msgid ""
"See the `domain ID <../../Concepts/Intermediate/About-Domain-ID>` article"
" for details on ROS domain IDs."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:165
#: d6ea71904e8549018f7df71a8d2ab00c
msgid ""
"Once you have determined a unique integer for your group of ROS 2 nodes, "
"you can set the environment variable with the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:206
#: 1467040931cd4a82ac9d52fdba3d939c
msgid "3.2 The ``ROS_AUTOMATIC_DISCOVERY_RANGE`` variable"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:208
#: 6e1b6ddf5b894523b2b55285da1f980a
msgid ""
"By default, ROS 2 communication is not limited to localhost. "
"``ROS_AUTOMATIC_DISCOVERY_RANGE`` environment variable allows you to "
"limit ROS 2 discovery range. Using ``ROS_AUTOMATIC_DISCOVERY_RANGE`` is "
"helpful in certain settings, such as classrooms, where multiple robots "
"may publish to the same topic causing strange behaviors. See "
":ref:`Improved Dynamic Discovery <ImprovedDynamicDiscovery>` for more "
"details."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:216
#: 3cea30a0df2c4cd0a640f5a5a0edc239
msgid ""
"The ROS 2 development environment needs to be correctly configured before"
" use. This can be done in two ways: either sourcing the setup files in "
"every new shell you open, or adding the source command to your startup "
"script."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:219
#: 627fcc47ef6f463c800b748d88c02458
msgid ""
"If you ever face any problems locating or using packages with ROS 2, the "
"first thing you should do is check your environment variables and ensure "
"they are set to the version and distro you intended."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.rst:224
#: b3e109f9839b49bead3f01948ae39194
msgid ""
"Now that you have a working ROS 2 installation and you know how to source"
" its setup files, you can start learning the ins and outs of ROS 2 with "
"the :doc:`turtlesim tool <./Introducing-Turtlesim/Introducing-"
"Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:8
#: 71fdb45a6ed043cea1fa8fba18bf79d2
msgid "Using ``turtlesim``, ``ros2``, and ``rqt``"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:10
#: b258eec68d5d4faea6569703fb735c9a
msgid ""
"**Goal:** Install and use the turtlesim package and rqt tools to prepare "
"for upcoming tutorials."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:23
#: 5dbd5fd92a514a6f94dcfc54049c6301
msgid ""
"Turtlesim is a lightweight simulator for learning ROS 2. It illustrates "
"what ROS 2 does at the most basic level to give you an idea of what you "
"will do with a real robot or a robot simulation later on."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:26
#: ab793187586c40e9a6f8b48799638252
msgid ""
"The ros2 tool is how the user manages, introspects, and interacts with a "
"ROS system. It supports multiple commands that target different aspects "
"of the system and its operation. One might use it to start a node, set a "
"parameter, listen to a topic, and many more. The ros2 tool is part of the"
" core ROS 2 installation."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:31
#: 2edb92e55bbb496daf66b204f4a073ed
msgid ""
"rqt is a graphical user interface (GUI) tool for ROS 2. Everything done "
"in rqt can be done on the command line, but rqt provides a more user-"
"friendly way to manipulate ROS 2 elements."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:34
#: 79df411b5aed434db129cd4f6d74878d
msgid ""
"This tutorial touches upon core ROS 2 concepts, like nodes, topics, and "
"services. All of these concepts will be elaborated on in later tutorials;"
" for now, you will simply set up the tools and get a feel for them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:40
#: 3d35c4591f1740b78d4fb359f6398ac4
msgid ""
"The previous tutorial, :doc:`../Configuring-ROS2-Environment`, will show "
"you how to set up your environment."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:46
#: 7bda745404a948ba8e389dc498da4293
msgid "1 Install turtlesim"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:48
#: acb757fd628345b2846f32242f858410
msgid ""
"As always, start by sourcing your setup files in a new terminal, as "
"described in the :doc:`previous tutorial <../Configuring-"
"ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:50
#: 13e1ade72c1f45e7810e64c74298d24a
msgid "Install the turtlesim package for your ROS 2 distro:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:64
#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:68
#: bd38a66f29724aabb770665ca1bec340 c639786bc14e4257a317a3e1938ad7ce
msgid ""
"As long as the archive you installed ROS 2 from contains the "
"``ros_tutorials`` repository, you should already have turtlesim "
"installed."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:70
#: 192a9464a2ef4e5ea688dcd8d1551beb
msgid "Check that the package is installed:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:76
#: 0196ec28a3ec438fbb5e02aa1c240a3e
msgid "The above command should return a list of turtlesim's executables:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:86
#: 4e5273ff16f9493e82197fbfdd439e35
msgid "2 Start turtlesim"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:88
#: 8948110657674e688ac7e8c22f2a1835
msgid "To start turtlesim, enter the following command in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:94
#: d7784765ae9348faad88753ea8ec192f
msgid "The simulator window should appear, with a random turtle in the center."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:98
#: 224d1eb09d924a31b34ce5fb5ab45fa2
msgid "In the terminal, under the command, you will see messages from the node:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:105
#: feacd8e5a5c7422e8baabac7a2123412
msgid ""
"There you can see the default turtle's name and the coordinates where it "
"spawns."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:108
#: c85f0470a46646858dc50e6dd7607e1c
msgid "3 Use turtlesim"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:110
#: 48980e731a8c487c853b060ef1f19e2c
msgid "Open a new terminal and source ROS 2 again."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:112
#: 82d7e10a3dc94b65a92da5f32eb2a1cf
msgid "Now you will run a new node to control the turtle in the first node:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:118
#: 8345a63ba7254c6c8dc08d916113717a
msgid ""
"At this point you should have three windows open: a terminal running "
"``turtlesim_node``, a terminal running ``turtle_teleop_key`` and the "
"turtlesim window. Arrange these windows so that you can see the turtlesim"
" window, but also have the terminal running ``turtle_teleop_key`` active "
"so that you can control the turtle in turtlesim."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:121
#: 0d648f963f4548359e30252fcd430b19
msgid ""
"Use the arrow keys on your keyboard to control the turtle. It will move "
"around the screen, using its attached \"pen\" to draw the path it "
"followed so far."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:126
#: 0740c1df629b4dcfbad8449c4ad91c5a
msgid ""
"Pressing an arrow key will only cause the turtle to move a short distance"
" and then stop. This is because, realistically, you wouldn't want a robot"
" to continue carrying on an instruction if, for example, the operator "
"lost the connection to the robot."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:129
#: b1b6cc57b0534603a35f86a03682dd3a
msgid ""
"You can see the nodes, and their associated topics, services, and "
"actions, using the ``list`` subcommands of the respective commands:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:138
#: dd4000a038fa435ab3f4ca8cdf8fbb98
msgid ""
"You will learn more about these concepts in the coming tutorials. Since "
"the goal of this tutorial is only to get a general overview of turtlesim,"
" you will use rqt to call some of the turtlesim services and interact "
"with ``turtlesim_node``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:142
#: 16db458d39fd4f9ea4705dd8b8780f72
msgid "4 Install rqt"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:144
#: d87834db00d84b7fbe5fc6570962f281
msgid "Open a new terminal to install ``rqt`` and its plugins:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:148
#: 7cf71c332ecb4a448aef2c10c9d551d4
msgid "Ubuntu"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:156
#: c9c5ed1edd3a48d0a4916834d39a148a
msgid "RHEL"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:164
#: 219dc802389e41bf8b92f1252ca3fc26
msgid ""
"The standard archive for installing ROS 2 on macOS contains ``rqt`` and "
"its plugins, so you should already have ``rqt`` installed."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:168
#: 6e7b1d6adf214e7b9094bed36d995812
msgid ""
"The standard archive for installing ROS 2 on Windows contains ``rqt`` and"
" its plugins, so you should already have ``rqt`` installed."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:170
#: 1919527fd9f440b9a66579e6533e4df9
msgid "To run rqt:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:177
#: d241fe75662e41d8954abcef63088de5
msgid "5 Use rqt"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:179
#: 09ff36d8ea694bb8b333b2495bb388b2
msgid ""
"When running rqt for the first time, the window will be blank. No "
"worries; just select **Plugins** > **Services** > **Service Caller** from"
" the menu bar at the top."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:184
#: eddce2e737f94510bbd7d8bf8666423b
msgid ""
"It may take some time for rqt to locate all the plugins. If you click on "
"**Plugins** but don't see **Services** or any other options, you should "
"close rqt and enter the command ``rqt --force-discover`` in your "
"terminal."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:189
#: c7999f70e1ad410aad6fdc1ac19bf356
msgid ""
"Use the refresh button to the left of the **Service** dropdown list to "
"ensure all the services of your turtlesim node are available."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:191
#: 89519dc9cb3747439b6ff80e0c6bf4f4
msgid ""
"Click on the **Service** dropdown list to see turtlesim's services, and "
"select the ``/spawn`` service."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:194
#: 9b69d35924894316b4f5efc935a4c5f0
msgid "5.1 Try the spawn service"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:196
#: ff55e2539c4d486db9afe65bb2da9db9
msgid ""
"Let's use rqt to call the ``/spawn`` service. You can guess from its name"
" that ``/spawn`` will create another turtle in the turtlesim window."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:199
#: 93d7c2c3e44a47fab20c9a749cb31664
msgid ""
"Give the new turtle a unique name, like ``turtle2``, by double-clicking "
"between the empty single quotes in the **Expression** column. You can see"
" that this expression corresponds to the value of **name** and is of type"
" **string**."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:202
#: d4d8c6da8a534c279bde95c4530e5aa9
msgid ""
"Next enter some valid coordinates at which to spawn the new turtle, like "
"``x = 1.0`` and ``y = 1.0``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:208
#: 99f66f16c4f3477ab29cadc8dc54d663
msgid ""
"If you try to spawn a new turtle with the same name as an existing "
"turtle, like the default ``turtle1``, you will get an error message in "
"the terminal running ``turtlesim_node``:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:214
#: 4ae9e333ba024974ab83bc7f67aef6d1
msgid ""
"To spawn ``turtle2``, you then need to call the service by clicking the "
"**Call** button on the upper right side of the rqt window."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:216
#: b4748a35ab6f4d79bd86cadde6f6b445
msgid ""
"If the service call was successful, you should see a new turtle (again "
"with a random design) spawn at the coordinates you input for **x** and "
"**y**."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:218
#: d752265792ee4deeab3b8df520fefc1d
msgid ""
"If you refresh the service list in rqt, you will also see that now there "
"are services related to the new turtle, ``/turtle2/...``, in addition to "
"``/turtle1/...``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:221
#: 05af99d78e7446489f1b85017b7e3e28
msgid "5.2 Try the set_pen service"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:223
#: bc8d5e9045d34878bf8058b4d194700c
msgid "Now let's give ``turtle1`` a unique pen using the ``/set_pen`` service:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:227
#: 5b190777c3d045b69b438a4e9bccc990
msgid ""
"The values for **r**, **g** and **b**, which are between 0 and 255, set "
"the color of the pen ``turtle1`` draws with, and **width** sets the "
"thickness of the line."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:229
#: c6976bd9add34d92b77517621d98ccb7
msgid ""
"To have ``turtle1`` draw with a distinct red line, change the value of "
"**r** to 255, and the value of **width** to 5. Don't forget to call the "
"service after updating the values."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:232
#: c4a7c0f917884494a6ea89eeda59906d
msgid ""
"If you return to the terminal where ``turtle_teleop_key`` is running and "
"press the arrow keys, you will see ``turtle1``'s pen has changed."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:236
#: 95808eb343be4db1b4ec1d1ad3548cfa
msgid ""
"You've probably also noticed that there's no way to move ``turtle2``. "
"That's because there is no teleop node for ``turtle2``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:240
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:385
#: 04ddd524fc5541fb9b8a994c7efac475 28e7efdb0d4c4448977e2259993f874a
msgid "6 Remapping"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:242
#: 845dc894ebe3433888d62978f4bd3d51
msgid ""
"You need a second teleop node in order to control ``turtle2``. However, "
"if you try to run the same command as before, you will notice that this "
"one also controls ``turtle1``. The way to change this behavior is by "
"remapping the ``cmd_vel`` topic."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:246
#: d942a80a97de45789d08e049c756c1cd
msgid "In a new terminal, source ROS 2, and run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:253
#: 2a086e65e28b4cd09e8e74cdd281ff81
msgid ""
"Now, you can move ``turtle2`` when this terminal is active, and "
"``turtle1`` when the other terminal running ``turtle_teleop_key`` is "
"active."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:258
#: 9c1c5cdb21dc44de902302cbf3502d63
msgid "7 Close turtlesim"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:260
#: f0394012d7e24ca4a3d91d9889cd8295
msgid ""
"To stop the simulation, you can enter ``Ctrl + C`` in the "
"``turtlesim_node`` terminal, and ``q`` in the ``turtle_teleop_key`` "
"terminals."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:265
#: c52d100282384a659578d0313adcc391
msgid ""
"Using turtlesim and rqt is a great way to learn the core concepts of ROS "
"2."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:270
#: 99804224e8ae4ac88b1a74021e852929
msgid ""
"Now that you have turtlesim and rqt up and running, and an idea of how "
"they work, let's dive into the first core ROS 2 concept with the next "
"tutorial, :doc:`../Understanding-ROS2-Nodes/Understanding-ROS2-Nodes`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:275
#: cd28f0c8ffab4b07af34d1b804c19be4
msgid ""
"The turtlesim package can be found in the `ros_tutorials "
"<https://github.com/ros/ros_tutorials/tree/{REPOS_FILE_BRANCH}/turtlesim>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim.rst:277
#: c85d33634bc8437799b1aa1be78bb3ef
msgid ""
"`This community contributed video <https://youtu.be/xwT7XWflMdc>`_ "
"demonstrates many of the items covered in this tutorial."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:8
#: aeabbaa1e16b48ccb5ed24d8024f17fc
msgid "Launching nodes"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:10
#: 8965808f47dd4913ab40b799a15440b4
msgid "**Goal:** Use a command line tool to launch multiple nodes at once."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:12
#: b1c3a8ed6d6844ac929ff356edc64dcc
msgid "**Tutorial Level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:23
#: 7c8411d1130549afbd01d6087f2df05a
msgid ""
"In most of the introductory tutorials, you have been opening new "
"terminals for every new node you run. As you create more complex systems "
"with more and more nodes running simultaneously, opening terminals and "
"reentering configuration details becomes tedious."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:26
#: 27646e45069e4c0d852aaf5f190969a1
msgid ""
"Launch files allow you to start up and configure a number of executables "
"containing ROS 2 nodes simultaneously."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:28
#: 31d3e262bc194782939dfb1fed9ce68b
msgid ""
"Running a single launch file with the ``ros2 launch`` command will start "
"up your entire system - all nodes and their configurations - at once."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:33
#: 235cc99675554e29bb0c4f8c58434324
msgid ""
"Before starting these tutorials, install ROS 2 by following the "
"instructions on the ROS 2 :doc:`../../../Installation/` page."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:39
#: 426256502b004b51a2667cae82f86e1e
msgid ""
"If you are using Linux and are not already familiar with the shell, `this"
" tutorial <http://www.ee.surrey.ac.uk/Teaching/Unix/>`__ will help."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:45
#: 193300963e93495494d9f00a088610f4
msgid "Running a Launch File"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:53
#: 24b4512a891c43149540a8186ad6bcd8
msgid "This command will run the following launch file:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:72
#: 6b83124eaabd4422b8f8b01f5f5e90c5
msgid ""
"The launch file above is written in Python, but you can also use XML and "
"YAML to create launch files. You can see a comparison of these different "
"ROS 2 launch formats in :doc:`../../../How-To-Guides/Launch-file-"
"different-formats`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:75
#: e5238806bb134bd98d36e9905b7af5b1
msgid "This will run two turtlesim nodes:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:79
#: 302c51e532d54aeb908148b121ab6ad5
msgid ""
"For now, don't worry about the contents of this launch file. You can find"
" more information on ROS 2 launch in the :doc:`ROS 2 launch tutorials "
"<../../Intermediate/Launch/Launch-Main>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:83
#: bc6ac72a9d3942a78e46f6d3f2ae0bb6
msgid "(Optional) Control the Turtlesim Nodes"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:85
#: 5c22375d87e648f7b7750517935e633e
msgid ""
"Now that these nodes are running, you can control them like any other ROS"
" 2 nodes. For example, you can make the turtles drive in opposite "
"directions by opening up two additional terminals and running the "
"following commands:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:88
#: a957b909340b4b2b9fe680690925f09f
msgid "In the second terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:94
#: d0d1b9b40c2a4064b7a2573f4aee23e6
msgid "In the third terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:100
#: 31b7fe8be8484b748f9824c3e0a296fc
msgid "After running these commands, you should see something like the following:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:107
#: 59b840dd9a8b4b7485fcbe6a69b69e3e
msgid ""
"The significance of what you've done so far is that you've run two "
"turtlesim nodes with one command. Once you learn to write your own launch"
" files, you'll be able to run multiple nodes - and set up their "
"configuration - in a similar way, with the ``ros2 launch`` command."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:110
#: 393b3aa881534430ba935b68b356a31d
msgid ""
"For more tutorials on ROS 2 launch files, see the :doc:`main launch file "
"tutorial page<../../Intermediate/Launch/Launch-Main>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Launching-Multiple-Nodes/Launching-Multiple-Nodes.rst:115
#: d2566abb75254db4893bae85ff061774
msgid ""
"In the next tutorial, :doc:`../Recording-And-Playing-Back-Data/Recording-"
"And-Playing-Back-Data`, you'll learn about another helpful tool, ``ros2 "
"bag``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:8
#: c75f1b2e2f904342aba96867d7ef7db7
msgid "Recording and playing back data"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:10
#: 27b8650476ea4dafb609875789e3e8a9
msgid ""
"**Goal:** Record data published on a topic so you can replay and examine "
"it any time."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:23
#: e0fb0f1f9e5445b3b8d6ab6e15b80ac9
msgid ""
"``ros2 bag`` is a command line tool for recording data published on "
"topics in your system. It accumulates the data passed on any number of "
"topics and saves it in a database. You can then replay the data to "
"reproduce the results of your tests and experiments. Recording topics is "
"also a great way to share your work and allow others to recreate it."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:32
#: 36097e7cc6f64d1e9bbc001ad20e1b9d
msgid ""
"You should have ``ros2 bag`` installed as a part of your regular ROS 2 "
"setup."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:34
#: cca84b4a8096480f9baa5b9e33f2bb8f
msgid ""
"If you installed ROS from Debian packages on Linux and your system "
"doesn't recognize the command, install it like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:41
#: 441926dfaf0d47abb169ce377226ea86
msgid ""
"This tutorial talks about concepts covered in previous tutorials, like "
":doc:`nodes <../Understanding-ROS2-Nodes/Understanding-ROS2-Nodes>` and "
":doc:`topics <../Understanding-ROS2-Topics/Understanding-ROS2-Topics>`. "
"It also uses the :doc:`turtlesim package <../Introducing-Turtlesim"
"/Introducing-Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:44
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:42
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:47
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:34
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:38
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:40
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:35
#: 1f666987c45b4b64afb09436b3de43a5 2f49947f719b4a3ca7b0e0709fc83685
#: 3362273ee5cc4e298f2f6c849742dbda 64be7191c3ef4c5facd491b1c9ea08b2
#: aede84019d744be19537eec078a8da2e ce7f9655fb8f42afbdbd9d0a42293a89
#: e85af5c66ccb49fdb2486ad85b1e1d87
msgid ""
"As always, don't forget to source ROS 2 in :doc:`every new terminal you "
"open <../Configuring-ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:51
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:48
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:40
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:44
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:46
#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:42
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:45
#: 56b23436817c43509697323734e0609f 581ed857975c4157888d5a5067b6467a
#: 6c9feee87c1c4760996f07008eb22cd0 7eaeaa26da2b48919d2d8e88fd2b92fe
#: 85a9ded1423944eab38efd2e88a52661 8800e8b6c2084952b37609c07f75b21b
#: fc6d640fc25c43f685b37182566e1beb
msgid "1 Setup"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:52
#: 102230dde77346828308c9896a695b0d
msgid ""
"You'll be recording your keyboard input in the ``turtlesim`` system to "
"save and replay later on, so begin by starting up the ``/turtlesim`` and "
"``/teleop_turtle`` nodes."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:60
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:58
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:50
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:53
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:56
#: 0dcd83db12354a5f8278bd81bea29f34 5ee25ca8dab54d0992568e111a290454
#: 8b68bc1259fb436ab24dde49133298bb d773b832fd164b04b6f2deee04100f54
#: df5f7c2189e2468397870a034ecb2d7a
msgid "Open another terminal and run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:66
#: bd018a8afec447ba9bdbfa603658571d
msgid ""
"Let's also make a new directory to store our saved recordings, just as "
"good practice:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:74
#: 0328c0173e874527a373762c12730c35
msgid "2 Choose a topic"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:76
#: 82d199e72eef4888a891fa15d305eb60
msgid ""
"``ros2 bag`` can only record data from published messages in topics. To "
"see the list of your system's topics, open a new terminal and run the "
"command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:83
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:166
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:200
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:220
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:264
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:131
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:160
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:182
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:201
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:176
#: 11787413c55f4a758b8526d0061a8099 69476177f57244b7b66272171a277113
#: 7bccedf63ccd474882fa26e8dc53509a 7c3b01dbb5b34befb351dd485df27d76
#: 8a75b62e9b1e4f21a81bf3ca7d32560c 8dfe75b521ed4b149446364c10175bdd
#: a992f778143a4be2852ef69c835a0eab ab2966d965fd4d04a2a12d862933a182
#: ec409615e374487e96c98fc1aca908b0 f0c61745d2474167874adf89ca36b98a
msgid "Which will return:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:93
#: 919e46c5583f48e4a39f8f1b2a79071f
msgid ""
"In the topics tutorial, you learned that the ``/turtle_teleop`` node "
"publishes commands on the ``/turtle1/cmd_vel`` topic to make the turtle "
"move in turtlesim."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:95
#: e492446b1b4c44e3b21e73461936c8b5
msgid "To see the data that ``/turtle1/cmd_vel`` is publishing, run the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:101
#: 9ac34f120aad447fb90e2b8b73dede7c
msgid ""
"Nothing will show up at first because no data is being published by the "
"teleop. Return to the terminal where you ran the teleop and select it so "
"it's active. Use the arrow keys to move the turtle around, and you will "
"see data being published on the terminal running ``ros2 topic echo``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:120
#: c7d5850648a8455ab9df1b97c059776a
msgid "3 ros2 bag record"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:123
#: 4375add6a8154bd2b2dd91d9bdd83ad9
msgid "3.1 Recording formats"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:125
#: b33e7f0ae8b84e24ab618d6805488bd7
msgid ""
"By default, ``ros2 bag record`` will record data files using the `MCAP "
"file format <https://mcap.dev>`_ (``.mcap``)."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:127
#: 933a6fe3f39e45e5aa4544f8c4f509e0
msgid ""
"To record files using the `SQLite3 file format "
"<https://www.sqlite.org/index.html>`_ (``.db3``), add the ``--storage "
"sqlite3`` flag (or ``-s sqlite3``) to your ``ros2 bag record`` commands."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:129
#: bee10e25807d4e8399052fb56810b224
msgid ""
"For more information on `ROS 2 storage plugin options "
"<https://github.com/ros2/rosbag2/tree/{DISTRO}/#storage-format-plugin-"
"architecture>`_, check out the following resources:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:131
#: bb182d770e4740d7a4ab10811b154251
msgid ""
"`MCAP "
"<https://github.com/ros2/rosbag2/blob/{DISTRO}/rosbag2_storage_mcap/README.md"
"#writer-configuration>`_"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:132
#: 78428c5cecc94e68b21e5a65cf75e7d8
msgid ""
"`SQLite3 "
"<https://github.com/ros2/rosbag2/blob/{DISTRO}/rosbag2_storage_sqlite3/README.md"
"#storage-configuration-file>`_"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:136
#: a0df5c05fcb245469a048d31c286730f
msgid "3.2 Record a single topic"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:138
#: 312a0ac366f948b5a5f9aa6c1793f8e6
msgid "To record the data published to a topic use the command syntax:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:144
#: 502d967f0b864bafb3360e1a18db6d03
msgid ""
"Before running this command on your chosen topic, open a new terminal and"
" move into the ``bag_files`` directory you created earlier, because the "
"rosbag file will save in the directory where you run it."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:146
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:339
#: 1b93ab45a5b942c3a305a6d380cf0463 ff9153f566b741e39b40c20b0417734f
msgid "Run the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:152
#: fdb0725ecdea4c4c859c15abae3c2196
msgid ""
"You will see the following messages in the terminal (the date and time "
"will be different):"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:161
#: f9cb30b2346948b2b65a053a1e5ce45e
msgid ""
"Now ``ros2 bag`` is recording the data published on the "
"``/turtle1/cmd_vel`` topic. Return to the teleop terminal and move the "
"turtle around again. The movements don't matter, but try to make a "
"recognizable pattern to see when you replay the data later."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:167
#: 727c4978cf444a07abe719c5096b265b
msgid "Press ``Ctrl+C`` to stop recording."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:169
#: df12586416fa433398655f5389d3696c
msgid ""
"The data will be accumulated in a new bag directory with a name in the "
"pattern of ``rosbag2_year_month_day-hour_minute_second``. This directory "
"will contain a ``metadata.yaml`` along with the bag file in the recorded "
"format."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:173
#: dc997e624f1847f4a22b1a2e9d61b2ee
msgid "3.3 Record multiple topics"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:175
#: 120a5ac7cbc548de8abb0caa7a0367be
msgid ""
"You can also record multiple topics, as well as change the name of the "
"file ``ros2 bag`` saves to."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:177
#: fc5a4c54b4d2423c837f91222b2edd04
msgid "Run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:183
#: 8d91beaa79804aa0b5e44f24e283285a
msgid ""
"The ``-o`` option allows you to choose a unique name for your bag file. "
"The following string, in this case ``subset``, is the file name."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:186
#: db320c1dfcb146de98ade3f534fe6be2
msgid ""
"To record more than one topic at a time, simply list each topic separated"
" by a space."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:188
#: 9deb237b8ce545b08b359f2b323c5462
msgid ""
"You will see the following message, confirming that both topics are being"
" recorded."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:198
#: 1d7d58a1829e44bfbe0c40cd68990676
msgid "You can move the turtle around and press ``Ctrl+C`` when you're finished."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:202
#: d2fd26056c6148cc89895ca2cac85e41
msgid ""
"There is another option you can add to the command, ``-a``, which records"
" all the topics on your system."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:205
#: 0094652d61c14e5ea4a43339bac46ab8
msgid "4 ros2 bag info"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:207
#: 27190f1e5c5747e39a44f8f4aa43633d
msgid "You can see details about your recording by running:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:213
#: 8cd123ac54464990ae1d068a7d08d248
msgid ""
"Running this command on the ``subset`` bag file will return a list of "
"information on the file:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:231
#: 538ce639a14e4f408168fd82e05e13aa
msgid ""
"To view the individual messages, you would have to open up the database, "
"in this case sqlite3, to examine it, which is beyond the scope of ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:234
#: 6baafb93adbb43dd9725be41fe610640
msgid "5 ros2 bag play"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:236
#: e272608d5fa4479b8e151b918b2df86c
msgid ""
"Before replaying the bag file, enter ``Ctrl+C`` in the terminal where the"
" teleop is running. Then make sure your turtlesim window is visible so "
"you can see the bag file in action."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:239
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:240
#: 32660966436346b78d75492776e3d70b 6144091b087e42a5a78dac3004550e02
msgid "Enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:245
#: cbd975ea5cc7401b90668efa0f7fb465
msgid "The terminal will return the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:251
#: d3eb720dbaed4796a73b417b37581786
#, python-format
msgid ""
"Your turtle will follow the same path you entered while recording (though"
" not 100% exactly; turtlesim is sensitive to small changes in the "
"system's timing)."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:255
#: 97e0d39c96f24600a18584d0808b2368
msgid ""
"Because the ``subset`` file recorded the ``/turtle1/pose`` topic, the "
"``ros2 bag play`` command won't quit for as long as you had turtlesim "
"running, even if you weren't moving."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:257
#: 38b9548ba44f4b9689123f7a2beb8516
msgid ""
"This is because as long as the ``/turtlesim`` node is active, it "
"publishes data on the  ``/turtle1/pose`` topic at regular intervals. You "
"may have noticed in the ``ros2 bag info`` example result above that the  "
"``/turtle1/cmd_vel`` topic's ``Count`` information was only 9; that's how"
" many times we pressed the arrow keys while recording."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:260
#: d070c85c29b6447ca49013e43834e2a9
msgid ""
"Notice that ``/turtle1/pose`` has a ``Count`` value of over 3000; while "
"we were recording, data was published on that topic 3000 times."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:262
#: 37cc4b3d36114ec8b81f1959a1a66d01
msgid ""
"To get an idea of how often position data is published, you can run the "
"command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:271
#: 7acc811177124424a8cd70ee09bfec41
msgid ""
"You can record data passed on topics in your ROS 2 system using the "
"``ros2 bag`` command. Whether you're sharing your work with others or "
"introspecting your own experiments, it's a great tool to know about."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:277
#: 2d34ed47864a4431906d338f973af4a6
msgid ""
"You've completed the \"Beginner: CLI Tools\" tutorials! The next step is "
"tackling the \"Beginner: Client Libraries\" tutorials, starting with :doc"
":`../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.rst:283
#: 3450bffcc1d94bb18e09f8bd16f858cf
msgid ""
"A more thorough explanation of ``ros2 bag`` can be found in the README "
"`here <https://github.com/ros2/rosbag2>`__. For more information on QoS "
"compatibility and ``ros2 bag``, see :doc:`../../../How-To-Guides"
"/Overriding-QoS-Policies-For-Recording-And-Playback`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:8
#: ae436aef7c234a3cadb2b13b19bfc727
msgid "Understanding actions"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:10
#: 891ec3e49c2d4b55aae7a53f6dd93969
msgid "**Goal:** Introspect actions in ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:23
#: ae71a2204648431290c0b4272a0667e0
msgid ""
"Actions are one of the communication types in ROS 2 and are intended for "
"long running tasks. They consist of three parts: a goal, feedback, and a "
"result."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:26
#: 5998c8a622194731be584c7c59a64c82
msgid ""
"Actions are built on topics and services. Their functionality is similar "
"to services, except actions can be canceled. They also provide steady "
"feedback, as opposed to services which return a single response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:30
#: 9231e86b31524415bcd7da747cc57b02
msgid ""
"Actions use a client-server model, similar to the publisher-subscriber "
"model (described in the :doc:`topics tutorial <../Understanding-"
"ROS2-Topics/Understanding-ROS2-Topics>`). An \"action client\" node sends"
" a goal to an \"action server\" node that acknowledges the goal and "
"returns a stream of feedback and a result."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:38
#: 64905ece3d504b129b768cc7be90455a
msgid ""
"This tutorial builds off concepts, like :doc:`nodes <../Understanding-"
"ROS2-Nodes/Understanding-ROS2-Nodes>` and :doc:`topics <../Understanding-"
"ROS2-Topics/Understanding-ROS2-Topics>`, covered in previous tutorials."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:40
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:32
#: 74b75584503843b494bdf0a8268ceec4 f4e62692055d42fd9e2cd6dfbaf247b7
msgid ""
"This tutorial uses the :doc:`turtlesim package <../Introducing-Turtlesim"
"/Introducing-Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:50
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:42
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:45
#: 0d7093ce550d47778e854d6aff8cfcdf 83a2c9908dde4de6af1e9d1be53e40fc
#: cbc088d1f5fa450bb379d967d85ea804
msgid "Start up the two turtlesim nodes, ``/turtlesim`` and ``/teleop_turtle``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:66
#: 349f07bb99f14c9c8a9aa970f6191485
msgid "2 Use actions"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:68
#: e625e66173a1470f99111444a33433b0
msgid ""
"When you launch the ``/teleop_turtle`` node, you will see the following "
"message in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:75
#: 4d8cccd4975f4577b6be528ea9cb3808
msgid ""
"Let's focus on the second line, which corresponds to an action. (The "
"first instruction corresponds to the \"cmd_vel\" topic, discussed "
"previously in the :doc:`topics tutorial <../Understanding-ROS2-Topics"
"/Understanding-ROS2-Topics>`.)"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:78
#: 37f83d01ddf74f04aa060c8dc5b8e1e7
msgid ""
"Notice that the letter keys ``G|B|V|C|D|E|R|T`` form a \"box\" around the"
" ``F`` key on a US QWERTY keyboard (if you are not using a QWERTY "
"keyboard, see `this link "
"<https://upload.wikimedia.org/wikipedia/commons/d/da/KB_United_States.svg>`__"
" to follow along). Each key's position around ``F`` corresponds to that "
"orientation in turtlesim. For example, the ``E`` will rotate the turtle's"
" orientation to the upper left corner."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:82
#: bdd445901c7e4580a23dd380788a45be
msgid ""
"Pay attention to the terminal where the ``/turtlesim`` node is running. "
"Each time you press one of these keys, you are sending a goal to an "
"action server that is part of the ``/turtlesim`` node. The goal is to "
"rotate the turtle to face a particular direction. A message relaying the "
"result of the goal should display once the turtle completes its rotation:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:91
#: 8435d3d59adc4d9397c25948744a2355
msgid "The ``F`` key will cancel a goal mid-execution."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:93
#: c6ab1b27453349288c23750fa4269f21
msgid ""
"Try pressing the ``C`` key, and then pressing the ``F`` key before the "
"turtle can complete its rotation. In the terminal where the "
"``/turtlesim`` node is running, you will see the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:100
#: 59649b1c0eec4339b0a5bf5766dfb1ec
msgid ""
"Not only can the client-side (your input in the teleop) stop a goal, but "
"the server-side (the ``/turtlesim`` node) can as well. When the server-"
"side chooses to stop processing a goal, it is said to \"abort\" the goal."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:103
#: 1e057680dec249c6912476d313ae9741
msgid ""
"Try hitting the ``D`` key, then the ``G`` key before the first rotation "
"can complete. In the terminal where the ``/turtlesim`` node is running, "
"you will see the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:110
#: c96fc191a7824bfcb2caa898b2ab5cd1
msgid ""
"This action server chose to abort the first goal because it got a new "
"one. It could have chosen something else, like reject the new goal or "
"execute the second goal after the first one finished. Don't assume every "
"action server will choose to abort the current goal when it gets a new "
"one."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:115
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:131
#: 7aa73400c5b8439488f8c3cdf5e6c92f 9fd169262ea04368b8910fa687e0399e
msgid "3 ros2 node info"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:117
#: ae8cea9f16ac462daf2fc6122131d975
msgid ""
"To see the list of actions a node provides, ``/turtlesim`` in this case, "
"open a new terminal and run the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:123
#: 87254796565f4f9c8021d8a50af69c48
msgid ""
"Which will return a list of ``/turtlesim``'s subscribers, publishers, "
"services, action servers and action clients:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:156
#: 419eb5a667514b5dab7180f5143368b9
msgid ""
"Notice that the ``/turtle1/rotate_absolute`` action for ``/turtlesim`` is"
" under ``Action Servers``. This means ``/turtlesim`` responds to and "
"provides feedback for the ``/turtle1/rotate_absolute`` action."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:159
#: ee3a9be52d9b46d384d3c7f54a7c9fb1
msgid ""
"The ``/teleop_turtle`` node has the name ``/turtle1/rotate_absolute`` "
"under ``Action Clients`` meaning that it sends goals for that action "
"name. To see that, run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:192
#: 28e0bcac8681487e9135f97b51bf274a
msgid "4 ros2 action list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:194
#: b405c4dcaa7942c8aea348364c7df54e
msgid "To identify all the actions in the ROS graph, run the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:206
#: 334b7106b6674c328b7d822de208a4ed
msgid ""
"This is the only action in the ROS graph right now. It controls the "
"turtle's rotation, as you saw earlier. You also already know that there "
"is one action client (part of ``/teleop_turtle``) and one action server "
"(part of ``/turtlesim``) for this action from using the ``ros2 node info "
"<node_name>`` command."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:211
#: 58231577d999487194790ce22e604eec
msgid "4.1 ros2 action list -t"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:213
#: 765dc2bb705a428f90883f0d45594154
msgid ""
"Actions have types, similar to topics and services. To find "
"``/turtle1/rotate_absolute``'s type, run the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:226
#: 2a7871e85b114bca9e20a9a488548db4
msgid ""
"In brackets to the right of each action name (in this case only "
"``/turtle1/rotate_absolute``) is the action type, "
"``turtlesim/action/RotateAbsolute``. You will need this when you want to "
"execute an action from the command line or from code."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:230
#: a6c7c055012448369566b939eab38d0b
msgid "5 ros2 action info"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:232
#: cac9aa9a297e492b89dd7954bb3caabf
msgid ""
"You can further introspect the ``/turtle1/rotate_absolute`` action with "
"the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:238
#: 027a8eabd9854769bd843e0b7cd2c87f
msgid "Which will return"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:248
#: 6b8a5932725a4131ad40a5ef529d4ce9
msgid ""
"This tells us what we learned earlier from running ``ros2 node info`` on "
"each node: The ``/teleop_turtle`` node has an action client and the "
"``/turtlesim`` node has an action server for the "
"``/turtle1/rotate_absolute`` action."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:253
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:185
#: 15e539a0187b4982972a5d6b5f653ac1 7892b7ace4394799add9fa26c194416c
msgid "6 ros2 interface show"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:255
#: 3560d1c840ff4ad08799250bea567281
msgid ""
"One more piece of information you will need before sending or executing "
"an action goal yourself is the structure of the action type."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:257
#: 1c798af43af74818ace964d5fd40b611
msgid ""
"Recall that you identified ``/turtle1/rotate_absolute``'s type when "
"running the command ``ros2 action list -t``. Enter the following command "
"with the action type in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:277
#: b06dfbaf81ab4560b17957c3da6600f6
msgid ""
"The section of this message above the first ``---`` is the structure "
"(data type and name) of the goal request. The next section is the "
"structure of the result. The last section is the structure of the "
"feedback."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:282
#: 402adc2d0ed540a3afb5364e4cebf81f
msgid "7 ros2 action send_goal"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:284
#: b8816a7c47bf4465835f34059bd7dca7
msgid ""
"Now let's send an action goal from the command line with the following "
"syntax:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:290
#: b37a32759ff7405291289aebca2503e7
msgid "``<values>`` need to be in YAML format."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:292
#: 0bf810724d204fb9a15097954c1cecde
msgid ""
"Keep an eye on the turtlesim window, and enter the following command into"
" your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:298
#: f04e5a74582348379639e19b83b752f5
msgid ""
"You should see the turtle rotating, as well as the following message in "
"your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:313
#: 2d6657db2ebc4cfc826fbb4d681c8702
msgid ""
"All goals have a unique ID, shown in the return message. You can also see"
" the result, a field with the name ``delta``, which is the displacement "
"to the starting position."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:316
#: ad239ca0c7694ccaa146052dccfb4fbc
msgid ""
"To see the feedback of this goal, add ``--feedback`` to the ``ros2 action"
" send_goal`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:322
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:200
#: 38685eef9dce4fdca7d38b557143dc77 9d5e530e504e46d3bd966ac5293a90bd
msgid "Your terminal will return the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:344
#: 28fa4968dbf44ea39f6210cccadc1313
msgid ""
"You will continue to receive feedback, the remaining radians, until the "
"goal is complete."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:349
#: 85ba1bd402544607b74f2f7564744f08
msgid ""
"Actions are like services that allow you to execute long running tasks, "
"provide regular feedback, and are cancelable."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:351
#: cad1819b235e4dbab4fae71e9d308bed
msgid ""
"A robot system would likely use actions for navigation. An action goal "
"could tell a robot to travel to a position. While the robot navigates to "
"the position, it can send updates along the way (i.e. feedback), and then"
" a final result message once it's reached its destination."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:355
#: 75a7a4dfc4fc4cddadc555e3db384f62
msgid ""
"Turtlesim has an action server that action clients can send goals to for "
"rotating turtles. In this tutorial, you introspected that action, "
"``/turtle1/rotate_absolute``, to get a better idea of what actions are "
"and how they work."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:361
#: 3c4954e1e99540369bc2a8327f857941
msgid ""
"Now you've covered all of the core ROS 2 concepts. The last few tutorials"
" in the \"Users\" set will introduce you to some tools and techniques "
"that will make using ROS 2 easier, starting with :doc:`../Using-Rqt-"
"Console/Using-Rqt-Console`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.rst:367
#: 136d072b0b8f443cb01d0e47e5760bd5
msgid ""
"You can read more about the design decisions behind actions in ROS 2 "
"`here <https://design.ros2.org/articles/actions.html>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:8
#: 2a9be0390ed64652991a27824578e41c
msgid "Understanding nodes"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:10
#: ca7a58e9b05a443e88aa97fc7ecd7dd1
msgid ""
"**Goal:** Learn about the function of nodes in ROS 2, and the tools to "
"interact with them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:24
#: 9681a94b8e7f4119bc47de788162aee8
msgid "1 The ROS 2 graph"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:26
#: e552f52387394605ac6f214c172e49cf
msgid ""
"Over the next few tutorials, you will learn about a series of core ROS 2 "
"concepts that make up what is referred to as the “ROS (2) graph”."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:28
#: 0848811548b04d5c9107382a6f475df4
msgid ""
"The ROS graph is a network of ROS 2 elements processing data together at "
"the same time. It encompasses all executables and the connections between"
" them if you were to map them all out and visualize them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:32
#: e75c6986d1ce4e0784618bb18afbf1f9
msgid "2 Nodes in ROS 2"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:34
#: 3b817e0c7c644347b0778d24115a5cca
msgid ""
"Each node in ROS should be responsible for a single, modular purpose, "
"e.g. controlling the wheel motors or publishing the sensor data from a "
"laser range-finder. Each node can send and receive data from other nodes "
"via topics, services, actions, or parameters."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:39
#: ecd473b32d90495aa8eeabab315ae09b
msgid ""
"A full robotic system is comprised of many nodes working in concert. In "
"ROS 2, a single executable (C++ program, Python program, etc.) can "
"contain one or more nodes."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:45
#: e0e5f611f0ae4dd4817f193f961b0fc2
msgid ""
"The :doc:`previous tutorial <../Introducing-Turtlesim/Introducing-"
"Turtlesim>` shows you how to install the ``turtlesim`` package used here."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:53
#: ebaf5159c2a04e409360d73e588a3d2f
msgid "1 ros2 run"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:55
#: 7afe4b90f0d5474f930531ce5176f83d
msgid "The command ``ros2 run`` launches an executable from a package."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:61
#: b01e57dd635d4e7f90c86673317d9bd8
msgid "To run turtlesim, open a new terminal, and enter the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:67
#: 786ddcb0be89432eb8032d79bc45ba63
msgid ""
"The turtlesim window will open, as you saw in the :doc:`previous tutorial"
" <../Introducing-Turtlesim/Introducing-Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:69
#: 822d205d658b4141b9fe4f593ddbd605
msgid ""
"Here, the package name is ``turtlesim`` and the executable name is "
"``turtlesim_node``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:71
#: be23b496189b4eba80d573f132a1dfed
msgid ""
"We still don't know the node name, however. You can find node names by "
"using ``ros2 node list``"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:75
#: 2f774fe2e3914a38ae3808bfbd8295f5
msgid "2 ros2 node list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:77
#: f09340eaaefd4275b3733fae6eab4642
msgid ""
"``ros2 node list`` will show you the names of all running nodes. This is "
"especially useful when you want to interact with a node, or when you have"
" a system running many nodes and need to keep track of them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:80
#: ed42d5c18e114863860dc311c1163757
msgid ""
"Open a new terminal while turtlesim is still running in the other one, "
"and enter the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:86
#: f097da4b27fc4ef1b3fdf317b31dab7c
msgid "The terminal will return the node name:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:92
#: 5154d948c3b748a790eb13112af1c789
msgid "Open another new terminal and start the teleop node with the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:98
#: edc94aebfa7c4efea4acd71c99472feb
msgid ""
"Here, we are referring to the ``turtlesim`` package again, but this time "
"we target the executable named ``turtle_teleop_key``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:100
#: 1694dffd30d247e789d921b4fe634437
msgid ""
"Return to the terminal where you ran ``ros2 node list`` and run it again."
" You will now see the names of two active nodes:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:109
#: 678eb299871748e6b056b435e4cba112
msgid "2.1 Remapping"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:111
#: 3622630b67eb49bcad9bf6c386275bac
msgid ""
"`Remapping "
"<https://design.ros2.org/articles/ros_command_line_arguments.html#name-"
"remapping-rules>`__ allows you to reassign default node properties, like "
"node name, topic names, service names, etc., to custom values. In the "
"last tutorial, you used remapping on ``turtle_teleop_key`` to change the "
"cmd_vel topic and target **turtle2**."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:114
#: caea95b125154d23b249b41d6b38e76e
msgid ""
"Now, let's reassign the name of our ``/turtlesim`` node. In a new "
"terminal, run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:121
#: 27d5bf73fa4041fc8d7f1b2f6c907740
msgid ""
"Since you're calling ``ros2 run`` on turtlesim again, another turtlesim "
"window will open. However, now if you return to the terminal where you "
"ran ``ros2 node list``, and run it again, you will see three node names:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:133
#: 5fe29f510cc744529b2374e43f7663c0
msgid ""
"Now that you know the names of your nodes, you can access more "
"information about them with:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:139
#: d6b4b5da85124221986e4d070a0fa768
msgid "To examine your latest node, ``my_turtle``, run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:145
#: 023ff7a29aaf44afb346bc40ad364c9e
msgid ""
"``ros2 node info`` returns a list of subscribers, publishers, services, "
"and actions. i.e. the ROS graph connections that interact with that node."
" The output should look like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:179
#: ffb761848d9142d5acdbd2a915e93fba
msgid ""
"Now try running the same command on the ``/teleop_turtle`` node, and see "
"how its connections differ from ``my_turtle``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:181
#: 73413affe74445cca1a3b29b3fa1ac16
msgid ""
"You will learn more about the ROS graph connection concepts including the"
" message types in the upcoming tutorials."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:186
#: f0ed6172092547cba86fe4a6ec88ce36
msgid ""
"A node is a fundamental ROS 2 element that serves a single, modular "
"purpose in a robotics system."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:188
#: 3e86d47a443648eb848ad4aa3d230fe2
msgid ""
"In this tutorial, you utilized nodes created in the ``turtlesim`` package"
" by running the executables ``turtlesim_node`` and ``turtle_teleop_key``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:190
#: f4f73388fe6045e9a7a965ded087aeec
msgid ""
"You learned how to use ``ros2 node list`` to discover active node names "
"and ``ros2 node info`` to introspect a single node. These tools are vital"
" to understanding the flow of data in a complex, real-world robot system."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:196
#: 82517e7df94549009e21bd5946763f6b
msgid ""
"Now that you understand nodes in ROS 2, you can move on to the "
":doc:`topics tutorial <../Understanding-ROS2-Topics/Understanding-"
"ROS2-Topics>`. Topics are one of the communication types that connects "
"nodes."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.rst:202
#: 7555a0e4b1414d11ad7e02704a04e771
msgid ""
"The :doc:`../../../Concepts` page adds some more detail to the concept of"
" nodes."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:8
#: 07ec05cfa31e4151869d96b3e588659f
msgid "Understanding parameters"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:10
#: 240cce0b7c0b4c5db0151429a812605e
msgid "**Goal:** Learn how to get, set, save and reload parameters in ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:23
#: 163adba65a984c0d86f44dcef648435e
msgid ""
"A parameter is a configuration value of a node. You can think of "
"parameters as node settings. A node can store parameters as integers, "
"floats, booleans, strings, and lists. In ROS 2, each node maintains its "
"own parameters. For more background on parameters, please see :doc:`the "
"concept document <../../../Concepts/Basic/About-Parameters>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:58
#: 104eadc09dc84922bf7dd66b2938c73b
msgid "2 ros2 param list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:60
#: 1a1b6459a4d1407e882cacea0c5c73ad
msgid ""
"To see the parameters belonging to your nodes, open a new terminal and "
"enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:66
#: fa5c04bc40284d3faeb0791faa9c5c35
msgid ""
"You will see the node namespaces, ``/teleop_turtle`` and ``/turtlesim``, "
"followed by each node's parameters:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:88
#: a85bedd02bdf4f8384db9b51918984aa
msgid ""
"Every node has the parameter ``use_sim_time``; it's not unique to "
"turtlesim."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:90
#: a73c941d77d74a20a39596f0d418ba3a
msgid ""
"Based on their names, it looks like ``/turtlesim``'s parameters determine"
" the background color of the turtlesim window using RGB color values."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:92
#: 51258dfd9e534e3a854fca94797e515f
msgid "To determine a parameter's type, you can use ``ros2 param get``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:96
#: dde0776030b1491989c9d998d0651b53
msgid "3 ros2 param get"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:98
#: 1657d4d0cc57480c8d8e4f5235766f5d
msgid "To display the type and current value of a parameter, use the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:104
#: fe3f1111d3b349d08633148832251e31
msgid ""
"Let's find out the current value of ``/turtlesim``'s parameter "
"``background_g``:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:110
#: b7df8ea1eb15427badd49aaad42094d2
msgid "Which will return the value:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:116
#: 373c5f87d76e4f81933c94e596b69be5
msgid "Now you know ``background_g`` holds an integer value."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:118
#: 9f2c1e4616a343c49e231005267c950f
msgid ""
"If you run the same command on ``background_r`` and ``background_b``, you"
" will get the values ``69`` and ``255``, respectively."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:121
#: ea052d5ab384459dbbf63960c8f86844
msgid "4 ros2 param set"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:123
#: 236555e427d3454e880a6a703ccfc28f
msgid "To change a parameter's value at runtime, use the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:129
#: 45fa58e720bb444e9858e9aa08929385
msgid "Let's change ``/turtlesim``'s background color:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:135
#: f400a3d3e1834b388fe1aa5c264d44fd
msgid "Your terminal should return the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:141
#: 4bbca01f40b74ce2a51afd05ac1daa4d
msgid "And the background of your turtlesim window should change colors:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:145
#: e25128521d8f474c9b917db94e863e25
msgid ""
"Setting parameters with the ``set`` command will only change them in your"
" current session, not permanently. However, you can save your settings "
"and reload them the next time you start a node."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:149
#: f70344e46bf84855b777951ee6d8b635
msgid "5 ros2 param dump"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:151
#: 481ef10704c34de88ef8d88ade936a38
msgid ""
"You can view all of a node's current parameter values by using the "
"command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:157
#: b1c6e770d6154548b005be40218c21e7
msgid ""
"The command prints to the standard output (stdout) by default but you can"
" also redirect the parameter values into a file to save them for later. "
"To save your current configuration of ``/turtlesim``'s parameters into "
"the file ``turtlesim.yaml``, enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:164
#: e323d414976a4348af969d1bf2eb4332
msgid ""
"You will find a new file in the current working directory your shell is "
"running in. If you open this file, you'll see the following content:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:183
#: 46141286ee844ec9aa935d1e6791cd31
msgid ""
"Dumping parameters comes in handy if you want to reload the node with the"
" same parameters in the future."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:186
#: b8fbadd989744d12b4cec292fb68d1ae
msgid "6 ros2 param load"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:188
#: 45b80adc190b4dc29afa9253f2e0ffd7
msgid ""
"You can load parameters from a file to a currently running node using the"
" command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:194
#: c5c157542c5a49cc9d8df6bbbc243d9e
msgid ""
"To load the ``turtlesim.yaml`` file generated with ``ros2 param dump`` "
"into ``/turtlesim`` node's parameters, enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:215
#: e4d261dc1a054f9e8cb44bafbf8c16f0
msgid ""
"Read-only parameters can only be modified at startup and not afterwards, "
"that is why there are some warnings for the \"qos_overrides\" parameters."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:218
#: 0ed94c5b84f94cd4a7216cc0e3804fb5
msgid "7 Load parameter file on node startup"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:220
#: 685d0f1919784507953fde3813e60da5
msgid "To start the same node using your saved parameter values, use:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:226
#: c434518ffafc4f1ca3f0cfcadccabc44
msgid ""
"This is the same command you always use to start turtlesim, with the "
"added flags ``--ros-args`` and ``--params-file``, followed by the file "
"you want to load."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:228
#: ff18c1fc86df4afeac5dd63a1925778e
msgid ""
"Stop your running turtlesim node, and try reloading it with your saved "
"parameters, using:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:234
#: f3d42d98b7c4493a8eee2f95d7b369af
msgid ""
"The turtlesim window should appear as usual, but with the purple "
"background you set earlier."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:238
#: 39a3b1ea5a344535b5c884e30cfb04f9
msgid ""
"When a parameter file is used at node startup, all parameters, including "
"the read-only ones, will be updated."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:243
#: 2c49d25cae944f0f883863b2648cb605
msgid ""
"Nodes have parameters to define their default configuration values. You "
"can ``get`` and ``set`` parameter values from the command line. You can "
"also save the parameter settings to a file to reload them in a future "
"session."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.rst:250
#: dfd98f874b0f4257aa8446da2a6d0707
msgid ""
"Jumping back to ROS 2 communication methods, in the next tutorial you'll "
"learn about :doc:`actions <../Understanding-ROS2-Actions/Understanding-"
"ROS2-Actions>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:8
#: 3d9bbecaffd241f286202906558b46ba
msgid "Understanding services"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:10
#: 307b3f62670a45a3a125f2cb748caf0a
msgid "**Goal:** Learn about services in ROS 2 using command line tools."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:23
#: 8afc68b4d8ed4900a321acca80cf7433
msgid ""
"Services are another method of communication for nodes in the ROS graph. "
"Services are based on a call-and-response model versus the publisher-"
"subscriber model of topics. While topics allow nodes to subscribe to data"
" streams and get continual updates, services only provide data when they "
"are specifically called by a client."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:34
#: 3ddbb4d8ef5e4797877c4a06d1fdfa0c
msgid ""
"Some concepts mentioned in this tutorial, like :doc:`Nodes "
"<../Understanding-ROS2-Nodes/Understanding-ROS2-Nodes>` and :doc:`Topics "
"<../Understanding-ROS2-Topics/Understanding-ROS2-Topics>`, were covered "
"in previous tutorials in the series."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:36
#: ea8f5ec58a544a09a0cf06a64372cba7
msgid ""
"You will need the :doc:`turtlesim package <../Introducing-Turtlesim"
"/Introducing-Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:60
#: 70eb18e1f645451e9a12ff6ff0a2f52f
msgid "2 ros2 service list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:62
#: 9f5a8b9991404134a40fe9dfa07a1636
msgid ""
"Running the ``ros2 service list`` command in a new terminal will return a"
" list of all the services currently active in the system:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:86
#: 0f4b04134e474eea8edb927abeeb8824
msgid ""
"You will see that both nodes have the same six services with "
"``parameters`` in their names. Nearly every node in ROS 2 has these "
"infrastructure services that parameters are built off of. There will be "
"more about parameters in the next tutorial. In this tutorial, the "
"parameter services will be omitted from the discussion."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:91
#: 76f8f42cc9f84c4498b3b4062fe5fb3c
msgid ""
"For now, let's focus on the turtlesim-specific services, ``/clear``, "
"``/kill``, ``/reset``, ``/spawn``, ``/turtle1/set_pen``, "
"``/turtle1/teleport_absolute``, and ``/turtle1/teleport_relative``. You "
"may recall interacting with some of these services using rqt in the "
":doc:`Use turtlesim, ros2, and rqt <../Introducing-Turtlesim/Introducing-"
"Turtlesim>` tutorial."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:96
#: f853bcfe8e704c1aa35e73da83f7fda9
msgid "3 ros2 service type"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:98
#: 6c1977c8a2a4438cb620f227dedb1b6f
msgid ""
"Services have types that describe how the request and response data of a "
"service is structured. Service types are defined similarly to topic "
"types, except service types have two parts: one message for the request "
"and another for the response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:101
#: db8d8b87a17046c6a8e23a86ccb34e48
msgid "To find out the type of a service, use the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:107
#: ad887fcb8b524125b0933eb43f1325b9
msgid ""
"Let's take a look at turtlesim's ``/clear`` service. In a new terminal, "
"enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:114
#: de104a3e3fdb4c9c8e6f06e95e6f8d65
msgid "Which should return:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:120
#: 1bfb9e0c8fcc44ac91b61bc9e433a047
msgid ""
"The ``Empty`` type means the service call sends no data when making a "
"request and receives no data when receiving a response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:123
#: 873ddde65d634c73aef50ba147605ab0
msgid "3.1 ros2 service list -t"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:125
#: 09abbdf18ff64d88a2f35282c24efb10
msgid ""
"To see the types of all the active services at the same time, you can "
"append the ``--show-types`` option, abbreviated as ``-t``, to the "
"``list`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:146
#: 6799bf0d087a40be9535854c8d92395f
msgid "4 ros2 service find"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:148
#: 04f978e11fc746afac5dd1e798ac7d0d
msgid ""
"If you want to find all the services of a specific type, you can use the "
"command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:154
#: d4f8c22f254343bfb9e0b72a2a660f36
msgid "For example, you can find all the ``Empty`` typed services like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:168
#: 4c8c95fed44d42c9be4fed2a597ac0de
msgid "5 ros2 interface show"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:170
#: 69b9919a8a2b4f11a0b725f026dfd6dc
msgid ""
"You can call services from the command line, but first you need to know "
"the structure of the input arguments."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:176
#: 42cad5276a4b496f8019c0da3765f8d7
msgid "Try this on the ``/clear`` service's type, ``Empty``:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:188
#: e741958d4f75495f85f5b675104d69a1
msgid ""
"The ``---`` separates the request structure (above) from the response "
"structure (below). But, as you learned earlier, the ``Empty`` type "
"doesn't send or receive any data. So, naturally, its structure is blank."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:192
#: 5be7c385e05b49ebba6aa8e6b7d2e5af
msgid ""
"Let's introspect a service with a type that sends and receives data, like"
" ``/spawn``. From the results of ``ros2 service list -t``, we know "
"``/spawn``'s type is ``turtlesim/srv/Spawn``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:195
#: 729c408476154f5eb7a3bf3ad9452096
msgid ""
"To see the request and response arguments of the ``/spawn`` service, run "
"the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:212
#: d426550ce6da4826a4e93210cfbb24b6
msgid ""
"The information above the ``---`` line tells us the arguments needed to "
"call ``/spawn``. ``x``, ``y`` and ``theta`` determine the 2D pose of the "
"spawned turtle, and ``name`` is clearly optional."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:215
#: e1efaab0cb2f423988f960d2112e4837
msgid ""
"The information below the line isn't something you need to know in this "
"case, but it can help you understand the data type of the response you "
"get from the call."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:218
#: 02c70ce22e3a4276b3e07152f78c11eb
msgid "6 ros2 service call"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:220
#: 2420aa12bdfb4827830b503072bf6a7c
msgid ""
"Now that you know what a service type is, how to find a service's type, "
"and how to find the structure of that type's arguments, you can call a "
"service using:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:226
#: fe2568d5329346298efbc3e7382fb354
msgid ""
"The ``<arguments>`` part is optional. For example, you know that "
"``Empty`` typed services don't have any arguments:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:233
#: 915b4f6cf0794f57afbbc494fd607d76
msgid ""
"This command will clear the turtlesim window of any lines your turtle has"
" drawn."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:237
#: e1f6ea976e2c4e4c975f4ca103168c15
msgid ""
"Now let's spawn a new turtle by calling ``/spawn`` and setting arguments."
" Input ``<arguments>`` in a service call from the command-line need to be"
" in YAML syntax."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:246
#: 62c3699877a3470086a3af12cc657c3e
msgid ""
"You will get this method-style view of what's happening, and then the "
"service response:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:255
#: be643fba522d49099f02452d8399729e
msgid ""
"Your turtlesim window will update with the newly spawned turtle right "
"away:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:262
#: 72e5eb1b349a4d5992aa10a2c700f9ab
msgid ""
"Nodes can communicate using services in ROS 2. Unlike a topic - a one way"
" communication pattern where a node publishes information that can be "
"consumed by one or more subscribers - a service is a request/response "
"pattern where a client makes a request to a node providing the service "
"and the service processes the request and generates a response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:265
#: f8b1ba4297b94c76972c53c411ada3f0
msgid ""
"You generally don't want to use a service for continuous calls; topics or"
" even actions would be better suited."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:267
#: 8ee4e155c96e46469d45cc24d6ef7fb8
msgid ""
"In this tutorial you used command line tools to identify, introspect, and"
" call services."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:272
#: fd07a08e63b14d90886a5f8c0a3659de
msgid ""
"In the next tutorial, :doc:`../Understanding-ROS2-Parameters"
"/Understanding-ROS2-Parameters`, you will learn about configuring node "
"settings."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:277
#: 95ed8c5d75474248978cf479b6521a8e
msgid ""
"Check out `this tutorial <https://discourse.ubuntu.com/t/call-services-"
"in-ros-2/15261>`_; it's an excellent realistic application of ROS "
"services using a Robotis robot arm."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:8
#: 25511f9e81a14d1baa39959f0cd348e6
msgid "Understanding topics"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:10
#: 83307e58932a43938d238885225fe12e
msgid "**Goal:** Use rqt_graph and command line tools to introspect ROS 2 topics."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:23
#: 8e17ffb94ccb44e78571315838d1141b
msgid ""
"ROS 2 breaks complex systems down into many modular nodes. Topics are a "
"vital element of the ROS graph that act as a bus for nodes to exchange "
"messages."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:28
#: ea15c83cf3a74670aeaf81e99448c4b2
msgid ""
"A node may publish data to any number of topics and simultaneously have "
"subscriptions to any number of topics."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:32
#: c29f1812c3574e0d9e86fba6f0a01631
msgid ""
"Topics are one of the main ways in which data is moved between nodes and "
"therefore between different parts of the system."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:38
#: 9a4df7c4bb5841b89460fa834087f314
msgid ""
"The :doc:`previous tutorial <../Understanding-ROS2-Nodes/Understanding-"
"ROS2-Nodes>` provides some useful background information on nodes that is"
" built upon here."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:48
#: 85501345913f465e8fbebf624318c16a
msgid "By now you should be comfortable starting up turtlesim."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:62
#: 0e0c660a456642b8a0f6bd64439a5b93
msgid ""
"Recall from the :doc:`previous tutorial <../Understanding-ROS2-Nodes"
"/Understanding-ROS2-Nodes>` that the names of these nodes are "
"``/turtlesim`` and ``/teleop_turtle`` by default."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:66
#: 7fe522e125da4d34a1de8e04c9417ef3
msgid "2 rqt_graph"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:68
#: 6a5d8095da4e4c4c83ad8f077ae8b8f3
msgid ""
"Throughout this tutorial, we will use ``rqt_graph`` to visualize the "
"changing nodes and topics, as well as the connections between them."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:70
#: c50799d68b934cd6a35ffa17605c96db
msgid ""
"The :doc:`turtlesim tutorial <../Introducing-Turtlesim/Introducing-"
"Turtlesim>` tells you how to install rqt and all its plugins, including "
"``rqt_graph``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:72
#: e79a1d9bfe314464b2d0ad3424e79c8a
msgid "To run rqt_graph, open a new terminal and enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:78
#: 566b0101a8d84627b6a8e661e034b868
msgid ""
"You can also open rqt_graph by opening ``rqt`` and selecting **Plugins** "
"> **Introspection** > **Node Graph**."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:82
#: b3b6acd850d94b7d85edab046d0f9e50
msgid ""
"You should see the above nodes and topic, as well as two actions around "
"the periphery of the graph (let's ignore those for now). If you hover "
"your mouse over the topic in the center, you'll see the color "
"highlighting like in the image above."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:85
#: cac8ebb2694b4b85afbd1a0b14aed50f
msgid ""
"The graph is depicting how the ``/turtlesim`` node and the "
"``/teleop_turtle`` node are communicating with each other over a topic. "
"The ``/teleop_turtle`` node is publishing data (the keystrokes you enter "
"to move the turtle around) to the ``/turtle1/cmd_vel`` topic, and the "
"``/turtlesim`` node is subscribed to that topic to receive the data."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:88
#: 2237c35f394e4e46878e6a3766f31888
msgid ""
"The highlighting feature of rqt_graph is very helpful when examining more"
" complex systems with many nodes and topics connected in many different "
"ways."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:90
#: 3f9cda7708524ec0aef3b8402a88bdaa
msgid ""
"rqt_graph is a graphical introspection tool. Now we'll look at some "
"command line tools for introspecting topics."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:95
#: 1c25d9fc78654884961c773fee7999ea
msgid "3 ros2 topic list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:97
#: 94e45621c61e476fb445e22381ad26d4
msgid ""
"Running the ``ros2 topic list`` command in a new terminal will return a "
"list of all the topics currently active in the system:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:107
#: 80b50c4fc2924873bd96b8a18c376766
msgid ""
"``ros2 topic list -t`` will return the same list of topics, this time "
"with the topic type appended in brackets:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:117
#: 396edc05d4fa46c4a72320dfce9abc9f
msgid ""
"These attributes, particularly the type, are how nodes know they're "
"talking about the same information as it moves over topics."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:119
#: 518c514693e94df482fb3e95851c2e3b
msgid ""
"If you're wondering where all these topics are in rqt_graph, you can "
"uncheck all the boxes under **Hide:**"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:123
#: 45b0cc3fdf484542964fe10092f4d15e
msgid "For now, though, leave those options checked to avoid confusion."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:126
#: ec88e69ea2da4d18ad9ac2bb7a02d37c
msgid "4 ros2 topic echo"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:128
#: 3c001648a8754ccc9366a0b2edde2253
msgid "To see the data being published on a topic, use:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:134
#: f771fa015e6e459685ecf7eb95a63beb
msgid ""
"Since we know that ``/teleop_turtle`` publishes data to ``/turtlesim`` "
"over the ``/turtle1/cmd_vel`` topic, let's use ``echo`` to introspect "
"that topic:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:140
#: a417d98223024cf7b3b57eb69333a675
msgid ""
"At first, this command won't return any data. That's because it's waiting"
" for ``/teleop_turtle`` to publish something."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:143
#: be0c859525a54fefb21171ceadc6757e
msgid ""
"Return to the terminal where ``turtle_teleop_key`` is running and use the"
" arrows to move the turtle around. Watch the terminal where your ``echo``"
" is running at the same time, and you'll see position data being "
"published for every movement you make:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:158
#: c032d80218c6426e899b2e6e47b1b659
msgid "Now return to rqt_graph and uncheck the **Debug** box."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:162
#: fa8bc37fad254963bf036f58dc116507
msgid ""
"``/_ros2cli_26646`` is the node created by the ``echo`` command we just "
"ran (the number might be different). Now you can see that the publisher "
"is publishing data over the ``cmd_vel`` topic, and two subscribers are "
"subscribed to it."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:166
#: d335f3e4c06745b09ab22bc5ae77fec1
msgid "5 ros2 topic info"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:168
#: e968fca4911c4ff798ec4133a59fd06b
msgid ""
"Topics don't have to only be one-to-one communication; they can be one-"
"to-many, many-to-one, or many-to-many."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:170
#: 3378a227f08c41c5a61ea1074dfd4e82
msgid "Another way to look at this is running:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:187
#: d1ab0c7f13e8408aab4d11c15453ebab
msgid ""
"Nodes send data over topics using messages. Publishers and subscribers "
"must send and receive the same type of message to communicate."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:190
#: 965c3e499c1645abaef5bf704b348090
msgid ""
"The topic types we saw earlier after running ``ros2 topic list -t`` let "
"us know what message type is used on each topic. Recall that the "
"``cmd_vel`` topic has the type:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:197
#: 6056f4f28f7a46eea3f201a48730a044
msgid ""
"This means that in the package ``geometry_msgs`` there is a ``msg`` "
"called ``Twist``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:199
#: ff80d2d3bae9432a98187fa96149334f
msgid ""
"Now we can run ``ros2 interface show <msg type>`` on this type to learn "
"its details. Specifically, what structure of data the message expects."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:206
#: 645af5c4dc324f8ea7a8c7b64b93f1c0
msgid "For the message type from above it yields:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:221
#: 31aff5c668e54522889ca06363015dc3
msgid ""
"This tells you that the ``/turtlesim`` node is expecting a message with "
"two vectors, ``linear`` and ``angular``, of three elements each. If you "
"recall the data we saw ``/teleop_turtle`` passing to ``/turtlesim`` with "
"the ``echo`` command, it's in the same structure:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:237
#: 2359522f07dc4420a59a68668d96505f
msgid "7 ros2 topic pub"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:239
#: 01feb98cab6d494293ddb2ada8656783
msgid ""
"Now that you have the message structure, you can publish data onto a "
"topic directly from the command line using:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:245
#: 5b8fae4036cc4718a3e83a317678705b
msgid ""
"The ``'<args>'`` argument is the actual data you'll pass to the topic, in"
" the structure you just discovered in the previous section."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:247
#: ea4413a09ce04f828b1a4bfb29b1bc9f
msgid ""
"It's important to note that this argument needs to be input in YAML "
"syntax. Input the full command like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:254
#: 5e7bf65dfc424624959587b98d6a46ce
msgid ""
"``--once`` is an optional argument meaning “publish one message then "
"exit”."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:256
#: 301170ba4fdf4f6282be6826a566a0a1
msgid "You will see the following output in the terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:263
#: 20531a09ea224543a11e5a175bdd7c2f
msgid "And you will see your turtle move like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:267
#: 7719ea7f91f74e56b233781063923c46
msgid ""
"The turtle (and commonly the real robots which it is meant to emulate) "
"require a steady stream of commands to operate continuously. So, to get "
"the turtle to keep moving, you can run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:274
#: 95bd8e0146474457b611b26d1d5101c4
msgid ""
"The difference here is the removal of the ``--once`` option and the "
"addition of the ``--rate 1`` option, which tells ``ros2 topic pub`` to "
"publish the command in a steady stream at 1 Hz."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:278
#: e5bd4473ca714c31ad187af60426a9ab
msgid ""
"You can refresh rqt_graph to see what's happening graphically. You will "
"see that the ``ros2 topic pub ...`` node (``/_ros2cli_30358``) is "
"publishing over the ``/turtle1/cmd_vel`` topic, which is being received "
"by both the ``ros2 topic echo ...`` node (``/_ros2cli_26646``) and the "
"``/turtlesim`` node now."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:283
#: 9dd1a3426efc47f690609266b6215fee
msgid "Finally, you can run ``echo`` on the ``pose`` topic and recheck rqt_graph:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:291
#: 147ce726b0334e2580b2ea01c7949c15
msgid ""
"You can see that the ``/turtlesim`` node is also publishing to the "
"``pose`` topic, which the new ``echo`` node has subscribed to."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:294
#: b561d3ac065e48c180febd2d0067a078
msgid "8 ros2 topic hz"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:296
#: a41f6d2ddf4a48eb97e36e72ff313986
msgid ""
"For one last introspection on this process, you can view the rate at "
"which data is published using:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:302
#: feedb8a9e51e4b9eb257bec86344fee7
msgid ""
"It will return data on the rate at which the ``/turtlesim`` node is "
"publishing data to the ``pose`` topic."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:309
#: e797f8d55fc34ee8bd3ebe5ab80684f0
msgid ""
"Recall that you set the rate of ``turtle1/cmd_vel`` to publish at a "
"steady 1 Hz using ``ros2 topic pub --rate 1``. If you run the above "
"command with ``turtle1/cmd_vel`` instead of ``turtle1/pose``, you will "
"see an average reflecting that rate."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:317
#: 6c14ef58ecc143678c40ad4989391cdf
msgid "9 Clean up"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:319
#: 48e27bbe4e4b4ef0a18595cb332a802c
msgid ""
"At this point you'll have a lot of nodes running. Don't forget to stop "
"them by entering ``Ctrl+C`` in each terminal."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:325
#: c4ca51f85c274dd884bde12a06b94b40
msgid ""
"Nodes publish information over topics, which allows any number of other "
"nodes to subscribe to and access that information. In this tutorial you "
"examined the connections between several nodes over topics using "
"rqt_graph and command line tools. You should now have a good idea of how "
"data moves around a ROS 2 system."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.rst:332
#: c0172ace35e84cce931d3f0bd60e5409
msgid ""
"Next you'll learn about another communication type in the ROS graph with "
"the tutorial :doc:`../Understanding-ROS2-Services/Understanding-"
"ROS2-Services`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:8
#: 86a447b22ec446599ee1b11d6e5069dc
msgid "Using ``rqt_console`` to view logs"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:10
#: 12f82b01f032492b84b24a6dfad21b85
msgid ""
"**Goal:** Get to know ``rqt_console``, a tool for introspecting log "
"messages."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:23
#: 5cbc45acdf68430596b26f41b0cfd961
msgid ""
"``rqt_console`` is a GUI tool used to introspect log messages in ROS 2. "
"Typically, log messages show up in your terminal. With ``rqt_console``, "
"you can collect those messages over time, view them closely and in a more"
" organized manner, filter them, save them and even reload the saved files"
" to introspect at a different time."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:27
#: d4ad66b2484243d68fef83fc5fe0f2d3
msgid ""
"Nodes use logs to output messages concerning events and status in a "
"variety of ways. Their content is usually informational, for the sake of "
"the user."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:33
#: 7ae5be0160054a7d90f34e829800b51e
msgid ""
"You will need :doc:`rqt_console and turtlesim <../Introducing-Turtlesim"
"/Introducing-Turtlesim>` installed."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:44
#: ab9fa9c7e7934e4f927b7c7e76201c76
msgid "Start ``rqt_console`` in a new terminal with the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:50
#: 8daf61414dac46e5a77083f03f868bf3
msgid "The ``rqt_console`` window will open:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:54
#: f44a9911e7e84ec2aff2bf0e3752ce39
msgid ""
"The first section of the console is where log messages from your system "
"will display."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:56
#: b5d5ea7982794ecfa09d5b8b5ce77ff4
msgid ""
"In the middle you have the option to filter messages by excluding "
"severity levels. You can also add more exclusion filters using the plus-"
"sign button to the right."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:59
#: 8e60dbe882974bcfab07c14c33892a8e
msgid ""
"The bottom section is for highlighting messages that include a string you"
" input. You can add more filters to this section as well."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:62
#: 5de9cf0984e749b392c4ee5d3e41d0bc
msgid "Now start ``turtlesim`` in a new terminal with the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:69
#: c7b44f9519ae4e07ab69be501901dd90
msgid "2 Messages on rqt_console"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:71
#: 48ef319e370f41a296c5d969873057d0
msgid ""
"To produce log messages for ``rqt_console`` to display, let's have the "
"turtle run into the wall. In a new terminal, enter the ``ros2 topic pub``"
" command (discussed in detail in the :doc:`topics tutorial "
"<../Understanding-ROS2-Topics/Understanding-ROS2-Topics>`) below:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:78
#: c0a46acdec984082a6dad8ea4d9c2be9
msgid ""
"Since the above command is publishing the topic at a steady rate, the "
"turtle is continuously running into the wall. In ``rqt_console`` you will"
" see the same message with the ``Warn`` severity level displayed over and"
" over, like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:83
#: c02f4c75c73d4c66b8428f658ebb2459
msgid ""
"Press ``Ctrl+C`` in the terminal where you ran the ``ros2 topic pub`` "
"command to stop your turtle from running into the wall."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:86
#: 50becfcfac0a4b8898b7718a17c78eaf
msgid "3 Logger levels"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:88
#: fdd530bea80c4ba3aeca60d97bc016cd
msgid "ROS 2's logger levels are ordered by severity:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:98
#: 60ae0d654d2846389fa7cc12e9d81f2f
msgid ""
"There is no exact standard for what each level indicates, but it's safe "
"to assume that:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:100
#: 8189fc3ab9974b29972401515bf9f624
msgid ""
"``Fatal`` messages indicate the system is going to terminate to try to "
"protect itself from detriment."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:101
#: 5addb8632a654648adc34c15d403daad
msgid ""
"``Error`` messages indicate significant issues that won't necessarily "
"damage the system, but are preventing it from functioning properly."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:102
#: 1a3880771d1a4165b28269f9c21b9521
msgid ""
"``Warn`` messages indicate unexpected activity or non-ideal results that "
"might represent a deeper issue, but don't harm functionality outright."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:103
#: 030cd1c2071f4033b9b80143d6b80cf7
msgid ""
"``Info`` messages indicate event and status updates that serve as a "
"visual verification that the system is running as expected."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:104
#: c9ea12a842fe46868cedad86f98d92df
msgid ""
"``Debug`` messages detail the entire step-by-step process of the system "
"execution."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:106
#: 02315c84919f4fd5ab2bd8b44fbc433a
msgid ""
"The default level is ``Info``. You will only see messages of the default "
"severity level and more-severe levels."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:109
#: ece4f83006d247fdad265b4df9d9d84e
msgid ""
"Normally, only ``Debug`` messages are hidden because they're the only "
"level less severe than ``Info``. For example, if you set the default "
"level to ``Warn``, you would only see messages of severity ``Warn``, "
"``Error``, and ``Fatal``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:113
#: 3f3e38c49b2843f7b0eadef599df8b74
msgid "3.1 Set the default logger level"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:115
#: 1aaa86d678e14039b87cbd1a8717130a
msgid ""
"You can set the default logger level when you first run the "
"``/turtlesim`` node using remapping. Enter the following command in your "
"terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:122
#: 3355a263f46b4219a8a28d6ed92be02d
msgid ""
"Now you won't see the initial ``Info`` level messages that came up in the"
" console last time you started ``turtlesim``. That's because ``Info`` "
"messages are lower priority than the new default severity, ``Warn``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:128
#: cef915b760f543a6994d49f7c0c6f1b4
msgid ""
"``rqt_console`` can be very helpful if you need to closely examine the "
"log messages from your system. You might want to examine log messages for"
" any number of reasons, usually to find out where something went wrong "
"and the series of events leading up to that."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.rst:134
#: ccf73e4bb5a04d7b96c1a4c1473e0263
msgid ""
"The next tutorial will teach you about starting multiple nodes at once "
"with :doc:`ROS 2 Launch <../Launching-Multiple-Nodes/Launching-Multiple-"
"Nodes>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries.rst:2
#: 359fcbe99bda4be89a1ffcc71fcdbe54
msgid "Beginner: Client libraries"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:9
#: 2a489191685b4c29bb771fe76b71cba2
msgid "Using ``colcon`` to build packages"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:15
#: 61abac996fea468da5627f77cf9acb49
msgid "**Goal:** Build a ROS 2 workspace with ``colcon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:21
#: 316209091aeb4b91b84b3839708f85db
msgid ""
"This is a brief tutorial on how to create and build a ROS 2 workspace "
"with ``colcon``. It is a practical tutorial and not designed to replace "
"the core documentation."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:27
#: 42daeb57e9c84505ac11578a0519991c
msgid ""
"``colcon`` is an iteration on the ROS build tools ``catkin_make``, "
"``catkin_make_isolated``, ``catkin_tools`` and ``ament_tools``. For more "
"information on the design of colcon see `this document "
"<https://design.ros2.org/articles/build_tool.html>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:30
#: af762b73304e4f319c6dc4d6df463eab
msgid ""
"The source code can be found in the `colcon GitHub organization "
"<https://github.com/colcon>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:36
#: d44124484676430b9ad67ee36b0210b8
msgid "Install colcon"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:60
#: 341454b5213a4aae96d6de1bd3c09957
msgid "Install ROS 2"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:62
#: a55c0ecc3f1a4237aa8eb479fef37018
msgid "To build the samples, you will need to install ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:64
#: 4390a9e4ebd74224b9cd24b09405a13f
msgid "Follow the :doc:`installation instructions <../../Installation>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:66
#: 1fe892caae77494bb5688008f9b62d39
msgid ""
"If installing from Debian packages, this tutorial requires the "
":ref:`desktop installation <linux-install-debians-install-"
"ros-2-packages>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:69
#: 217da7ef0f5a48f7a19c0dd75fe381a5
msgid "Basics"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:71
#: ec81569a6dbd45629c0133849979a62c
msgid ""
"A ROS workspace is a directory with a particular structure. Commonly "
"there is a ``src`` subdirectory. Inside that subdirectory is where the "
"source code of ROS packages will be located. Typically the directory "
"starts otherwise empty."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:76
#: 856bcd1034f848dda788e08ece2e6c3c
msgid ""
"colcon does out of source builds. By default it will create the following"
" directories as peers of the ``src`` directory:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:79
#: 364902a73fd3414dacb85d70cdaab8b6
msgid ""
"The ``build`` directory will be where intermediate files are stored. For "
"each package a subfolder will be created in which e.g. CMake is being "
"invoked."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:81
#: a0add110d87c44ed89aaa5551740075b
msgid ""
"The ``install`` directory is where each package will be installed to. By "
"default each package will be installed into a separate subdirectory."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:83
#: cd8025da84154bbdaa3fe65c0879d849
msgid ""
"The ``log`` directory contains various logging information about each "
"colcon invocation."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:85
#: f27d37f8addc4590937ef946142738a0
msgid "Compared to catkin there is no ``devel`` directory."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:88
#: 165713de310f4bb18aea4d70be68e3a4
msgid "Create a workspace"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:90
#: ecee3bca8f284063b59f82ca0bb1ac65
msgid "First, create a directory (``ros2_ws``) to contain our workspace:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:115
#: 7a958a8a42cd4d92b8b577cdcfba75a7
msgid "At this point the workspace contains a single empty directory ``src``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:125
#: 32338f2398d846bcbfe4eb8be8eef672
msgid "Add some sources"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:127
#: 983edb4ac8894d72a9552619123e17ee
msgid ""
"Let's clone the `examples <https://github.com/ros2/examples>`__ "
"repository into the ``src`` directory of the workspace:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:133
#: 7a07865d234747668f28bd1e82c5099d
msgid "Now the workspace should have the source code to the ROS 2 examples:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:149
#: 4ea85b30115e4c58b42850713c7efeca
msgid "Source an underlay"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:151
#: 7597ab52a1a442419de074fc8628ed9a
msgid ""
"It is important that we have sourced the environment for an existing ROS "
"2 installation that will provide our workspace with the necessary build "
"dependencies for the example packages. This is achieved by sourcing the "
"setup script provided by a binary installation or a source installation, "
"ie. another colcon workspace (see :doc:`Installation "
"<../../Installation>`). We call this environment an **underlay**."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:155
#: e5b493b82a4e4140a60784504230663e
msgid ""
"Our workspace, ``ros2_ws``, will be an **overlay** on top of the existing"
" ROS 2 installation. In general, it is recommended to use an overlay when"
" you plan to iterate on a small number of packages, rather than putting "
"all of your packages into the same workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:159
#: e0a3913c037443a4a1a146cdf580184d
msgid "Build the workspace"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:163
#: 08653029e8924570acfb6c36dd8e045f
msgid ""
"To build packages on Windows you need to be in a Visual Studio "
"environment, see :ref:`Building the ROS 2 Code <windows-dev-build-ros2>` "
"for more details."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:165
#: 340c62a76ccd44dc81b55d76b5cad097
msgid ""
"In the root of the workspace, run ``colcon build``. Since build types "
"such as ``ament_cmake`` do not support the concept of the ``devel`` space"
" and require the package to be installed, colcon supports the option "
"``--symlink-install``. This allows the installed files to be changed by "
"changing the files in the ``source`` space (e.g. Python files or other "
"non-compiled resources) for faster iteration."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:189
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:206
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:302
#: 2c69372078ca47bb8750b349e4232c91 87b94306aa33484e89312596ec4f16c1
#: 9fbb58dad8e546d4b606b04eecb3e525
msgid ""
"Windows doesn't allow long paths, so ``merge-install`` will combine all "
"the paths into the ``install`` directory."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:191
#: 1ad68f52d26542c5bb8d4d7be5890e46
msgid ""
"After the build is finished, we should see the ``build``, ``install``, "
"and ``log`` directories:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:206
#: 7f90b85c299b4ee8929f2ec333903e44
msgid "Run tests"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:208
#: a74e304619774b62a1a10c6b9d802773
msgid "To run tests for the packages we just built, run the following:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:226
#: 3e6e365ef23e4de4ab138d27d2f75071
msgid ""
"Remember to use a ``x64 Native Tools Command Prompt for VS 2019`` for "
"executing the following command, as we are going to build a workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:232
#: 9160b414c91d462faf56067290c0b267
msgid ""
"You also need to specify ``--merge-install`` here since we used it for "
"building above."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:237
#: e9dbeba5c6ef48139ca23810aca77b03
msgid "Source the environment"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:239
#: 2f6388c5969646c38d096fe02324478d
msgid ""
"When colcon has completed building successfully, the output will be in "
"the ``install`` directory. Before you can use any of the installed "
"executables or libraries, you will need to add them to your path and "
"library paths. colcon will have generated bash/bat files in the "
"``install`` directory to help set up the environment. These files will "
"add all of the required elements to your path and library paths as well "
"as provide any bash or shell commands exported by packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:264
#: e5b4cc46d568450b9baf5d42194fe787
msgid "Or with Powershell:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:271
#: dd8b81dadd234b1aaf0f77678e4d6168
msgid "Try a demo"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:273
#: 5c5f9c157c94429bb0cdc0f8bb08947b
msgid ""
"With the environment sourced, we can run executables built by colcon. "
"Let's run a subscriber node from the examples:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:280
#: fb1882220e37401a8f723ea3b68347c4
msgid ""
"In another terminal, let's run a publisher node (don't forget to source "
"the setup script):"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:286
#: 8e171b059b4248a483b894941312ea71
msgid ""
"You should see messages from the publisher and subscriber with numbers "
"incrementing."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:289
#: ad03e835c725434cbb1734222c06ceea
msgid "Create your own package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:291
#: 9f9e3c301c294cce96b22f25f87e2b8a
msgid ""
"colcon uses the ``package.xml`` specification defined in `REP 149 "
"<https://www.ros.org/reps/rep-0149.html>`__ (`format 2 "
"<https://www.ros.org/reps/rep-0140.html>`__ is also supported)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:293
#: 110fe74bd9a74215b6dd618194077e12
msgid ""
"colcon supports multiple build types. The recommended build types are "
"``ament_cmake`` and ``ament_python``. Also supported are pure ``cmake`` "
"packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:297
#: a56a786b35054fe094df3fb86ad19e8a
msgid ""
"An example of an ``ament_python`` build is the `ament_index_python "
"package "
"<https://github.com/ament/ament_index/tree/{REPOS_FILE_BRANCH}/ament_index_python>`__"
" , where the setup.py is the primary entry point for building."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:299
#: 1055f2c4bf5b4a2da9081c6e234bd40b
msgid ""
"A package such as `demo_nodes_cpp "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/demo_nodes_cpp>`__"
" uses the ``ament_cmake`` build type, and uses CMake as the build tool."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:301
#: c13b88db7b644ff5a2157ec9b30f03de
msgid ""
"For convenience, you can use the tool ``ros2 pkg create`` to create a new"
" package based on a template."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:303
#: c81af5bdff154c09bb07f63374628807
msgid "For ``catkin`` users, this is the equivalent of ``catkin_create_package``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:306
#: 6b441c28e96c4fc8927a45563f13a862
msgid "Setup ``colcon_cd``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:308
#: 51348adab2dd41e29da7b6b7f01f02d4
msgid ""
"The command ``colcon_cd`` allows you to quickly change the current "
"working directory of your shell to the directory of a package. As an "
"example ``colcon_cd some_ros_package`` would quickly bring you to the "
"directory ``~/ros2_ws/src/some_ros_package``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:329
#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:355
#: c21c892f310b45abb075d61b1b855193 d849f09c3d9b4eabb0ce1411e30f0e3c
msgid "Not yet available"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:331
#: f8ec9d3454494a178fad27f7814f704c
msgid ""
"Depending on the way you installed ``colcon_cd`` and where your workspace"
" is, the instructions above may vary, please refer to `the documentation "
"<https://colcon.readthedocs.io/en/released/user/installation.html#quick-"
"directory-changes>`__ for more details. To undo this in Linux and macOS, "
"locate your system's shell startup script and remove the appended source "
"and export commands."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:335
#: 4e0cf906d5f34ad1957c2078fcb6b442
msgid "Setup ``colcon`` tab completion"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:337
#: de1bb70a2c4a43a8964d698c404383da
msgid ""
"The command ``colcon`` `supports command completion "
"<https://colcon.readthedocs.io/en/released/user/installation.html#enable-"
"completion>`__ for bash and bash-like shells if the ``colcon-"
"argcomplete`` package is installed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:357
#: bd923e83f8ba46ecacf939c446f750c8
msgid ""
"Depending on the way you installed ``colcon`` and where your workspace "
"is, the instructions above may vary, please refer to `the documentation "
"<https://colcon.readthedocs.io/en/released/user/installation.html>`__ for"
" more details. To undo this in Linux and macOS, locate your system's "
"shell startup script and remove the appended source command."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:361
#: 220df3e5d5874ddbadd66ce192ea0aef
msgid "Tips"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:363
#: d3bd8289b52b41de81a4f8cb1990c139
msgid ""
"If you do not want to build a specific package place an empty file named "
"``COLCON_IGNORE`` in the directory and it will not be indexed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:365
#: 7e25e90e9b7b4b3bb02a549399a56685
msgid ""
"If you want to avoid configuring and building tests in CMake packages you"
" can pass: ``--cmake-args -DBUILD_TESTING=0``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.rst:367
#: d61c2ec5717042109891b1598f98e824
msgid "If you want to run a single particular test from a package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:8
#: 20a0d879aa904e7996c679a7f4c3eda5
msgid "Creating a workspace"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:10
#: 51ceee213350465593760b3c5a086bb6
msgid ""
"**Goal:** Create a workspace and learn how to set up an overlay for "
"development and testing."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:23
#: 9a55711e9a3a433c83540e0ca58eb0d5
msgid ""
"A workspace is a directory containing ROS 2 packages. Before using ROS 2,"
" it's necessary to source your ROS 2 installation workspace in the "
"terminal you plan to work in. This makes ROS 2's packages available for "
"you to use in that terminal."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:27
#: 028fd1528f2644d7a5d607af6587b066
msgid ""
"You also have the option of sourcing an \"overlay\" - a secondary "
"workspace where you can add new packages without interfering with the "
"existing ROS 2 workspace that you're extending, or \"underlay\". Your "
"underlay must contain the dependencies of all the packages in your "
"overlay. Packages in your overlay will override packages in the underlay."
" It's also possible to have several layers of underlays and overlays, "
"with each successive overlay using the packages of its parent underlays."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:36
#: 6169dfbfee704355abdd7e2dffc22c3f
msgid ":doc:`ROS 2 installation <../../../Installation>`"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:37
#: d5e6f224beda4c85bdf39cb88d72bcc8
msgid ":doc:`colcon installation <../Colcon-Tutorial>`"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:38
#: 032ed92e1ff14a1e92c81501ec2646bd
msgid ""
"`git installation <https://git-scm.com/book/en/v2/Getting-Started-"
"Installing-Git>`__"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:39
#: 275c2c4ce71340c792dc70ac035f2672
msgid ""
":doc:`turtlesim installation <../../Beginner-CLI-Tools/Introducing-"
"Turtlesim/Introducing-Turtlesim>`"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:40
#: 8e2ea1c013bd475c9a66217fc9096261
msgid "Have :doc:`rosdep installed <../../Intermediate/Rosdep>`"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:41
#: 3e0395788a77412dadee682d67398e6e
msgid ""
"Understanding of basic terminal commands (`here's a guide for Linux "
"<http://www.ee.surrey.ac.uk/Teaching/Unix/>`__)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:42
#: 5e4522934c734ba282a0ab34805a3e61
msgid "Text editor of your choice"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:48
#: 444393da68f34b57b01a44d5db42e990
msgid "1 Source ROS 2 environment"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:50
#: 1dfe6db86185474987a929e12a92bfaf
msgid ""
"Your main ROS 2 installation will be your underlay for this tutorial. "
"(Keep in mind that an underlay does not necessarily have to be the main "
"ROS 2 installation.)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:53
#: 87a5f8f69809425f928ec334fb0fbafc
msgid ""
"Depending on how you installed ROS 2 (from source or binaries), and which"
" platform you're on, your exact source command will vary:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:71
#: 85b412527a6e420a92300dcea61df30b
msgid ""
"Remember to use a ``x64 Native Tools Command Prompt for VS 2019`` for "
"executing the following commands, as we are going to build a workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:77
#: 748fdacf1a75496abf1c85258845b212
msgid ""
"Consult the :doc:`installation guide <../../../Installation>` you "
"followed if these commands don't work for you."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:82
#: a959239fa64a45eb80a88a5419cdafa2
msgid "2 Create a new directory"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:84
#: eb8ed1380d2a4ac2aaa1b1f8feab8ad9
msgid ""
"Best practice is to create a new directory for every new workspace. The "
"name doesn't matter, but it is helpful to have it indicate the purpose of"
" the workspace. Let's choose the directory name ``ros2_ws``, for "
"\"development workspace\":"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:112
#: a6d69c9642bb4f33be8198016fed5f47
msgid ""
"Another best practice is to put any packages in your workspace into the "
"``src`` directory. The above code creates a ``src`` directory inside "
"``ros2_ws`` and then navigates into it."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:117
#: a751c878d88e449a9d951b2d6d78066a
msgid "3 Clone a sample repo"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:119
#: f4fbda4d46fe40ab8d748e172bf0464f
msgid "Ensure you're still in the ``ros2_ws/src`` directory before you clone."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:121
#: 023ea35fcb0145ae8ad95074fec18266
msgid ""
"In the rest of the beginner developer tutorials, you will create your own"
" packages, but for now you will practice putting a workspace together "
"using existing packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:123
#: c41d85f18b3f44229860d4ec64b40882
msgid ""
"If you went through the :doc:`Beginner: CLI Tools <../../Beginner-CLI-"
"Tools>` tutorials, you'll be familiar with ``turtlesim``, one of the "
"packages in `ros_tutorials <https://github.com/ros/ros_tutorials/>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:125
#: c4849ed428cf4e06bf813106a6ae4ba5
msgid ""
"A repo can have multiple branches. You need to check out the one that "
"targets your installed ROS 2 distro. When you clone this repo, add the "
"``-b`` argument followed by that branch."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:129
#: 7ff37d5f09324f2d94fa34a792efae8a
msgid "In the ``ros2_ws/src`` directory, run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:135
#: ba096305b7ad4204b6edfaba53187c51
msgid ""
"Now ``ros_tutorials`` is cloned in your workspace.  The ``ros_tutorials``"
" repository contains the ``turtlesim`` package, which we'll use in the "
"rest of this tutorial.  The other packages in this repository are not "
"built because they contain a ``COLCON_IGNORE`` file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:137
#: 99ebdcf26f4845cfa1a693f28e796199
msgid ""
"So far you have populated your workspace with a sample package, but it "
"isn't a fully-functional workspace yet. You need to resolve the "
"dependencies first and then build the workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:142
#: 463652d673754586974b65bb93eac7c2
msgid "4 Resolve dependencies"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:144
#: e1fa38516abe4a22ac01ff78d463cfb7
msgid ""
"Before building the workspace, you need to resolve the package "
"dependencies. You may have all the dependencies already, but best "
"practice is to check for dependencies every time you clone. You wouldn't "
"want a build to fail after a long wait only to realize that you have "
"missing dependencies."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:148
#: fc45dc387789497994764e7f9a9c847d
msgid "From the root of your workspace (``ros2_ws``), run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:162
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:166
#: 092f7478766e4873959302ceb6dd43e2 733c954b6d6b40c4849a666d91569b97
msgid ""
"rosdep only runs on Linux, so you can skip ahead to section \"5 Build the"
" workspace with colcon\"."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:168
#: 87a9ec0b238e46c08105360ee85b0901
msgid ""
"If you installed ROS 2 on Linux from source or the \"fat\" archive, you "
"will need to use the rosdep command from their installation instructions."
" Here are the :ref:`from-source rosdep section <linux-development-setup-"
"install-dependencies-using-rosdep>` and the :ref:`\"fat\" archive rosdep "
"section <linux-install-binary-install-missing-dependencies>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:171
#: 6440995db52f4078af42c875ea93bb69
msgid "If you already have all your dependencies, the console will return:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:177
#: 764ffa26978f448793e000e104cd7510
msgid ""
"Packages declare their dependencies in the package.xml file (you will "
"learn more about packages in the next tutorial). This command walks "
"through those declarations and installs the ones that are missing. You "
"can learn more about ``rosdep`` in another tutorial (coming soon)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:182
#: e6e9f781342a4e28a9be5c549e8d8921
msgid "5 Build the workspace with colcon"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:184
#: 307b3f0b91194a91b1f74712cc2e5ac4
msgid ""
"From the root of your workspace (``ros2_ws``), you can now build your "
"packages using the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:208
#: 3e47c0cecb6b438da9203020eee1b478
msgid "The console will return the following message:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:219
#: 4e058f78c5c34d7297ca27ccf5d95a54
msgid "Other useful arguments for ``colcon build``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:221
#: 9cd4920419ad4a3f8458e5984f5b2e56
msgid ""
"``--packages-up-to`` builds the package you want, plus all its "
"dependencies, but not the whole workspace (saves time)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:222
#: 09134e0997ca420fa50b41292612a314
msgid ""
"``--symlink-install`` saves you from having to rebuild every time you "
"tweak python scripts"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:223
#: a91ec9b13268463f914d09461e4318b4
msgid ""
"``--event-handlers console_direct+`` shows console output while building "
"(can otherwise be found in the ``log`` directory)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:225
#: 2308b8b4cbfe495490a3382159ff031a
msgid ""
"Once the build is finished, enter ``ls`` in the workspace root "
"(``~/ros2_ws``) and you will see that colcon has created new directories:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:231
#: a0df5f073c094271b73a5343f6306e7c
msgid ""
"The ``install`` directory is where your workspace's setup files are, "
"which you can use to source your overlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:235
#: a7b7483ff1dd45359ef21f6496b248fd
msgid "6 Source the overlay"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:237
#: 7e35b3fb2b644c67b345efa97c84c346
msgid ""
"Before sourcing the overlay, it is very important that you open a new "
"terminal, separate from the one where you built the workspace. Sourcing "
"an overlay in the same terminal where you built, or likewise building "
"where an overlay is sourced, may create complex issues."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:240
#: 8b5eed224ab648baacd67d78b795370f
msgid ""
"In the new terminal, source your main ROS 2 environment as the "
"\"underlay\", so you can build the overlay \"on top of\" it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:258
#: 6535659fb3aa4b988ebba263a40b3c88
msgid ""
"In this case you can use a normal command prompt, as we are not going to "
"build any workspace in this terminal."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:264
#: b3c663eb156f4f508dc76c2458bbc9ce
msgid "Go into the root of your workspace:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:286
#: 1df0c872c6ce410194d1a988b8f4a77f
msgid "In the root, source your overlay:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:310
#: 4b23022f5dab477888656f6b8d4ecf87
msgid ""
"Sourcing the ``local_setup`` of the overlay will only add the packages "
"available in the overlay to your environment. ``setup`` sources the "
"overlay as well as the underlay it was created in, allowing you to "
"utilize both workspaces."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:313
#: ec967c14216644b89bd1ca5d04b3a342
msgid ""
"So, sourcing your main ROS 2 installation's ``setup`` and then the "
"``ros2_ws`` overlay's ``local_setup``, like you just did, is the same as "
"just sourcing ``ros2_ws``'s ``setup``, because that includes the "
"environment of its underlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:316
#: 76cce0663dbd433892db7db85ef011c1
msgid "Now you can run the ``turtlesim`` package from the overlay:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:322
#: ca915d0bed3a4ea2ac0e489aa5ea6837
msgid ""
"But how can you tell that this is the overlay turtlesim running, and not "
"your main installation's turtlesim?"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:324
#: 481c3ad883954e67ba280e1ab6616182
msgid "Let's modify turtlesim in the overlay so you can see the effects:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:326
#: 47b2743c51b84dcba16714590ad13909
msgid ""
"You can modify and rebuild packages in the overlay separately from the "
"underlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:327
#: 0a678eadb0b44e9d870381ad15f80903
msgid "The overlay takes precedence over the underlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:331
#: e3d2fa1c247944f6ace2e575a57278cb
msgid "7 Modify the overlay"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:333
#: 1b87044a1bf346d8a01663a36319b534
msgid ""
"You can modify ``turtlesim`` in your overlay by editing the title bar on "
"the turtlesim window. To do this, locate the ``turtle_frame.cpp`` file in"
" ``~/ros2_ws/src/ros_tutorials/turtlesim/src``. Open ``turtle_frame.cpp``"
" with your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:337
#: b6ab7f34a2544b3b959ff2a1e784fd2c
msgid ""
"On line 52 you will see the function ``setWindowTitle(\"TurtleSim\");``. "
"Change the value ``\"TurtleSim\"`` to ``\"MyTurtleSim\"``, and save the "
"file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:340
#: e110b06197bc49b88553f03f1487c534
msgid ""
"Return to the first terminal where you ran ``colcon build`` earlier and "
"run it again."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:342
#: fd1eb47fd08941f6899e41b6e25d8f95
msgid ""
"Return to the second terminal (where the overlay is sourced) and run "
"turtlesim again:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:348
#: 30ebaf7107cb410e97d32b21e9d8a8d2
msgid ""
"You will see the title bar on the turtlesim window now says "
"\"MyTurtleSim\"."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:352
#: bcfbe9a4c5794732b30a5515b0686a29
msgid ""
"Even though your main ROS 2 environment was sourced in this terminal "
"earlier, the overlay of your ``ros2_ws`` environment takes precedence "
"over the contents of the underlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:354
#: 60e6e744a38a4827a91129e32c383647
msgid ""
"To see that your underlay is still intact, open a brand new terminal and "
"source only your ROS 2 installation. Run turtlesim again:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:363
#: 27cc8b52c1054fd28a1c1bdbe23a7105
msgid ""
"You can see that modifications in the overlay did not actually affect "
"anything in the underlay."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:368
#: 2b55a526a2e84e16aeb778e9a43aad26
msgid ""
"In this tutorial, you sourced your main ROS 2 distro install as your "
"underlay, and created an overlay by cloning and building packages in a "
"new workspace. The overlay gets prepended to the path, and takes "
"precedence over the underlay, as you saw with your modified turtlesim."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:371
#: 8a28b89b8fbc41ac822d21c0e066b17e
msgid ""
"Using overlays is recommended for working on a small number of packages, "
"so you don't have to put everything in the same workspace and rebuild a "
"huge workspace on every iteration."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-A-Workspace/Creating-A-Workspace.rst:376
#: 379cd7c3637b44c988053ac5689d104f
msgid ""
"Now that you understand the details behind creating, building and "
"sourcing your own workspace, you can learn how to :doc:`create your own "
"packages <../Creating-Your-First-ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:8
#: ac14375be32543088b65295aef14dfaf
msgid "Creating a package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:10
#: 03f312ca47ed4c15b33d6e2a50467121
msgid ""
"**Goal:** Create a new package using either CMake or Python, and run its "
"executable."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:24
#: 92678b2b9b38424ea50148086c577f7e
msgid "1 What is a ROS 2 package?"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:26
#: e275859cd65e47a2a95a978c1f728f88
msgid ""
"A package is an organizational unit for your ROS 2 code. If you want to "
"be able to install your code or share it with others, then you'll need it"
" organized in a package. With packages, you can release your ROS 2 work "
"and allow others to build and use it easily."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:30
#: 50cc4d53977a4388a2f96ff5d2663184
msgid ""
"Package creation in ROS 2 uses ament as its build system and colcon as "
"its build tool. You can create a package using either CMake or Python, "
"which are officially supported, though other build types do exist."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:34
#: 079311ba0dc1448b9eed31d2956ff8d6
msgid "2 What makes up a ROS 2 package?"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:36
#: a1b2c8df7eef4c17bf51ef67a9fcd546
msgid ""
"ROS 2 Python and CMake packages each have their own minimum required "
"contents:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:40
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:59
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:160
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:179
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:197
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:356
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:375
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:404
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:478
#: 12c706f2f2e94126ab607292823d0a29 2a27e41ce1bf44bc8d3bb3fba096b857
#: 5abee1472a7d4a66b5ba059540f8711d 6957a4f0e9ff4562af27cabd8b70822b
#: 8d1966d72f4a4481aa184ec3c77f208f abdc3c6ddfa141ada171171267272e1f
#: c5ab9b65a15c4c8b918f99e46bfefff3 c7a55c03097c40e8ad805438bb3bdeb0
#: cf74bfaf7e024eb095aaba11581a8f9b
msgid "CMake"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:42
#: c3eedd96b36d45ffb00c73b9e46e46bc
msgid ""
"``CMakeLists.txt`` file that describes how to build the code within the "
"package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:43
#: 18bc27dc3b8c48be98a3c0a7a022b613
msgid ""
"``include/<package_name>`` directory containing the public headers for "
"the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:44
#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:49
#: 4f5858bf9a294b52a00b76c348d2f4ba bf44eacdafd84c0d93d920ad473d6395
msgid "``package.xml`` file containing meta information about the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:45
#: a9cbdc32965442b980ee6f59f718a505
msgid "``src`` directory containing the source code for the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:50
#: e71f8654868c4a249c79c64564c1aeae
msgid "``resource/<package_name>`` marker file for the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:51
#: 8b4b21667aba4117a1987a298085ca26
msgid ""
"``setup.cfg`` is required when a package has executables, so ``ros2 run``"
" can find them"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:52
#: 5b85eff218e542238366ca9b450f1750
msgid "``setup.py`` containing instructions for how to install the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:53
#: 80146bceddb044999250ec0b28b23fd7
msgid ""
"``<package_name>`` - a directory with the same name as your package, used"
" by ROS 2 tools to find your package, contains ``__init__.py``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:55
#: a479a84c0ab84fb4a88a8264d25d2796
msgid "The simplest possible package may have a file structure that looks like:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:82
#: 3f41dabcbc4143df9a99298a75cbb619
msgid "3 Packages in a workspace"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:84
#: 6c4aabffafa5499884616852d6333270
msgid ""
"A single workspace can contain as many packages as you want, each in "
"their own folder. You can also have packages of different build types in "
"one workspace (CMake, Python, etc.). You cannot have nested packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:88
#: fca3a4f5461e466eb895aa0410fc6e23
msgid ""
"Best practice is to have a ``src`` folder within your workspace, and to "
"create your packages in there. This keeps the top level of the workspace "
"“clean”."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:91
#: bfc0f3fd81394a49b110537b49791391
msgid "A trivial workspace might look like:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:120
#: d8ee2f9c14364b4ab1bc8825acd7fc59
msgid ""
"You should have a ROS 2 workspace after following the instructions in the"
" :doc:`previous tutorial <./Creating-A-Workspace/Creating-A-Workspace>`. "
"You will create your package in this workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:130
#: e26916938ce64bdc9bcd116d738fc15a
msgid ""
"First, :doc:`source your ROS 2 installation <../Beginner-CLI-Tools"
"/Configuring-ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:132
#: 0d7eca9d19694c0c85919a2c8d535082
msgid ""
"Let's use the workspace you created in the :ref:`previous tutorial <new-"
"directory>`, ``ros2_ws``, for your new package."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:134
#: 75d4bcb5e873435685c7b2fbf5404d08
msgid ""
"Make sure you are in the ``src`` folder before running the package "
"creation command."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:156
#: fb8658beebf94993aabd5b4d0cfe5f64
msgid "The command syntax for creating a new package in ROS 2 is:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:172
#: 2328c37733e54ba5b44d6779bceb110c
msgid ""
"For this tutorial, you will use the optional arguments ``--node-name`` "
"and ``--license``. ``--node-name`` option creates a simple Hello World "
"type executable in the package, and ``--license`` declares the license "
"information for the package."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:175
#: 0c7ae994f26b4e8488212185698d2e06
msgid "Enter the following command in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:191
#: 74d420b20ed74252a745566a77b855de
msgid ""
"You will now have a new folder within your workspace's ``src`` directory "
"called ``my_package``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:193
#: 59bbf2f3901f4acbb7f5929ab3755962
msgid "After running the command, your terminal will return the message:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:250
#: d6b06eeaeb434a98a586082ede09bbc3
msgid "You can see the automatically generated files for the new package."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:253
#: 033b69b191df4eaebd2d06d7f39f8b3c
msgid "2 Build a package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:255
#: a9462009b29d44f99dde1ebd994c8fe4
msgid ""
"Putting packages in a workspace is especially valuable because you can "
"build many packages at once by running ``colcon build`` in the workspace "
"root. Otherwise, you would have to build each package individually."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:258
#: 95e17ddf9dee4bf2b99a573572bbb04b
msgid "Return to the root of your workspace:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:280
#: e22758d1c2f14f378c3ea10a7cfdca59
msgid "Now you can build your packages:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:304
#: a2b1daeb791e44f080dcfd55702f4720
msgid ""
"Recall from the last tutorial that you also have the ``ros_tutorials`` "
"packages in your ``ros2_ws``. You might have noticed that running "
"``colcon build`` also built the ``turtlesim`` package. That's fine when "
"you only have a few packages in your workspace, but when there are many "
"packages, ``colcon build`` can take a long time."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:308
#: eddc0abe6a26467596051894dc731a21
msgid "To build only the ``my_package`` package next time, you can run:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:315
#: e7e0072e4ed644658d94b7a1a4bf4663
msgid "3 Source the setup file"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:317
#: cc7f51bab5a346a48cec38472add931d
msgid ""
"To use your new package and executable, first open a new terminal and "
"source your main ROS 2 installation."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:319
#: e330b6aea34243399b057175f695c171
msgid ""
"Then, from inside the ``ros2_ws`` directory, run the following command to"
" source your workspace:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:341
#: 7c14a71cd14545d9ac0ff9b995b1be97
msgid ""
"Now that your workspace has been added to your path, you will be able to "
"use your new package's executables."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:344
#: e088d79bc4b7491888d4f4e6ac6354ad
msgid "4 Use the package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:346
#: 51e7ca7acde94306a75800352d24fd07
msgid ""
"To run the executable you created using the ``--node-name`` argument "
"during package creation, enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:352
#: 0372741b2f194c25a4d9d06f3c8fab2a
msgid "Which will return a message to your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:369
#: c9f40e9836d5441192f6c851afe0bc16
msgid "5 Examine package contents"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:371
#: e9775563cbde45f68483da2b17e7dac4
msgid ""
"Inside ``ros2_ws/src/my_package``, you will see the files and folders "
"that ``ros2 pkg create`` automatically generated:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:381
#: 723770a8fb7d4aeb8cf3c66e6b57569f
msgid ""
"``my_node.cpp`` is inside the ``src`` directory. This is where all your "
"custom C++ nodes will go in the future."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:390
#: 052408e930f949f68d2fac0d2ceaa405
msgid ""
"``my_node.py`` is inside the ``my_package`` directory. This is where all "
"your custom Python nodes will go in the future."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:394
#: 43dae30ab6744000b07642303fd3dee3
msgid "6 Customize package.xml"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:396
#: 51473e81e0f64cad864efe254e840d48
msgid ""
"You may have noticed in the return message after creating your package "
"that the fields ``description`` and ``license`` contain ``TODO`` notes. "
"That's because the package description and license declaration are not "
"automatically set, but are required if you ever want to release your "
"package. The ``maintainer`` field may also need to be filled in."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:400
#: 5542fb81138d49649e91bea9f83da9dc
msgid ""
"From ``ros2_ws/src/my_package``, open ``package.xml`` using your "
"preferred text editor:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:454
#: 1ff42a09d26a46dd9e230cd306903d13
msgid ""
"Input your name and email on the ``maintainer`` line if it hasn't been "
"automatically populated for you. Then, edit the ``description`` line to "
"summarize the package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:461
#: 5a778e293d1942febcc12c3e296680dc
msgid ""
"Then, update the ``license`` line. You can read more about open source "
"licenses `here <https://opensource.org/licenses/alphabetical>`__. Since "
"this package is only for practice, it's safe to use any license. We'll "
"use ``Apache License 2.0``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:470
#: d61b783315d24822af10d4cbffeb1f47
msgid "Don't forget to save once you're done editing."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:472
#: 788783aa8e434141a800a433d6fc1d81
msgid ""
"Below the license tag, you will see some tag names ending with "
"``_depend``. This is where your ``package.xml`` would list its "
"dependencies on other packages, for colcon to search for. ``my_package`` "
"is simple and doesn't have any dependencies, but you will see this space "
"being utilized in upcoming tutorials."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:480
#: ff31049d64cd491087bac2057ef96e5d
msgid "You're all done for now!"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:484
#: 3d8930d6a3ca41e5ad3ec2fb03ff3fdc
msgid ""
"The ``setup.py`` file contains the same description, maintainer and "
"license fields as ``package.xml``, so you need to set those as well. They"
" need to match exactly in both files. The version and name "
"(``package_name``) also need to match exactly, and should be "
"automatically populated in both files."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:488
#: 6aa01c3149b840329322fceed000493e
msgid "Open ``setup.py`` with your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:519
#: 79d42188a8db4cdb87c7aa92b10a5c7b
msgid ""
"Edit the ``maintainer``, ``maintainer_email``, and ``description`` lines "
"to match ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:521
#: 8e90a11c2cfc4352b60e47e07089fd6e
msgid "Don't forget to save the file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:527
#: 9e1e2632c5614e668510caf30dbfcd7e
msgid ""
"You've created a package to organize your code and make it easy to use "
"for others."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:529
#: c09e874fbf554b1191838b7409d096da
msgid ""
"Your package was automatically populated with the necessary files, and "
"then you used colcon to build it so you can use its executables in your "
"local environment."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.rst:534
#: 5786168578a24037953c81c6563e294a
msgid ""
"Next, let's add something meaningful to a package. You'll start with a "
"simple publisher/subscriber system, which you can choose to write in "
"either :doc:`C++ <./Writing-A-Simple-Cpp-Publisher-And-Subscriber>` or "
":doc:`Python <./Writing-A-Simple-Py-Publisher-And-Subscriber>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:8
#: b4a5cbecf83348fb983b052c2a729c96
msgid "Creating custom msg and srv files"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:10
#: 254342d9db3b4f2fb93dab020bd573d1
msgid ""
"**Goal:** Define custom interface files (``.msg`` and ``.srv``) and use "
"them with Python and C++ nodes."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:23
#: 3eb1c7306f4e432e8d9c5c34762d858c
msgid ""
"In previous tutorials you utilized message and service interfaces to "
"learn about :doc:`topics <../Beginner-CLI-Tools/Understanding-ROS2-Topics"
"/Understanding-ROS2-Topics>`, :doc:`services <../Beginner-CLI-Tools"
"/Understanding-ROS2-Services/Understanding-ROS2-Services>`, and simple "
"publisher/subscriber (:doc:`C++ <./Writing-A-Simple-Cpp-Publisher-And-"
"Subscriber>`/:doc:`Python<./Writing-A-Simple-Py-Publisher-And-"
"Subscriber>`) and service/client (:doc:`C++ <./Writing-A-Simple-Cpp-"
"Service-And-Client>`/:doc:`Python<./Writing-A-Simple-Py-Service-And-"
"Client>`) nodes. The interfaces you used were predefined in those cases."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:26
#: ec910b3bc0044e8da5c39ec064c30541
msgid ""
"While it's good practice to use predefined interface definitions, you "
"will probably need to define your own messages and services sometimes as "
"well. This tutorial will introduce you to the simplest method of creating"
" custom interface definitions."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:32
#: b5bd5062a0624263a6ec58c874b9a93c
msgid ""
"You should have a :doc:`ROS 2 workspace "
"<./Creating-A-Workspace/Creating-A-Workspace>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:34
#: e849e53d98234e5c84aced84e46b4dd8
msgid ""
"This tutorial also uses the packages created in the publisher/subscriber "
"(:doc:`C++ <./Writing-A-Simple-Cpp-Publisher-And-Subscriber>` and "
":doc:`Python<./Writing-A-Simple-Py-Publisher-And-Subscriber>`) and "
"service/client  (:doc:`C++ <./Writing-A-Simple-Cpp-Service-And-Client>` "
"and :doc:`Python<./Writing-A-Simple-Py-Service-And-Client>`) tutorials to"
" try out the new custom messages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:40
#: a2234c6eb2d14d5e9b885497cb772609
msgid "1 Create a new package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:42
#: 91ff7fea5ec14019a33e05cb3efd88c1
msgid ""
"For this tutorial you will be creating custom ``.msg`` and ``.srv`` files"
" in their own package, and then utilizing them in a separate package. "
"Both packages should be in the same workspace."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:45
#: 6084e5768863427586fd0d9e641cf46e
msgid ""
"Since we will use the pub/sub and service/client packages created in "
"earlier tutorials, make sure you are in the same workspace as those "
"packages (``ros2_ws/src``), and then run the following command to create "
"a new package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:51
#: cfe95fc613954b49bd1a43fe98f10e1c
msgid ""
"``tutorial_interfaces`` is the name of the new package. Note that it is, "
"and can only be, a CMake package, but this doesn't restrict in which type"
" of packages you can use your messages and services. You can create your "
"own custom interfaces in a CMake package, and then use it in a C++ or "
"Python node, which will be covered in the last section."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:55
#: 256fd25b7a624a6781ac6044f9511591
msgid ""
"The ``.msg`` and ``.srv`` files are required to be placed in directories "
"called ``msg`` and ``srv`` respectively. Create the directories in "
"``ros2_ws/src/tutorial_interfaces``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:63
#: 8adf474ebc6745de8e7bae998a78e9a8
msgid "2 Create custom definitions"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:66
#: e0acc669fa5b4c129bd99d9339450d51
msgid "2.1 msg definition"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:68
#: a9ca52b52b084f5289434bfcd8679bdb
msgid ""
"In the ``tutorial_interfaces/msg`` directory you just created, make a new"
" file called ``Num.msg`` with one line of code declaring its data "
"structure:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:74
#: e7ade32de4da4b0daca18b1f4da9174f
msgid ""
"This is a custom message that transfers a single 64-bit integer called "
"``num``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:76
#: ba8d0a0973d14ae7b94c4de6aa63a167
msgid ""
"Also in the ``tutorial_interfaces/msg`` directory you just created, make "
"a new file called ``Sphere.msg`` with the following content:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:83
#: b6521a5451fb49e9a4ea24cc19bd34ba
msgid ""
"This custom message uses a message from another message package "
"(``geometry_msgs/Point`` in this case)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:86
#: eb8b35ef99bb43e39b045a2aaf672533
msgid "2.2 srv definition"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:88
#: 0b923048e17548f1be6d46740dc33bd2
msgid ""
"Back in the ``tutorial_interfaces/srv`` directory you just created, make "
"a new file called ``AddThreeInts.srv`` with the following request and "
"response structure:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:98
#: 2ed92da569cd4e82b0d2044876d7a60b
msgid ""
"This is your custom service that requests three integers named ``a``, "
"``b``, and ``c``, and responds with an integer called ``sum``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:101
#: 5ca2f39fa8604f4b91d87512409f3026
msgid "3 ``CMakeLists.txt``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:103
#: 096ec7d2331d484c8bad7a729d4984a2
msgid ""
"To convert the interfaces you defined into language-specific code (like "
"C++ and Python) so that they can be used in those languages, add the "
"following lines to ``CMakeLists.txt``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:119
#: 8233ef23011a457fa84d9d0fe81499e8
msgid ""
"The first argument (library name) in the rosidl_generate_interfaces must "
"match ${PROJECT_NAME} (see "
"https://github.com/ros2/rosidl/issues/441#issuecomment-591025515)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:122
#: acd4e612ceab42ff8a9de0376a5015ea
msgid "4 ``package.xml``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:124
#: 553597cdef0b4279b6271ce340c0c233
msgid ""
"Because the interfaces rely on ``rosidl_default_generators`` for "
"generating language-specific code, you need to declare a build tool "
"dependency on it. ``rosidl_default_runtime`` is a runtime or execution-"
"stage dependency, needed to be able to use the interfaces later. The "
"``rosidl_interface_packages`` is the name of the dependency group that "
"your package, ``tutorial_interfaces``, should be associated with, "
"declared using the ``<member_of_group>`` tag."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:128
#: c371f54a59d24bbeb07d038d6b17e183
msgid ""
"Add the following lines within the ``<package>`` element of "
"``package.xml``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:138
#: 2ae96cceb7584b8aa15e16b31264736a
msgid "5 Build the ``tutorial_interfaces`` package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:140
#: e32b7d607ec44b03b564198129be325b
msgid ""
"Now that all the parts of your custom interfaces package are in place, "
"you can build the package. In the root of your workspace (``~/ros2_ws``),"
" run the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:163
#: ef53d03dd24645a482428fe2b4e1c83b
msgid "Now the interfaces will be discoverable by other ROS 2 packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:166
#: 73ad56954908420d8fb0c5ce007d9bf4
msgid "6 Confirm msg and srv creation"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:168
#: 2e3ba97648734bf9ac8cf72d75f613f6
msgid ""
"In a new terminal, run the following command from within your workspace "
"(``ros2_ws``) to source it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:190
#: 0dd273a1ebb14376b0d3ae004b8f379e
msgid ""
"Now you can confirm that your interface creation worked by using the "
"``ros2 interface show`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:196
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:208
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:224
#: 8164f844e505447a903d58b1a55b82f8 b2f54c364d4845c886c9f57ee71581fb
#: bce81aae16fb4cc8b43c9cb23f3222b0
msgid "should return:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:202
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:218
#: 8b65ebff9b074512a8b7fd2942e3eea7 f2665458c3ad4cfd9cfd6203c309673d
msgid "And"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:235
#: 4eca67c4f2d646e5b9128c82b1da650f
msgid "7 Test the new interfaces"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:237
#: 69b1fb0141f3401898f707af2fc0f903
msgid ""
"For this step you can use the packages you created in previous tutorials."
" A few simple modifications to the nodes, ``CMakeLists.txt`` and "
"``package.xml`` files will allow you to use your new interfaces."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:241
#: bcb9bb0cd6104e19aacc7f4894195fc4
msgid "7.1 Testing ``Num.msg`` with pub/sub"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:243
#: c322bae15e694b9fa75c6bbc0dfa7876
msgid ""
"With a few modifications to the publisher/subscriber package created in a"
" previous tutorial (:doc:`C++ <./Writing-A-Simple-Cpp-Publisher-And-"
"Subscriber>` or :doc:`Python <./Writing-A-Simple-Py-Publisher-And-"
"Subscriber>`), you can see ``Num.msg`` in action. Since you'll be "
"changing the standard string msg to a numerical one, the output will be "
"slightly different."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:246
#: 828fe766cdf44cc4b535a7fea5fdeaff
msgid "**Publisher**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:336
#: 0b3184dc6c7e4d65a9c60e70656b5c6c
msgid "**Subscriber**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:418
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:716
#: 3d40d902a74f47c09432b4b7680cbb26 44f57b214d0a4034b78865b0d52af218
msgid "**CMakeLists.txt**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:420
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:718
#: 79b76b96e1a64d71ada733162ba5144a 8a514497276b40218e9cd850e82b2865
msgid "Add the following lines (C++ only):"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:444
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:744
#: 752cf1da3c0c4643909ae9f8d7061cc3 c3c51f6ed0844be08fe996c917eae271
msgid "**package.xml**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:446
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:746
#: 5bdbf4083edf4ac89b06eed6336647c4 ac4622085fa84c3188b1f5a4d1d91a14
msgid "Add the following line:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:463
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:763
#: bc2c95f423cc46a2bc3f18ff2378c36b e78dff9186f24228956250b20d8c81b1
msgid ""
"After making the above edits and saving all the changes, build the "
"package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:469
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:483
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:769
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:784
#: 56a7629421154f22af2567d968df45be 7ae1f48e612f482b9afea3a56fa34bfc
#: c829a0ea4c3d43578900cd50b442aa06 d81b2ee2b9d54727b309da98063e8e16
msgid "On Linux/macOS:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:475
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:489
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:775
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:790
#: 392ef60051f4470a9a64f2fcb86998a1 565f5779a94745a78eee4c9b25a3135c
#: 664a46a243524c77bdde2109fea81fa0 c966bd5de6f8437fa86000e3aed59668
msgid "On Windows:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:495
#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:796
#: b9b5c5540568406891c9c84388500970 d5fa311fa66f4ea5a28d73d78e1e5019
msgid "Then open two new terminals, source ``ros2_ws`` in each, and run:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:519
#: efaab95eaa9c45faab4a938f0dac29d3
msgid ""
"Since ``Num.msg`` relays only an integer, the talker should only be "
"publishing integer values, as opposed to the string it published "
"previously:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:529
#: 0183d171ecbd4a67850075f1cf31a857
msgid "7.2 Testing ``AddThreeInts.srv`` with service/client"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:531
#: 250d303552944a179dad2dd03e795261
msgid ""
"With a few modifications to the service/client package created in a "
"previous tutorial (:doc:`C++ <./Writing-A-Simple-Cpp-Service-And-Client>`"
" or :doc:`Python <./Writing-A-Simple-Py-Service-And-Client>`), you can "
"see ``AddThreeInts.srv`` in action. Since you'll be changing the original"
" two integer request srv to a three integer request srv, the output will "
"be slightly different."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:534
#: 2947de3d6d5845e2b46c90f100f5fcf5
msgid "**Service**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:605
#: 87d50e33a1744a4b8aa403b0e1966e96
msgid "**Client**"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:824
#: 143c430260af4e14bb82b3501b302d7a
msgid ""
"In this tutorial, you learned how to create custom interfaces in their "
"own package and how to utilize those interfaces in other packages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:826
#: 76c343060088433486bc664b906ce1f3
msgid ""
"This tutorial only scratches the surface about defining custom "
"interfaces. You can learn more about it in :doc:`About ROS 2 interfaces "
"<../../Concepts/Basic/About-Interfaces>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.rst:832
#: a71a064cd4d244c7b696da0130cf923d
msgid ""
"The :doc:`next tutorial <./Single-Package-Define-And-Use-Interface>` "
"covers more ways to use interfaces in ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:8
#: 1defd59387744a3286a53ae693035fb2
msgid "Using ``ros2doctor`` to identify issues"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:10
#: 774d2e32c3dd4aa5b9bd49b5efb16c19
msgid ""
"**Goal:** Identify issues in your ROS 2 setup using the ``ros2doctor`` "
"tool."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:23
#: 2a65d36ea28a446fbd83a7d435c2b39c
msgid ""
"When your ROS 2 setup is not running as expected, you can check its "
"settings with the ``ros2doctor`` tool."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:25
#: d2cbbecbed344e22b720b6aac9efa62f
msgid ""
"``ros2doctor`` checks all aspects of ROS 2, including platform, version, "
"network, environment, running systems and more, and warns you about "
"possible errors and reasons for issues."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:30
#: ddad5d8a3f5d4b1fbbe628eb4b32c8df
msgid ""
"``ros2doctor`` is part of the ``ros2cli`` package. As long as you have "
"``ros2cli`` installed (which any normal install should have), you will be"
" able to use ``ros2doctor``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:33
#: 685894c3b5394a3fb2fe584c8e77b09a
msgid ""
"This tutorial uses :doc:`turtlesim <../Beginner-CLI-Tools/Introducing-"
"Turtlesim/Introducing-Turtlesim>` to illustrate some of the examples."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:39
#: ae41f6f65e714ec98619137f5e47405e
msgid "1 Check your setup"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:41
#: aec5f6d1312e40df8c1f020fa8ce1fd8
msgid ""
"Let's examine your general ROS 2 setup as a whole with ``ros2doctor``. "
"First, source ROS 2 in a new terminal, then enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:48
#: 3a0b4e9f4b4b4fa2bd0d8572b7803375
msgid ""
"This will conduct checks over all your setup modules and return warnings "
"and errors."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:50
#: 3bafffc2ef624b9ca058cd83eb528643
msgid ""
"If your ROS 2 setup is in perfect shape, you'll see a message similar to "
"this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:56
#: 23839b3b4c4f40acbac36650b44d1af7
msgid ""
"However, it's not unusual to have a few warnings returned. A "
"``UserWarning`` doesn't mean your setup is unusable; it's more likely "
"just an indication that something is configured in a way that's not "
"ideal."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:59
#: b44f2472d9b4458580b4ea4e9e46b716
msgid "If you do receive a warning, it will look something like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:65
#: 9952a7b7219d4ade97d78fa5adfdea4e
msgid ""
"For example, ``ros2doctor`` will find this warning if you're using an "
"unstable ROS 2 distribution:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:71
#: 08c109846e0c41de97a81a6419dfa589
msgid ""
"If ``ros2doctor`` only finds warnings in your system, you will still "
"receive the ``All <n> checks passed`` message."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:73
#: abcf33ed4a4248bdbf5b860c2287a56b
msgid ""
"Most checks are categorized as warnings as opposed to errors. It's mostly"
" up to you, the user, to determine the importance of the feedback "
"``ros2doctor`` returns. If it does find a rare error in your setup, "
"indicated by ``UserWarning: ERROR:``, the check is considered failed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:77
#: 3fba0a300b0a4fc1821663727a2f85ae
msgid "You will see a message similar to the following list of issue feedback:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:85
#: 50d45941d7de45a88c1049cd756b0169
msgid ""
"An error indicates the system is missing important settings or functions "
"that are crucial to ROS 2. Errors should be addressed to ensure the "
"system functions properly."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:89
#: cc588fc25e694212b774e252a4c122a6
msgid "2 Check a system"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:91
#: 6878563b2c554fce996a6d1a510de67a
msgid ""
"You can also examine a running ROS 2 system to identify possible causes "
"for issues. To see ``ros2doctor`` working on a running system, let's run "
"turtlesim, which has nodes actively communicating with each other."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:94
#: d6e77f25ae10439593515422e07aa956
msgid ""
"Start up the system by opening a new terminal, sourcing ROS 2, and "
"entering the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:100
#: e742a0daa31f4b4ca09647aebac223a7
msgid "Open another terminal and source ROS 2 to run the teleop controls:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:106
#: 83124a17c7714c6b842edca16879148f
msgid ""
"Now run ``ros2doctor`` again in its own terminal. You will see the "
"warnings and errors you had the last time you ran ``ros2doctor`` on your "
"setup if you had any. Following those will be a couple new warnings "
"relating to the system itself:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:115
#: 1aa34c90d61943b08874ed42c87927ae
msgid ""
"It seems that the ``/turtlesim`` node publishes data to two topics that "
"aren't being subscribed to, and ``ros2doctor`` thinks this could possibly"
" lead to issues."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:117
#: c7b24613d4f747a483b7fa8e77f4646c
msgid ""
"If you run commands to echo the ``/color_sensor`` and ``/pose`` topics, "
"those warnings will disappear because the publishers will have "
"subscribers."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:119
#: e1d9b1303e4d4478bd97b3ae35511e3e
msgid ""
"You can try this by opening two new terminals while turtlesim is still "
"running, sourcing ROS 2 in each, and running each of the following "
"commands in their own terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:129
#: 6642007d2647441fad1d448de371dba0
msgid ""
"Then run ``ros2doctor`` in its terminal again. The ``publisher without "
"subscriber`` warnings will be gone. (Make sure to enter ``Ctrl+C`` in the"
" terminals where you ran ``echo``)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:133
#: ecb4b92e5ea542ceaf2ff30d870593fa
msgid ""
"Now try exiting either the turtlesim window or quitting the teleop and "
"running ``ros2doctor`` again. You'll see more warnings indicating "
"``publisher without subscriber`` or ``subscriber without publisher`` for "
"different topics, now that one node in the system isn't available."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:136
#: e31ea9c92d6d458e943886ccaff047a8
msgid ""
"In a complex system with many nodes, ``ros2doctor`` would be invaluable "
"for identifying possible reasons for communication issues."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:139
#: 468fe4b028a945fe8732f1f7e481e308
msgid "3 Get a full report"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:141
#: ae0b03c17f904ed09eab868a7540ade0
msgid ""
"While ``ros2doctor`` will let you know warnings about your network, "
"system, etc., running it with the ``--report`` argument will give you "
"much more detail to help you analyze issues."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:143
#: f2d2f9e8fcf6483098a3108a8402d4f9
msgid ""
"You might want to use ``--report`` if you get a warning about your "
"network setup and want to find out exactly what part of your "
"configuration is causing the warning."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:145
#: a3bcd0e55caa4225a389760ec0d059b5
msgid ""
"It's also very helpful when you need to open a support ticket to get help"
" with ROS 2. You can copy and paste the relevant parts of your report "
"into the ticket so the people helping you can better understand your "
"environment and provide better assistance."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:148
#: 5c5c11095e2b4dba9fc09609d4298860
msgid "To get a full report, enter the following command in the terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:154
#: 230eb99712114ef99344f7bbdb5bc029
msgid "Which will return a list of information categorized into five groups:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:173
#: 6a1d38504b4f4290a07afb096f4e6e9c
msgid ""
"You can crosscheck the information here against the warnings you get when"
" running ``ros2 doctor``. For example, if ``ros2doctor`` returned the "
"warning (mentioned earlier) that your distribution is “not fully "
"supported or tested”, you might take a look at the ``ROS 2 INFORMATION`` "
"section of the report:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:183
#: 39932c8bef2847d09fe25333b444b572
msgid ""
"Here you can see the ``distribution status`` is ``prerelease``, which "
"explains why it's not fully supported."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:189
#: f10b3471e23f41af8f76ad5e9171ea52
msgid ""
"``ros2doctor`` will inform you of problems in your ROS 2 setup and "
"running systems. You can get a deeper look at information behind those "
"warnings by using the ``--report`` argument."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:192
#: 8a4b705cfbe2442aae947a95afe644a4
msgid ""
"Keep in mind, ``ros2doctor`` is not a debug tool; it won't help with "
"errors in your code or on the implementation side of your system."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:198
#: 6083c1d0bfe94f37bbba39477e5855e0
msgid ""
"`ros2doctor's README "
"<https://github.com/ros2/ros2cli/tree/{REPOS_FILE_BRANCH}/ros2doctor>`__ "
"will tell you more about different arguments. You might want to take a "
"look around the ``ros2doctor`` repo as well, since it's fairly beginner "
"friendly and a great place to get started with contributing."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.rst:204
#: 1a830c2af9ac4f0a97bda2caeeec6bc4
msgid "You've completed the beginner level tutorials!"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:6
#: 83cedf963ff44ed382ce737ddaefdf81
msgid "Creating and using plugins (C++)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:8
#: 20db4cc6da4e4766bcf7f6ece5eecf30
msgid "**Goal:** Learn to create and load a simple plugin using pluginlib."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:21
#: f761f16feff8480abb3b147761208794
msgid ""
"This tutorial is derived from `<http://wiki.ros.org/pluginlib>`_ and "
"`Writing and Using a Simple Plugin Tutorial "
"<http://wiki.ros.org/pluginlib/Tutorials/Writing%20and%20Using%20a%20Simple%20Plugin>`_."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:23
#: 48eaf4a826874878884cc9588a52fcf9
msgid ""
"pluginlib is a C++ library for loading and unloading plugins from within "
"a ROS package. Plugins are dynamically loadable classes that are loaded "
"from a runtime library (i.e. shared object, dynamically linked library). "
"With pluginlib, one does not have to explicitly link their application "
"against the library containing the classes -- instead pluginlib can open "
"a library containing exported classes at any point without the "
"application having any prior awareness of the library or the header file "
"containing the class definition. Plugins are useful for "
"extending/modifying application behavior without needing the application "
"source code."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:31
#: 65ee2b7e15bd49129ac4db7450424677
msgid ""
"This tutorial assumes basic C++ knowledge and that you have ``pluginlib``"
" installed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:41
#: 83fdf854b22b47b9874bb20a6165652c
msgid ""
"In this tutorial, you will create two new packages, one that defines the "
"base class, and another that provides the plugins. The base class will "
"define a generic polygon class, and then our plugins will define specific"
" shapes."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:45
#: 2edb41b180d746bba7383be13639e144
msgid "1 Create the Base Class Package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:47
#: ed2f23ace31747f2bcdd518eb1ec10d5
msgid ""
"Create a new empty package in your ``ros2_ws/src`` folder with the "
"following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:54
#: 768c5b8ba98d4e4a8bfa414ad26aafbf
msgid ""
"Open your favorite editor, edit "
"``ros2_ws/src/polygon_base/include/polygon_base/regular_polygon.hpp``, "
"and paste the following inside of it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:77
#: 9bcac6e1acdb4f4fbf3f46aaa6cac634
msgid ""
"This code above should be pretty self-explanatory... we're creating an "
"abstract class called ``RegularPolygon``. One thing to notice is the "
"presence of the initialize method. With ``pluginlib``, a constructor "
"without parameters is required, so if any parameters to the class are "
"needed, we use the initialize method to pass them to the object."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:81
#: 34b98e3c79484f5db38b003100b6d9ad
msgid ""
"We need to make this header available to other classes, so open "
"``ros2_ws/src/polygon_base/CMakeLists.txt`` for editing. Add the "
"following lines after the ``ament_target_dependencies`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:91
#: 6c472a923e5541719b2996a61ccb62b3
msgid "And add this command before the ``ament_package`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:99
#: cf5b409e03e24bcbaea9471e280ae88c
msgid "We will return to this package later to write our test node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:102
#: 15dc4fc6a8144531853b9d64095f8436
msgid "2 Create the Plugin Package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:104
#: dca4fc9f7f6244368f90e68b9fdc20d0
msgid ""
"Now we're going to write two non-virtual implementations of our abstract "
"class. Create a second empty package in your ``ros2_ws/src`` folder with "
"the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:112
#: d8c4c1d1a87a4091826e4144bbf6d1ba
msgid "2.1 Source code for the plugins"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:114
#: 4b9f0ec9b92947d6bb07749f3ffa1284
msgid ""
"Open ``ros2_ws/src/polygon_plugins/src/polygon_plugins.cpp`` for editing,"
" and paste the following inside of it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:168
#: 89541d66e9c644b4be2e1ea2c78b5b82
msgid ""
"The implementation of the Square and Triangle classes should be fairly "
"straightforward: save the side length, and use it to calculate the area. "
"The only piece that is pluginlib specific is the last three lines, which "
"invokes some magical macros that register the classes as actual plugins. "
"Let's go through the arguments to the ``PLUGINLIB_EXPORT_CLASS`` macro:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:172
#: 2bb540d8d6124748b950abbaa0dd5ec4
msgid ""
"The fully-qualified type of the plugin class, in this case, "
"``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:173
#: 586429ad4e73425083ddbd189eb77045
msgid ""
"The fully-qualified type of the base class, in this case, "
"``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:176
#: fd105acd214d4ba7af89b7c214b94dfe
msgid "2.2 Plugin Declaration XML"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:178
#: 3bde48535bc04f67a34016cd19e05006
msgid ""
"The steps above make it so that instances of our plugins can be created "
"once the library they exist in is loaded, but the plugin loader still "
"needs a way to find that library and to know what to reference within "
"that library. To this end, we'll also create an XML file that, along with"
" a special export line in the package manifest, makes all the necessary "
"information about our plugins available to the ROS toolchain."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:181
#: bae934aef6a345bc8348b7c80fe439b9
msgid ""
"Create ``ros2_ws/src/polygon_plugins/plugins.xml`` with the following "
"code:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:194
#: a4b69c7a6def4a5d9d74c7e86f63b188
msgid "A couple things to note:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:196
#: 87ae23154c224a629c05cbe619042315
msgid ""
"The ``library`` tag gives the relative path to a library that contains "
"the plugins that we want to export. In ROS 2, that is just the name of "
"the library. In ROS 1, it contained the prefix ``lib`` or sometimes "
"``lib/lib`` (i.e. ``lib/libpolygon_plugins``), but here it is simpler."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:198
#: a39837ced26341d4b86e3ce6b0464245
msgid ""
"The ``class`` tag declares a plugin that we want to export from our "
"library. Let's go through its parameters:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:201
#: da7e8bc801034e12bb8ad86ec7a424f5
msgid ""
"``type``: The fully qualified type of the plugin. For us, that's "
"``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:202
#: 0aaf6b3224364f57b1e0d12007be0863
msgid ""
"``base_class``: The fully qualified base class type for the plugin. For "
"us, that's ``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:203
#: ae1e13680dae49829f702745d746b816
msgid "``description``: A description of the plugin and what it does."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:204
#: 74fff5b83623424fa342cf6f9effdb56
msgid "``name``: There used to be a name attribute, but it is no longer required."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:207
#: 09af2cba83294eabb335769f50e9ac43
msgid "2.3 CMake Plugin Declaration"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:209
#: f20b3917b4f74136b01e16c718fbb336
msgid ""
"The last step is to export your plugins via ``CMakeLists.txt``. This is a"
" change from ROS 1, where the exporting was done via ``package.xml``. Add"
" the following line to your "
"``ros2_ws/src/polygon_plugins/CMakeLists.txt`` after the line reading "
"``find_package(pluginlib REQUIRED)``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:217
#: 285ab38a7cba430db823b2946e67712d
msgid ""
"The arguments to the ``pluginlib_export_plugin_description_file`` command"
" are:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:219
#: 0a6b7e4b0c29414e96abfcce08a2c5ce
msgid "The package with the base class, i.e. ``polygon_base``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:220
#: 43113d4a37ec489ca7c43d0323b23aed
msgid "The relative path to the Plugin Declaration xml, i.e. ``plugins.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:223
#: d55ee8f3306a4a57bf0eb44bdfea7786
msgid "3 Use the Plugins"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:225
#: f92ba5ab6bda480392644825188fc007
msgid ""
"Now it's time to use the plugins. This can be done in any package, but "
"here we're going to do it in the base package. Edit "
"``ros2_ws/src/polygon_base/src/area_node.cpp`` to contain the following:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:261
#: 39072fef1fa0490d8803ecfa77fa1b7d
msgid ""
"The ``ClassLoader`` is the key class to understand, defined in the "
"``class_loader.hpp`` `header file "
"<https://github.com/ros/pluginlib/blob/ros2/pluginlib/include/pluginlib/class_loader.hpp>`_:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:263
#: 93fac674ed09449e89acf4df0b8f3f57
msgid ""
"It is templated with the base class, i.e. "
"``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:264
#: 1886a33a04864fd5850faf017ef7e69e
msgid ""
"The first argument is a string for the package name of the base class, "
"i.e. ``polygon_base``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:265
#: ead975a3511d4eb2911d3b23912afe2b
msgid ""
"The second argument is a string with the fully qualified base class type "
"for the plugin, i.e. ``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:267
#: 98e919a0da3b4b98b082a88b8544b2f7
msgid ""
"There are a number of ways to instantiate an instance of the class. In "
"this example, we're using shared pointers. We just need to call "
"``createSharedInstance`` with the fully-qualified type of the plugin "
"class, in this case, ``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:271
#: b852781537af42f6b974df8ce34b4276
msgid ""
"Important note: the ``polygon_base`` package in which this node is "
"defined does NOT depend on the ``polygon_plugins`` class. The plugins "
"will be loaded dynamically without any dependency needing to be declared."
" Furthermore, we're instantiating the classes with hardcoded plugin "
"names, but you can also do so dynamically with parameters, etc."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:276
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:436
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:308
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:416
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:256
#: 712d56bd0b3642178fe5784de26370c5 7be95fd16dad4c27a59682d92b3ba966
#: acb51697704241f49152359140e66412 e17017e6c30d4aedb8bc1e52453e8051
#: e516733b113248e19882bb91376d491b
msgid "4 Build and run"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:278
#: 73a1854dd6794d28a4ca08fb1d486596
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"new packages:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:284
#: 74380b3a7b904168a692e87b9a19a6ee
msgid "From ``ros2_ws``, be sure to source the setup files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:312
#: 1dc2c15b3f4041c18c8ee632b76b512a
msgid "It should print:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:322
#: 5054bec068b14c16aba46bafe3b25914
msgid "Congratulations! You've just written and used your first plugins."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:9
#: 5499fbdf3fed418f98f701c4856a5ecc
msgid "Implementing custom interfaces"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:11
#: 4fa73249e7834ce78aeabb70dc9b0d07
msgid "**Goal:** Learn more ways to implement custom interfaces in ROS 2."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:24
#: d1e18c0eb2c34c7c9643f2502889fcdf
msgid ""
"In a :doc:`previous tutorial <./Custom-ROS2-Interfaces>`, you learned how"
" to create custom msg and srv interfaces."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:26
#: d43c32752902490fa69f5fa968d931b7
msgid ""
"While best practice is to declare interfaces in dedicated interface "
"packages, sometimes it can be convenient to declare, create and use an "
"interface all in one package."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:28
#: 08991c95652f4793a842060157a25386
msgid ""
"Recall that interfaces can currently only be defined in CMake packages. "
"It is possible, however, to have Python libraries and nodes in CMake "
"packages (using `ament_cmake_python "
"<https://github.com/ament/ament_cmake/tree/{REPOS_FILE_BRANCH}/ament_cmake_python>`_),"
" so you could define interfaces and Python nodes together in one package."
" We'll use a CMake package and C++ nodes here for the sake of simplicity."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:32
#: 5540ea801e57403686b6212212ced63d
msgid ""
"This tutorial will focus on the msg interface type, but the steps here "
"are applicable to all interface types."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:37
#: 5edd4295b5ff4013a5f9b63a5943ffa3
msgid ""
"We assume you've reviewed the basics in the :doc:`./Custom-"
"ROS2-Interfaces` tutorial before working through this one."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:39
#: 10f2a1d03ac04091a85d633c9dbb4a90
msgid ""
"You should have :doc:`ROS 2 installed <../../Installation>`, a "
":doc:`workspace <./Creating-A-Workspace/Creating-A-Workspace>`, and an "
"understanding of :doc:`creating packages <./Creating-Your-First-"
"ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:41
#: 4e57200879314d788c5130d52ad6873e
msgid ""
"As always, don't forget to :doc:`source ROS 2 <../Beginner-CLI-Tools"
"/Configuring-ROS2-Environment>` in every new terminal you open."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:49
#: a090228fd6eb4b168fb1ced96c2d1794
msgid ""
"In your workspace ``src`` directory, create a package ``more_interfaces``"
" and make a directory within it for msg files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:57
#: 8864f2f939464a3da952382ca145e72c
msgid "2 Create a msg file"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:59
#: bb2d68ca15cb405fa5e23e91bb4de91b
msgid ""
"Inside ``more_interfaces/msg``, create a new file ``AddressBook.msg``, "
"and paste the following code to create a message meant to carry "
"information about an individual:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:72
#: 821d4ec333ab41a99366804e797b3ec9
msgid "This message is composed of these fields:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:74
#: 839de515861447499efa311949f870a8
msgid "first_name: of type string"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:75
#: 12f6a85270e5445196fe3ce404a63e73
msgid "last_name: of type string"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:76
#: f6f0309500a442db91a6d565527a9d13
msgid "phone_number: of type string"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:77
#: d5864736d2084821aa9a81c43c2b1fd0
msgid "phone_type: of type uint8, with several named constant values defined"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:79
#: 1bd0583503f64069ac6f14a31abb7dc3
msgid ""
"Note that it's possible to set default values for fields within a message"
" definition. See :doc:`../../Concepts/Basic/About-Interfaces` for more "
"ways you can customize interfaces."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:82
#: acc299bad9fd41e6a8bc18a98c85b810
msgid ""
"Next, we need to make sure that the msg file is turned into source code "
"for C++, Python, and other languages."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:85
#: 69f8b801bb604f6092eef94380807e05
msgid "2.1 Build a msg file"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:87
#: 0b6f82aa65c246b1963960f5ff197f01
msgid "Open ``package.xml`` and add the following lines:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:97
#: 4bed848ae73f4c4299900be860665083
msgid ""
"Note that at build time, we need ``rosidl_default_generators``, while at "
"runtime, we only need ``rosidl_default_runtime``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:99
#: 244c83a7d0694ac7995580bc8e85071b
msgid "Open ``CMakeLists.txt`` and add the following lines:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:101
#: 283bae81e7fd4c559baf5f420fd51231
msgid "Find the package that generates message code from msg/srv files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:107
#: 706bf3cfa9ca419f901124f2d465d01c
msgid "Declare the list of messages you want to generate:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:115
#: 3c4a68eededb4616839e305eaa117992
msgid ""
"By adding the .msg files manually, we make sure that CMake knows when it "
"has to reconfigure the project after you add other .msg files."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:117
#: 90bae97a11bb4db78ec2430f3edace51
msgid "Generate the messages:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:125
#: 85f8205a892746ddb6f6469591969d2a
msgid "Also make sure you export the message runtime dependency:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:131
#: 07fc47e85e0f4268ba96991ca46a922d
msgid ""
"Now you're ready to generate source files from your msg definition. We'll"
" skip the compile step for now as we'll do it all together below in step "
"4."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:135
#: 740918e33de7449aa48f21fcea1455b7
msgid "2.2 (Extra) Set multiple interfaces"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:139
#: 6c7e31248cf84568aa80508f448879cb
msgid ""
"You can use ``set`` in ``CMakeLists.txt`` to neatly list all of your "
"interfaces:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:155
#: b19538f19fde440c8c31542044912b91
msgid "And generate all lists at once like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:166
#: 12d9bcc826f8442fa348d1fd87d109de
msgid "3 Use an interface from the same package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:168
#: 16cc1a4eda324c0e94a95daf620242a8
msgid "Now we can start writing code that uses this message."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:170
#: 2609e65d783c48d78d5fe72ffd5bb732
msgid ""
"In ``more_interfaces/src`` create a file called "
"``publish_address_book.cpp`` and paste the following code:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:223
#: b46f5a8fe6494d73952aa68bf35ff853
msgid "3.1 The code explained"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:225
#: ce5bd29cc46d44c6a1b06919738a1974
msgid "Include the header of our newly created ``AddressBook.msg``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:231
#: 9c199e15f2094223900434c12703e6e8
msgid "Create a node and an ``AddressBook`` publisher."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:246
#: f1b8e7fd85114649a06397e3579c6449
msgid "Create a callback to publish the messages periodically."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:252
#: 3729c5f879164c97b10bd32dda937cfb
msgid "Create an ``AddressBook`` message instance that we will later publish."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:258
#: b75870bbb1674e298c3e956d49a08576
msgid "Populate ``AddressBook`` fields."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:267
#: 398c23e85bfd45e1b7ba921bf99b5934
msgid "Finally send the message periodically."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:276
#: f4b150b015c149caaeb9d3c9c6eca146
msgid "Create a 1 second timer to call our ``publish_msg`` function every second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:283
#: 6b3f90c382a24ec7b9d43307d099e1d9
msgid "3.2 Build the publisher"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:285
#: d0aa8e0f360a41f891cffea41ad7c66f
msgid "We need to create a new target for this node in the ``CMakeLists.txt``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:299
#: e8a59b1aa7eb49b9bf125f017d510440
msgid "3.3 Link against the interface"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:301
#: 3f6aa4c001834ac089513e7ac836e700
msgid ""
"In order to use the messages generated in the same package we need to use"
" the following CMake code:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:310
#: 8c4246cecfa64e68bcd599fb2edb9e3a
msgid ""
"This finds the relevant generated C++ code from ``AddressBook.msg`` and "
"allows your target to link against it."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:312
#: ff80c8bbec804cfaba71490decebdff2
msgid ""
"You may have noticed that this step was not necessary when the interfaces"
" being used were from a different package that was built independently. "
"This CMake code is only required when you want to use interfaces in the "
"same package as the one in which they are defined."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:316
#: 59437677df2547d9a53c5b285150309f
msgid "4 Try it out"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:318
#: 231a5546270a480f89a917cac2d16ce7
msgid "Return to the root of the workspace to build the package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:343
#: d2027d83ef90414ab562f1d7d6f45cd4
msgid "Then source the workspace and run the publisher:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:368
#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:402
#: 199c74f3c7584514b2e83481a4c11b12 fe75eb4d1e4241bb9add1a7cf5fffc0b
msgid "Or using Powershell:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:375
#: f81bd5bb29164990b91f8bb957a11ecd
msgid ""
"You should see the publisher relaying the msg you defined, including the "
"values you set in ``publish_address_book.cpp``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:377
#: 4f475d023a8842cc8494bc6b6e4e7f10
msgid ""
"To confirm the message is being published on the ``address_book`` topic, "
"open another terminal, source the workspace, and call ``topic echo``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:409
#: 80558ee710cf4dbba49747fcf9de8d41
msgid ""
"We won't create a subscriber in this tutorial, but you can try to write "
"one yourself for practice (use :doc:`./Writing-A-Simple-Cpp-Publisher-"
"And-Subscriber` to help)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:412
#: 5290bd2eab8e4871a75440a0b8083586
msgid "5 (Extra) Use an existing interface definition"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:416
#: ecbaf2810f924ed5b0d10e96f93495fd
msgid ""
"You can use an existing interface definition in a new interface "
"definition. For example, let's say there is a message named "
"``Contact.msg`` that belongs to an existing ROS 2 package named "
"``rosidl_tutorials_msgs``. Assume that its definition is identical to our"
" custom-made ``AddressBook.msg`` interface from earlier."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:420
#: 2ed58e48ed304843bb95589294a73587
msgid ""
"In that case you could have defined ``AddressBook.msg`` (an interface in "
"the package *with* your nodes) as type ``Contact`` (an interface in a "
"*separate* package). You could even define ``AddressBook.msg`` as an "
"*array* of type ``Contact``, like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:427
#: 5b2bda6fc9fd49aca62049b7affdc39c
msgid ""
"To generate this message you would need to declare a dependency on "
"``Contact.msg's`` package, ``rosidl_tutorials_msgs``, in ``package.xml``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:435
#: c620219732d448359686c7bcf4a9d483
msgid "And in ``CMakeLists.txt``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:446
#: dcf783d6c8274752820d003aa34dcd72
msgid ""
"You would also need to include the header of ``Contact.msg`` in you "
"publisher node in order to be able to add ``contacts`` to your "
"``address_book``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:452
#: 29713cc5e77044d8bbc8df5ae8994809
msgid "You could change the callback to something like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:484
#: 64807792ddf1487aaf7738d8039948de
msgid ""
"Building and running these changes would show the msg defined as "
"expected, as well as the array of msgs defined above."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:489
#: aaaf4d7575624338a5c7e07ffc095b00
msgid ""
"In this tutorial, you tried out different field types for defining "
"interfaces, then built an interface in the same package where it's being "
"used."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:491
#: 68f0f7e62cd74b0cb3fdde485786d78d
msgid ""
"You also learned how to use another interface as a field type, as well as"
" the ``package.xml``, ``CMakeLists.txt``, and ``#include`` statements "
"necessary for utilizing that feature."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:496
#: fb70343ca4be4749bfb3d6a4a8a361f0
msgid ""
"Next you will create a simple ROS 2 package with a custom parameter that "
"you will learn to set from a launch file. Again, you can choose to write "
"it in either :doc:`C++ <./Using-Parameters-In-A-Class-CPP>` or "
":doc:`Python <./Using-Parameters-In-A-Class-Python>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Single-Package-Define-And-Use-Interface.rst:502
#: 0e8f6aa5dd364d079f5597625fcdfbdf
msgid ""
"There are `several design articles "
"<https://design.ros2.org/#interfaces>`_ on ROS 2 interfaces and the IDL "
"(interface definition language)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:8
#: 1552a3aa6be34525b5d54bbe9b6404b0
msgid "Using parameters in a class (C++)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:10
#: 87ae0dc4d4114a88a1ac6b631f11c412
msgid "**Goal:** Create and run a class with ROS parameters using C++."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:23
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:23
#: 36cdb2f42976480ab79eefd659f90754 e6dd87f74dca4e879dd4fb4ea75996ac
msgid ""
"When making your own :doc:`nodes <../Beginner-CLI-Tools/Understanding-"
"ROS2-Nodes/Understanding-ROS2-Nodes>` you will sometimes need to add "
"parameters that can be set from the launch file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:25
#: 0bbef71e356c41c9a947de90c972d171
msgid ""
"This tutorial will show you how to create those parameters in a C++ "
"class, and how to set them in a launch file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:30
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:30
#: 9424df09a90a434f9042e63dd9285dc4 e2c59c0cc86f4f7fba3700c247ddf897
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<./Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a package"
" <./Creating-Your-First-ROS2-Package>`. You have also learned about "
":doc:`parameters <../Beginner-CLI-Tools/Understanding-ROS2-Parameters"
"/Understanding-ROS2-Parameters>` and their function in a ROS 2 system."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:43
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:43
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:44
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:43
#: 34b7a77ca7584f20b631740d2a8d8c0c 6743ecffb16f49b4bd3a0d9fecbf282d
#: c3fceb7431e546f4b14c586ab19d33e3 c52908fd22764f4d929a035bbd6398fe
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. Navigate into ``ros2_ws/src`` and create a new "
"package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:50
#: 5a21413f765d4ad6bb2fa428b4eeba6b
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``cpp_parameters`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:52
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:52
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:55
#: 43a5df9a0a3c40828ff49245e70839cc 6812773596c64d2b8ae3756bf57f6336
#: 74e69aa8d1a5423fa2cad1678cfac002
msgid ""
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml`` and ``CMakeLists.txt``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:57
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:57
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:68
#: 174c43d5ee91452899a1bfc124b0fc4b 72d9a630ec844150b507d295279d45e0
#: 78035710f4f34e2f998a15a7978f8529
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don't have to manually add dependencies to ``package.xml`` or "
"``CMakeLists.txt``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:59
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:59
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:70
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:69
#: 7174fa97e48c4adf9f0a19845b5e25c2 a967aba5f00244e893c9c37cf437f45f
#: b460ac0fb8cd4de1b2a83ef189f59857 b4656e527494492b9a4756d22d6d3b57
msgid ""
"As always, though, make sure to add the description, maintainer email and"
" name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:70
#: f2a72c97ae3e4014a7d731b2c3f8efde
msgid ""
"Inside the ``ros2_ws/src/cpp_parameters/src`` directory, create a new "
"file called ``cpp_parameters_node.cpp`` and paste the following code "
"within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:118
#: 503eb5ff4d2f492792be19eb98e37b0e
msgid "The ``#include`` statements at the top are the package dependencies."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:120
#: 65c5d92fa88a44489fa6480ce524b9b2
msgid ""
"The next piece of code creates the class and the constructor. The first "
"line of this constructor creates a parameter with the name "
"``my_parameter`` and a default value of ``world``. The parameter type is "
"inferred from the default value, so in this case it would be set to a "
"string type. Next the ``timer_`` is initialized with a period of 1000ms, "
"which causes the ``timer_callback`` function to be executed once a "
"second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:139
#: 15c7c03ca96a4f34bc7c30f754f5518a
msgid ""
"The first line of our ``timer_callback`` function gets the parameter "
"``my_parameter`` from the node, and stores it in ``my_param``. Next the "
"``RCLCPP_INFO`` function ensures the event is logged. The "
"``set_parameters`` function then sets the parameter ``my_parameter`` back"
" to the default string value ``world``. In the case that the user changed"
" the parameter externally, this ensures it is always reset back to the "
"original."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:156
#: b7fd671cf16b4b06bda026e2dc619ef2
msgid "Last is the declaration of ``timer_``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:163
#: 23c588bcb05a490ba85e37bef550e4bb
msgid ""
"Following our ``MinimalParam`` is our ``main``. Here ROS 2 is "
"initialized, an instance of the ``MinimalParam`` class is constructed, "
"and ``rclcpp::spin`` starts processing data from the node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:177
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:162
#: 4e2899c27ee64211adab95f784a48e2a da509b04256645638e7f3335acbc638a
msgid "2.1.1 (Optional) Add ParameterDescriptor"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:178
#: facbdf9553e94dd4bc0605c1142a49f7
msgid ""
"Optionally, you can set a descriptor for the parameter. Descriptors allow"
" you to specify a text description of the parameter and its constraints, "
"like making it read-only, specifying a range, etc. For that to work, the "
"code in the constructor has to be changed to:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:201
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:183
#: 047f93c92cee46298ec7b76c27b15291 83c278b4a763494eaee1c1e3994057bd
msgid ""
"The rest of the code remains the same. Once you run the node, you can "
"then run ``ros2 param describe /minimal_param_node my_parameter`` to see "
"the type and description."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:208
#: 80509f25adde4c238af11c9219397208
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the dependency "
"``find_package(rclcpp REQUIRED)`` add the following lines of code."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:224
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:215
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:310
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:258
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:185
#: 1d042e8285dd43e18843037f15bac413 448d88ba092c4f4daf651cc7a9855dc5
#: b297af353186440986a8e32fd2776072 bb9fa68a2bee4bfa98ae66cada4abd96
#: c6a253483e954355901676d752f1ad10
msgid ""
"It's good practice to run ``rosdep`` in the root of your workspace "
"(``ros2_ws``) to check for missing dependencies before building:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:236
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:240
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:227
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:231
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:450
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:454
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:322
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:326
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:430
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:434
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:270
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:274
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:197
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:201
#: 01741bc4d9af4c0d8d014b913f09f3bb 08faa0fda1624bf1b4407fa7b7be75e8
#: 090887d6c69c46d184cdc64ecea43665 113f465ba1444712bc35bb373d6162f5
#: 150a8d24f8594be3aa415a4debcc33a1 369f337bde9e438496f8773ed284472f
#: 4c5f52ba4e6e4132ae9820a6a071d207 7740c15ca64c4ae1a581e94a4e13ddae
#: 823e622281314d3ab58625337038e75b 9d79d31e28d24ec6bd633332858c3092
#: c0b6271f9c7544f4a8e71873760566f4 d6f84bec14db41408fc2c9df22c582bb
#: d97a12b43e99420e8a0c37330d440f24 f6c553d9610740309fa00ef0e6b593d8
msgid "rosdep only runs on Linux, so you can skip ahead to next step."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:242
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:233
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:329
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:277
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:203
#: 078da00e485f4dc7ae00ffed3db4a969 0e493f93cd114106bbe11d706770f287
#: 1cd9f128ad5f4a468db4b53052874b78 5da80e79d75f45269bafeded1445831a
#: 8d097c3910594f77b2073e61e6a9d1ba
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"new package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:264
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:255
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:479
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:351
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:459
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:283
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:209
#: 01881c571d5e475a9d3113d227612dc9 01f9ec8b96cf46419a54a11755518a70
#: 1388756eea4d426dbe3795a2077fc51c 58ae816a35d94e0e891778e6a15387c5
#: 5b6147e4b67d4aaaa90792e2e965fd6b 93fef07270104ddd8046f5b33ec3c94b
#: e2acdabe27a248f598fb4f2cd4f78803
msgid "Open a new terminal, navigate to ``ros2_ws``, and source the setup files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:292
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:283
#: 272a13d60b3140a3b728f2f5fbfd1112 ae5ae32a9e6f4f078fb352760a853590
msgid "The terminal should return the following message every second:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:298
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:289
#: 2557931b31cc40a3adb7d0c0dd9d3702 efcc6f388e69426589b73a9f33c6c7be
msgid ""
"Now you can see the default value of your parameter, but you want to be "
"able to set it yourself. There are two ways to accomplish this."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:302
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:293
#: 0c882d1dc85f47fbbee8940e10715341 0e1c81e6694b4ba7b75568f52f131cd8
msgid "3.1 Change via the console"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:304
#: 3e791f4c1f364fa49aa9bf6259462b91
msgid ""
"This part will use the knowledge you have gained from the :doc:`tutorial "
"about parameters <../Beginner-CLI-Tools/Understanding-ROS2-Parameters"
"/Understanding-ROS2-Parameters>` and apply it to the node you have just "
"created."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:306
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:297
#: dd389764167247a58e5e314c43475f75 dfc7933bd0fe46208bd7af1302f5cde9
msgid "Make sure the node is running:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:312
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:303
#: ee3e1e0821474fa0b4afed30bd87b42b f3ecce6ec43e469e827b7adf309dfac2
msgid ""
"Open another terminal, source the setup files from inside ``ros2_ws`` "
"again, and enter the following line:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:318
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:309
#: 643a2814121c4eb3be503f4e560d35f3 da6552eef0a641d3b6cf6b867b6f8a6f
msgid ""
"There you will see the custom parameter ``my_parameter``. To change it, "
"simply run the following line in the console:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:325
#: f12542ef68f14943823e70ef539547e8
msgid ""
"You know it went well if you got the output ``Set parameter successful``."
" If you look at the other terminal, you should see the output change to "
"``[INFO] [minimal_param_node]: Hello earth!``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:329
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:322
#: 3df0738e54f84039ac314bb28f1a407c 461a7645ed05486f87b4a8c01628fb63
msgid "3.2 Change via a launch file"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:330
#: e9863c0c0d4b4ef3ae244ece31984c72
msgid ""
"You can also set the parameter in a launch file, but first you will need "
"to add the launch directory. Inside the ``ros2_ws/src/cpp_parameters/`` "
"directory, create a new directory called ``launch``. In there, create a "
"new file called ``cpp_parameters_launch.py``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:354
#: 91605c0226cb44d3a027cdaf24aab9df
msgid ""
"Here you can see that we set ``my_parameter`` to ``earth`` when we launch"
" our node ``minimal_param_node``. By adding the two lines below, we "
"ensure our output is printed in our console."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:362
#: a067de47fc20488bb0c94ebb90f86113
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the lines you added earlier, "
"add the following lines of code."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:372
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:372
#: 44c85e62df6742e787382ad4d7bea390 44d6a554dcce447cbf346fb57bcec8f2
msgid ""
"Open a console and navigate to the root of your workspace, ``ros2_ws``, "
"and build your new package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:394
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:394
#: 28f0d96db5214b08bf9b61333c95e3ae 792527fa767645f1a70d1814c035c603
msgid "Then source the setup files in a new terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:416
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:416
#: 512df8cda9cb4cbfb7fbedfdbaee10b0 8bb86fe0764e4cbbaef0797baee90010
msgid "Now run the node using the launch file we have just created:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:422
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:422
#: 3255d3331b77465dbc3a7a67f99c8b97 e62fc6970c364855ba6672f896391b9b
msgid "The terminal should return the following message the first time:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:428
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:428
#: 7af56263cba445c4815c41cf02433775 e3268465cc9f49a1a0c9bdd03b501c01
msgid ""
"Further outputs should show  ``[INFO] [minimal_param_node]: Hello "
"world!`` every second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:433
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:433
#: 1577a63faec7481f94f45db830836c27 6deb44aa1a5b4486bdaf63fc99839a13
msgid ""
"You created a node with a custom parameter that can be set either from a "
"launch file or the command line. You added the dependencies, executables,"
" and a launch file to the package configuration files so that you could "
"build and run them, and see the parameter in action."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP.rst:439
#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:439
#: 4d2661b206824e54b7254b93e15f1cb2 b63e682d004d4f78a4e942145d4baa79
msgid ""
"Now that you have some packages and ROS 2 systems of your own, the "
":doc:`next tutorial <./Getting-Started-With-Ros2doctor>` will show you "
"how to examine issues in your environment and systems in case you have "
"problems."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:8
#: 34342df64a3b473a892758ac4efebc05
msgid "Using parameters in a class (Python)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:10
#: 3ca0370aec3d4bb0a2cbe207ae69deb8
msgid "**Goal:** Create and run a class with ROS parameters using Python."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:25
#: d1aa1bd8bd8947eab3d52869c6316bb8
msgid ""
"This tutorial will show you how to create those parameters in a Python "
"class, and how to set them in a launch file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:50
#: e5eca9940abf4f36be065224bb4da123
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``python_parameters`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:70
#: 694cf4efc7614999a0cec57202702337
msgid ""
"Inside the ``ros2_ws/src/python_parameters/python_parameters`` directory,"
" create a new file called ``python_parameters_node.py`` and paste the "
"following code within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:110
#: 190165cb7de643cb850f575ec8740d26
msgid ""
"The ``import`` statements at the top are used to import the package "
"dependencies."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:112
#: f64404a612fc41a08e42fdb8321ad9f7
msgid ""
"The next piece of code creates the class and the constructor. The line "
"``self.declare_parameter('my_parameter', 'world')`` of the constructor "
"creates a parameter with the name ``my_parameter`` and a default value of"
" ``world``. The parameter type is inferred from the default value, so in "
"this case it would be set to a string type. Next the ``timer`` is "
"initialized with a period of 1, which causes the ``timer_callback`` "
"function to be executed once a second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:127
#: db7b6a38d2f242f88afd8b7bec5e9a8a
msgid ""
"The first line of our ``timer_callback`` function gets the parameter "
"``my_parameter`` from the node, and stores it in ``my_param``. Next the "
"``get_logger`` function ensures the event is logged. The "
"``set_parameters`` function then sets the parameter ``my_parameter`` back"
" to the default string value ``world``. In the case that the user changed"
" the parameter externally, this ensures it is always reset back to the "
"original."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:147
#: 6c67a63d1f8d43f0ba7200deff660571
msgid ""
"Following the ``timer_callback`` is our ``main``. Here ROS 2 is "
"initialized, an instance of the ``MinimalParam`` class is constructed, "
"and ``rclpy.spin`` starts processing data from the node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:163
#: fa86627656f048eca093f41f70f07839
msgid ""
"Optionally, you can set a descriptor for the parameter. Descriptors allow"
" you to specify a text description of the parameter and its constraints, "
"like making it read-only, specifying a range, etc. For that to work, the "
"``__init__`` code has to be changed to:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:187
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:163
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:418
#: 173785b7b63a402a98b071cd01b35a0f 1f0b2fc335f54efc8aae084423b4a09d
#: 44ee9a4d4e2b4c3c9a965894b4bf1246
msgid "2.2 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:189
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:240
#: 373e82298440436aadcbb52a3b2323e8 a5cade6d262f4e568ab69bbb20d06866
msgid ""
"Open the ``setup.py`` file. Again, match the ``maintainer``, "
"``maintainer_email``, ``description`` and ``license`` fields to your "
"``package.xml``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:199
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:250
#: 01e63eb95c0e41369e86f6696b32c4c0 13f65ea40f0e4ca99b07bb4ebac68867
msgid ""
"Add the following line within the ``console_scripts`` brackets of the "
"``entry_points`` field:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:209
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:260
#: 0108e15e542b4d9e9f1ef785fbd41072 831e93988b074c929196617354c99732
msgid "Don't forget to save."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:295
#: 00ac398a50d1429ea817ff42299e0c35
msgid ""
"This part will use the knowledge you have gained from the :doc:`tutoral "
"about parameters <../Beginner-CLI-Tools/Understanding-ROS2-Parameters"
"/Understanding-ROS2-Parameters>` and apply it to the node you have just "
"created."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:316
#: 5d06accf263844838dba0d4bbbc36ddc
msgid ""
"You know it went well if you get the output ``Set parameter successful``."
" If you look at the other terminal, you should see the output change to "
"``[INFO] [minimal_param_node]: Hello earth!``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:319
#: 76b9b6ab91674b11baec6d154d331f89
msgid ""
"Since the node afterwards set the parameter back to ``world``, further "
"outputs show  ``[INFO] [minimal_param_node]: Hello world!``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:324
#: db42680171a64e519dba5ab21ab3fe40
msgid ""
"You can also set parameters in a launch file, but first you will need to "
"add a launch directory. Inside the ``ros2_ws/src/python_parameters/`` "
"directory, create a new directory called ``launch``. In there, create a "
"new file called ``python_parameters_launch.py``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:347
#: 4a32d4deab224dda97c35cc8065700f0
msgid ""
"Here you can see that we set ``my_parameter`` to ``earth`` when we launch"
" our node ``parameter_node``. By adding the two lines below, we ensure "
"our output is printed in our console."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.rst:355
#: bd19b3519e4145c688cdc28897220d96
msgid ""
"Now open the ``setup.py`` file. Add the ``import`` statements to the top "
"of the file, and the other new statement to the ``data_files`` parameter "
"to include all launch files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:8
#: ea0a69ef16584ae7849747f5dfbb3103
msgid "Writing a simple publisher and subscriber (C++)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:10
#: 720f1941ef8c410c856c20172aa5f7dc
msgid "**Goal:** Create and run a publisher and subscriber node using C++."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:23
#: d9e246c3d87343169c033712d56a3cc6
msgid ""
":doc:`Nodes <../Beginner-CLI-Tools/Understanding-ROS2-Nodes"
"/Understanding-ROS2-Nodes>` are executable processes that communicate "
"over the ROS graph. In this tutorial, the nodes will pass information in "
"the form of string messages to each other over a :doc:`topic "
"<../Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-"
"ROS2-Topics>`. The example used here is a simple \"talker\" and "
"\"listener\" system; one node publishes data and the other subscribes to "
"the topic so it can receive that data."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:27
#: 611c67a337404bc59533613dbcc02666
msgid ""
"The code used in these examples can be found `here "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp/topics>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:32
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:32
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:32
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:31
#: 23182fe31eba47a6a72af49fe42fe88e 4c18b06acf7e4ab49a90d8bdc8d61a55
#: 720d93e172b444a482c4605077cf1dd2 b03c08d263954d389c383f60683c4996
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<./Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a package"
" <./Creating-Your-First-ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:42
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:42
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:44
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:41
#: 9886f83f7a244904b5711b25d388bb2e 9c246cde647e43a789810f6b0d7f6500
#: b1fc1fa316ad4dd3892dad2506fee47e e522cc4f6b194a6e87704f17f4bb4731
msgid ""
"Navigate into the ``ros2_ws`` directory created in a :ref:`previous "
"tutorial <new-directory>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:44
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:46
#: 244793bb80fe4055af0830f69bd2f0a3 96ac7a7cda5741a5a0f3cef79fd89acc
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. So, navigate into ``ros2_ws/src``, and run the "
"package creation command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:51
#: 2a6ef0ef31b940388bf74c3dc3990e93
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``cpp_pubsub`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:53
#: ca4b8fc89878479fbdb219aab12d2e22
msgid ""
"Navigate into ``ros2_ws/src/cpp_pubsub/src``. Recall that this is the "
"directory in any CMake package where the source files containing "
"executables belong."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:58
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:56
#: 87a9f619ea774ff7921c448229227f13 a0f00a53526b4c2c8ea5b24dc2ca98c4
msgid "2 Write the publisher node"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:60
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:61
#: 075e0e0f21a34c2680bb9ef9024a3fca 84fa5d184d0842a9b6917ba9fca10e82
msgid "Download the example talker code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:78
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:324
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:79
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:300
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:364
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:342
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:67
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:339
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:59
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:59
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:58
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:58
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:79
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:79
#: 1052911d236849829aa65b511aef3626 1939e2c9355743a4bab298677fb30477
#: 1b7e6aeeac3b4b598d61df76b49a8820 26c20c12737f4e0ab9ed050a86d750c2
#: 31b542f977e9461396cac6b5d8ce0079 34b3f3e764c2487d95d71ae4969b9997
#: 35d18768ba644f799e0a4e64036886b0 5f498c3b358a415991a2b4ad2c79c5e6
#: 66ef69e75bbe47a8ac34feb80811cfdf 6b67026983d840d0afe46e6ca374bac8
#: 7942c541d3464795af5813f7d00e91f6 837f75003af44769809b54663d40e402
#: 9ca60af3e2d044b7b2a3ec3fa69e9005 cd2cf0b70097427b97e021c4304a5fd4
#: de12322df994429599495e78cc596ed8 fe5844d3d4364259a1774a873bf57168
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:84
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:330
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:85
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:306
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:77
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:370
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:77
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:348
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:73
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:345
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:64
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:64
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:85
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:85
#: 00364b1f661343638729669976e89127 05df7425df3b42958718706256b0f0c6
#: 10812ce6b6984b9584b7360da270b09c 1368422c39604cc5bef3042da4c20a31
#: 1856dd7892d64a649532b8d23df6ee19 703ae2faeb7e40b9949cb43b4ba9c018
#: 72c6289c43e94bf8b068276488e91906 8200f6904e3a438c9a88c76ace37e89b
#: 869e6dda96b647f39bcc4b2e0c11bd66 b627ad32005249598fe23ade22c28e99
#: c4ab10a719db499bb11f3353bbd37623 cb4f728613544e4f97a90c12fab500c9
#: d0670b88d877449888598fa5f71fc37e de15b307fe014649aaa917e11f064c25
#: ef569faeee8f4c8692a9701bdb4c674a f88cf832e5354df98cb4e1cd5bf75c75
msgid "Or in powershell:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:90
#: 464db6683ac74b3dad41cd3d0a7d905d
msgid ""
"Now there will be a new file named ``publisher_member_function.cpp``. "
"Open the file using your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:143
#: 8ecc61cf064d4a43ac5e063e4a142347
msgid ""
"The top of the code includes the standard C++ headers you will be using. "
"After the standard C++ headers is the ``rclcpp/rclcpp.hpp`` include which"
" allows you to use the most common pieces of the ROS 2 system. Last is "
"``std_msgs/msg/string.hpp``, which includes the built-in message type you"
" will use to publish data."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:159
#: 894c1577e0fd45d9986dc6b7b685b2c5
msgid ""
"These lines represent the node's dependencies. Recall that dependencies "
"have to be added to ``package.xml`` and ``CMakeLists.txt``, which you'll "
"do in the next section."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:162
#: c938ccb2c9f04129a9ad9e6b16f210bf
msgid ""
"The next line creates the node class ``MinimalPublisher`` by inheriting "
"from ``rclcpp::Node``. Every ``this`` in the code is referring to the "
"node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:169
#: 50ab812f4490415fa460a27935a5d416
msgid ""
"The public constructor names the node ``minimal_publisher`` and "
"initializes ``count_`` to 0. Inside the constructor, the publisher is "
"initialized with the ``String`` message type, the topic name ``topic``, "
"and the required queue size to limit messages in the event of a backup. "
"Next, ``timer_`` is initialized, which causes the ``timer_callback`` "
"function to be executed twice a second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:184
#: 69bb7bdf8a0240f5b8f1130f909615dd
msgid ""
"The ``timer_callback`` function is where the message data is set and the "
"messages are actually published. The ``RCLCPP_INFO`` macro ensures every "
"published message is printed to the console."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:198
#: f1e42b0e091f47c5991b24e9e41c714b
msgid "Last is the declaration of the timer, publisher, and counter fields."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:206
#: 1f691d43da9041d8b330aab22e6943f7
msgid ""
"Following the ``MinimalPublisher`` class is ``main``, where the node "
"actually executes. ``rclcpp::init`` initializes ROS 2, and "
"``rclcpp::spin`` starts processing data from the node, including "
"callbacks from the timer."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:220
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:212
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:528
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:305
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:316
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:244
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:264
#: 1712758e7e17479b83e7353500f1356d 18dca7714b8d435a8c555692c24b139c
#: 4f5988f3d4a54b67a5babc8ddf5752df 62944c64295441679a624dc1de1b25fe
#: ae6bdf5b4d35430081833a9aad39a8e7 b42e77b9c4f241ac904ada49691d992d
#: e50aa7f107504867a4d01f8eed1e0060
msgid "2.2 Add dependencies"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:222
#: b2265f55a7ef4f50a5072c48e6d4c370
msgid ""
"Navigate one level back to the ``ros2_ws/src/cpp_pubsub`` directory, "
"where the ``CMakeLists.txt`` and ``package.xml`` files have been created "
"for you."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:224
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:216
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:248
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:268
#: 07d8ae76a0694977a26ad6d995b441a8 9053d01bc95c41b2add0476efb5d0e2d
#: 906fb7197dd1425299c5fd55dfb77676 dc4215f4f76e4f19950da09fb2fdf0b5
msgid "Open ``package.xml`` with your text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:226
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:218
#: 0840951ef4724ca1a8609f1a845f8399 80e7a2cc05264d76a9b7dc09db18794b
msgid ""
"As mentioned in the :doc:`previous tutorial <./Creating-Your-First-"
"ROS2-Package>`, make sure to fill in the ``<description>``, "
"``<maintainer>`` and ``<license>`` tags:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:234
#: 0ff2c601ac6446ce8c84a8fabda311a6
msgid ""
"Add a new line after the ``ament_cmake`` buildtool dependency and paste "
"the following dependencies corresponding to your node's include "
"statements:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:241
#: cc33b383e78e4d0499b8471a3d87d340
msgid ""
"This declares the package needs ``rclcpp`` and ``std_msgs`` when its code"
" is built and executed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:243
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:235
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:319
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:330
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:258
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:290
#: 0c38f62341084086835ff37a7e50631b 9ecc603b3f244db6a85d9c4b26150b53
#: d596703f71cf4a629965808a38b80ab3 da12aba31e284640b067dc3e6b79b743
#: e787e9c40c134d799b945cfb6f3ec3da ff965bf14708404da0216d9ecf2195e0
msgid "Make sure to save the file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:246
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:538
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:322
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:261
#: 1d2f89d9f65c4201b1cc15a34d07757c 20f7ec36f1d6404daecd1397e3d3d005
#: 3bb9f4fbe6954332b6762bef9ce12e76 ecc454c74d3941cd8705e7c3eec3af35
msgid "2.3 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:248
#: d3a4b2338f614d3c90a0f7d7e6069645
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the existing dependency "
"``find_package(ament_cmake REQUIRED)``, add the lines:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:256
#: ddb5e7567e154cbe8a3bd551da9bd7fe
msgid ""
"After that, add the executable and name it ``talker`` so you can run your"
" node using ``ros2 run``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:263
#: d9e95011e0dd420ead59465de244866f
msgid ""
"Finally, add the ``install(TARGETS...)`` section so ``ros2 run`` can find"
" your executable:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:300
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:276
#: f1989e42b62444f4b062339cb1e83d82 fb6fd0d16d1b47a3bf89517d04fccfd1
msgid ""
"You could build your package now, source the local setup files, and run "
"it, but let's create the subscriber node first so you can see the full "
"system at work."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:303
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:279
#: bff03cace9fe48fe9288f2282335a671 d2a1f9b44f404b0eb74ad2ef18c664c7
msgid "3 Write the subscriber node"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:305
#: cba06082adee4f9bb707ad7132502c71
msgid ""
"Return to ``ros2_ws/src/cpp_pubsub/src`` to create the next node. Enter "
"the following code in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:336
#: 1df54209f25747589fce1b661f62b9ce
msgid "Entering ``ls`` in the console will now return:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:342
#: debb4bfe9ba54d53b4ec3b0c4fbb11bd
msgid "Open the ``subscriber_member_function.cpp`` with your text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:379
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:244
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:319
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:222
#: 1cdf237cb88a4aa68c12dbb6a9ff3799 68184338ed724547a8998b411d1f8b82
#: 9fd39d35115d45ae8209af4d7755af50 e5273803cb504fa6b0edba004ec21c0f
msgid "3.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:381
#: d13575f3e57a499ea10501b2e993efb5
msgid ""
"The subscriber node's code is nearly identical to the publisher's. Now "
"the node is named ``minimal_subscriber``, and the constructor uses the "
"node's ``create_subscription`` class to execute the callback."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:384
#: 7d65d2cb21c64a518422efcee8b32555
msgid ""
"There is no timer because the subscriber simply responds whenever data is"
" published to the ``topic`` topic."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:396
#: 0b4f340d317842f9bddde4d1388e5d56
msgid ""
"Recall from the :doc:`topic tutorial <../Beginner-CLI-Tools"
"/Understanding-ROS2-Topics/Understanding-ROS2-Topics>` that the topic "
"name and message type used by the publisher and subscriber must match to "
"allow them to communicate."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:398
#: b715a4d9273b4534a8ad5a95c1596ac8
msgid ""
"The ``topic_callback`` function receives the string message data "
"published over the topic, and simply writes it to the console using the "
"``RCLCPP_INFO`` macro."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:400
#: 52ea9300c89240be92876de8fbf10cf7
msgid "The only field declaration in this class is the subscription."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:411
#: e8100ae294954a899a8e4211172eb541
msgid ""
"The ``main`` function is exactly the same, except now it spins the "
"``MinimalSubscriber`` node. For the publisher node, spinning meant "
"starting the timer, but for the subscriber it simply means preparing to "
"receive messages whenever they come."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:414
#: 2f0f606231bf4f9ab3397ec255be4d3e
msgid ""
"Since this node has the same dependencies as the publisher node, there's "
"nothing new to add to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:417
#: 3200144be9a5445db7e2b7b365173cf0
msgid "3.2 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:419
#: 861c625a50344a58aa59627b59e83721
msgid ""
"Reopen ``CMakeLists.txt`` and add the executable and target for the "
"subscriber node below the publisher's entries."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:431
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:413
#: 6e53801c623b4ffd9526f38c68ee0696 ceeb5f1c321944dea7570437ceabf3e3
msgid "Make sure to save the file, and then your pub/sub system should be ready."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:437
#: 9a9ccf49a1784c63b565fccf7098b025
msgid ""
"You likely already have the ``rclcpp`` and ``std_msgs`` packages "
"installed as part of your ROS 2 system. It's good practice to run "
"``rosdep`` in the root of your workspace (``ros2_ws``) to check for "
"missing dependencies before building:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:457
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:437
#: 856957da1d1e47759829ec9bdfdbd0b2 d6f4f76f7c7542a192a8bd30f7b672e9
msgid "Still in the root of your workspace, ``ros2_ws``, build your new package:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:517
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:498
#: 4147d84e0f1e4fbd95afa43c5078d8b9 b7c8e48a3a9640f7ae9e69d1fa1b6052
msgid ""
"Open another terminal, source the setup files from inside ``ros2_ws`` "
"again, and then start the listener node:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:533
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:514
#: 3e8bf833013f4d419ed1d2d0f79e470a 74d9a030e686472f8d758326c4471e93
msgid "Enter ``Ctrl+C`` in each terminal to stop the nodes from spinning."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:538
#: 8f2c6a1a8ac7486682f474fd3f18a729
msgid ""
"You created two nodes to publish and subscribe to data over a topic. "
"Before compiling and running them, you added their dependencies and "
"executables to the package configuration files."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:544
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:525
#: 16366330681048b98197eb35ba8c1011 7ced881093b640ff800f22dfd65dfd06
msgid ""
"Next you'll create another simple ROS 2 package using the service/client "
"model. Again, you can choose to write it in either :doc:`C++ <./Writing-A"
"-Simple-Cpp-Service-And-Client>` or :doc:`Python <./Writing-A-Simple-Py-"
"Service-And-Client>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:550
#: e9ed17742f5243c3b877f9cc548e57e8
msgid ""
"There are several ways you could write a publisher and subscriber in C++;"
" check out the ``minimal_publisher`` and ``minimal_subscriber`` packages "
"in the `ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp/topics>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:8
#: 583bf6545f58409987e347d35498ed21
msgid "Writing a simple service and client (C++)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:10
#: 22a8cf4039944d7c8537a974047088ce
msgid "**Goal:** Create and run service and client nodes using C++."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:23
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:23
#: 87aa127c5c98489faedf6c0152bb0e86 ab9d1852cfe34ff3a6c457802d4e8b64
msgid ""
"When :doc:`nodes <../Beginner-CLI-Tools/Understanding-ROS2-Nodes"
"/Understanding-ROS2-Nodes>` communicate using :doc:`services "
"<../Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-"
"ROS2-Services>`, the node that sends a request for data is called the "
"client node, and the one that responds to the request is the service "
"node. The structure of the request and response is determined by a "
"``.srv`` file."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:26
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:26
#: 34032e4fc31d4a0d9de792a082c8f8aa c7e6d955ca974f24bae43723e8ba3624
msgid ""
"The example used here is a simple integer addition system; one node "
"requests the sum of two integers, and the other responds with the result."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:51
#: 3e8f022c877c476087ccda87affac63a
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``cpp_srvcli`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:53
#: 33dd6d4116924c65a6e8421ed53d856f
msgid ""
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml`` and ``CMakeLists.txt``. "
"``example_interfaces`` is the package that includes `the .srv file "
"<https://github.com/ros2/example_interfaces/blob/{REPOS_FILE_BRANCH}/srv/AddTwoInts.srv>`__"
" you will need to structure your requests and responses:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:63
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:62
#: 8e476feb9ef6433286aceaef5411e7a7 93c515bce6394d22ae8adc6f4ea47810
msgid ""
"The first two lines are the parameters of the request, and below the "
"dashes is the response."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:80
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:90
#: a7628701977441c285fc12080e7949df d02e670cc6e04d08b2650a3028009174
msgid "2 Write the service node"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:82
#: af8a0c40dd4742d5a0c3810b9eef68c5
msgid ""
"Inside the ``ros2_ws/src/cpp_srvcli/src`` directory, create a new file "
"called ``add_two_ints_server.cpp`` and paste the following code within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:118
#: 1677c72c814c4354a5f42751f5ac92bc
msgid "The first two ``#include`` statements are your package dependencies."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:120
#: 7893583047b4465daa605ffe18db4606
msgid ""
"The ``add`` function adds two integers from the request and gives the sum"
" to the response, while notifying the console of its status using logs."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:133
#: 33da0c4ac0934184a3eeb54eba1a0822
msgid "The ``main`` function accomplishes the following, line by line:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:135
#: 03dbe58c2c0b4b7a885209be802edff8
msgid "Initializes ROS 2 C++ client library:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:141
#: 563b3853f93b46c1b52017ff6f2f88c2
msgid "Creates a node named ``add_two_ints_server``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:147
#: 64938f0ed3d3422baa0e56cffc271dc9
msgid ""
"Creates a service named ``add_two_ints`` for that node and automatically "
"advertises it over the networks with the ``&add`` method:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:154
#: f85e0b69eba4407a97985466c244df8d
msgid "Prints a log message when it's ready:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:160
#: 7a33417c2ede4bd7a7e8f09068896e8d
msgid "Spins the node, making the service available."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:169
#: 866949ee24304ee18a5295c3413b8d80
msgid ""
"The ``add_executable`` macro generates an executable you can run using "
"``ros2 run``. Add the following code block to ``CMakeLists.txt`` to "
"create an executable named ``server``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:177
#: 5b6173c324bb419c8f773a36f4cd73d9
msgid ""
"So ``ros2 run`` can find the executable, add the following lines to the "
"end of the file, right before ``ament_package()``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:185
#: a84680e4b5c0403387f0acb218e3ceac
msgid ""
"You could build your package now, source the local setup files, and run "
"it, but let's create the client node first so you can see the full system"
" at work."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:188
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:174
#: ae4c1f9d80d24a4c96952b5576dd47db ebd88fed1c5b4526aa553f71b568ba2b
msgid "3 Write the client node"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:190
#: 33910be8f9c34afd8ee824569f7dcf78
msgid ""
"Inside the ``ros2_ws/src/cpp_srvcli/src`` directory, create a new file "
"called ``add_two_ints_client.cpp`` and paste the following code within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:246
#: 8111ba93636146a2ad2ac1c9309bf9b6
msgid ""
"Similar to the service node, the following lines of code create the node "
"and then create the client for that node:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:254
#: 215fb9363381413796b64c9d98109a70
msgid ""
"Next, the request is created. Its structure is defined by the ``.srv`` "
"file mentioned earlier."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:263
#: 264b86767d944457a83fcdc60f19b6b5
msgid ""
"The ``while`` loop gives the client 1 second to search for service nodes "
"in the network. If it can't find any, it will continue waiting."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:270
#: 7f75711e7a3240c7bb28f659ecf1d25c
msgid ""
"If the client is canceled (e.g. by you entering ``Ctrl+C`` into the "
"terminal), it will return an error log message stating it was "
"interrupted."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:276
#: 04dbcb13bd4a4aeda11602a04279aa9f
msgid ""
"Then the client sends its request, and the node spins until it receives "
"its response, or fails."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:279
#: 1db1310dc6df43e8bfde85c88175ef28
msgid "3.2 Add executable"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:281
#: a7fea127473745a48db5c2c34cc91a12
msgid ""
"Return to ``CMakeLists.txt`` to add the executable and target for the new"
" node. After removing some unnecessary boilerplate from the automatically"
" generated file, your ``CMakeLists.txt`` should look like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:373
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:305
#: 58910163d7b44b0198336ae90092629d f0b053e984724f76b9c567d9f4520c16
msgid "Now run the service node:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:379
#: 86c01de3a7e240c09e377fe86a4e5df0
msgid "The terminal should return the following message, and then wait:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:385
#: 60e2d18fbae14be5889627604ef8f48e
msgid ""
"Open another terminal, source the setup files from inside ``ros2_ws`` "
"again. Start the client node, followed by any two integers separated by a"
" space:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:392
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:320
#: 05d7d5154cd545609bc91fae6a497e04 d39365ca087e4d26878c0a062b693c78
msgid ""
"If you chose ``2`` and ``3``, for example, the client would receive a "
"response like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:398
#: 91f3a0b5c2ec48d98cd55bdf3b1651ff
msgid ""
"Return to the terminal where your service node is running. You will see "
"that it published log messages when it received the request and the data "
"it received, and the response it sent back:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:407
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:334
#: 0883abe0810f4aa688399d0f31c31dc5 9f00a988d66540a48c82c03b4c526d24
msgid "Enter ``Ctrl+C`` in the server terminal to stop the node from spinning."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:412
#: 99d9f087d44447b0a70a1e86e493f45f
msgid ""
"You created two nodes to request and respond to data over a service. You "
"added their dependencies and executables to the package configuration "
"files so that you could build and run them, and see a service/client "
"system at work."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:418
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:346
#: 5a0bf33ae56b4a2d872790fcd948f054 d2f17bd037834d38b251ca95719edd95
msgid ""
"In the last few tutorials you've been utilizing interfaces to pass data "
"across topics and services. Next, you'll learn how to :doc:`create custom"
" interfaces <./Custom-ROS2-Interfaces>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.rst:424
#: 0272033402ef4704b12ab24826ef2309
msgid ""
"There are several ways you could write a service and client in C++; check"
" out the ``minimal_service`` and ``minimal_client`` packages in the "
"`ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp/services>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:8
#: 38384eb6c03443fab957837b6978bfdb
msgid "Writing a simple publisher and subscriber (Python)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:10
#: a01d0d1964fa47269b72433204cad1fd
msgid "**Goal:** Create and run a publisher and subscriber node using Python."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:23
#: 8f2ab85fb9cd426fab00661260cb00a0
msgid ""
"In this tutorial, you will create :doc:`nodes <../Beginner-CLI-Tools"
"/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes>` that pass "
"information in the form of string messages to each other over a "
":doc:`topic <../Beginner-CLI-Tools/Understanding-ROS2-Topics"
"/Understanding-ROS2-Topics>`. The example used here is a simple "
"\"talker\" and \"listener\" system; one node publishes data and the other"
" subscribes to the topic so it can receive that data."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:27
#: 716414c8c118464c8655bb55ce91454d
msgid ""
"The code used in these examples can be found `here "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclpy/topics>`__."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:34
#: 3e0d3f55d70f49fb8a12db88ffb978ad
msgid ""
"A basic understanding of Python is recommended, but not entirely "
"necessary."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:53
#: 66b3b755eacd4e6db546506eb5137863
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``py_pubsub`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:58
#: 0b53cccd0bca457c95859faccf8dba6a
msgid ""
"Navigate into ``ros2_ws/src/py_pubsub/py_pubsub``. Recall that this "
"directory is a `Python package "
"<https://docs.python.org/3/tutorial/modules.html#packages>`__ with the "
"same name as the ROS 2 package it's nested in."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:91
#: a09a165ca06d4faebce10c022aaea75d
msgid ""
"Now there will be a new file named ``publisher_member_function.py`` "
"adjacent to ``__init__.py``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:93
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:79
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:351
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:71
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:70
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:70
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:91
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:91
#: 36c78ba342944435b4d16c5e660adb54 75dd5f60427843fbbc7aa6d751a72527
#: 91634025d9d54ed0b09b1953871f231d a0d9231ab5ed4a2dae91bb4e2edddf20
#: c5e2e9fe0bc54a219842a55673c5f410 cd7ef2130f1f42c8b55f932e1137ca68
#: d1ad787abdb84d10b749880321160eb9 d249f712d1b641778520e463ac304e63
#: e6fb0d70a1cb4275a3ebcfef10d28875
msgid "Open the file using your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:141
#: f5b0bf105b254e20bf2a85e9746f11de
msgid ""
"The first lines of code after the comments import ``rclpy`` so its "
"``Node`` class can be used."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:148
#: e9e9e4daf5ef41258c629947dddc9034
msgid ""
"The next statement imports the built-in string message type that the node"
" uses to structure the data that it passes on the topic."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:154
#: bb7d705f018047e68a1c39ccd246f736
msgid ""
"These lines represent the node's dependencies. Recall that dependencies "
"have to be added to ``package.xml``, which you'll do in the next section."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:157
#: c9c4d588f5094234af965476216068aa
msgid ""
"Next, the ``MinimalPublisher`` class is created, which inherits from (or "
"is a subclass of) ``Node``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:163
#: 6f7e75a810744e49ac3d995880e98ee0
msgid ""
"Following is the definition of the class's constructor. "
"``super().__init__`` calls the ``Node`` class's constructor and gives it "
"your node name, in this case ``minimal_publisher``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:166
#: 0d35cce15b144fc1829bd3d4596fe7cd
msgid ""
"``create_publisher`` declares that the node publishes messages of type "
"``String`` (imported from the ``std_msgs.msg`` module), over a topic "
"named ``topic``, and that the \"queue size\" is 10. Queue size is a "
"required QoS (quality of service) setting that limits the amount of "
"queued messages if a subscriber is not receiving them fast enough."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:169
#: 29f1e390ec8c43ee91cf7a5813520ab9
msgid ""
"Next, a timer is created with a callback to execute every 0.5 seconds. "
"``self.i`` is a counter used in the callback."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:181
#: fcf8b0df970243c5b5fb28fdfb2b8501
msgid ""
"``timer_callback`` creates a message with the counter value appended, and"
" publishes it to the console with ``get_logger().info``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:192
#: 71c0f6ecc9f14cdb84cc20b037a3e64f
msgid "Lastly, the main function is defined."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:209
#: 5f5b8c2ab1484a528bd03302742f2cb5
msgid ""
"First the ``rclpy`` library is initialized, then the node is created, and"
" then it \"spins\" the node so its callbacks are called."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:214
#: 30f03394b9c842eb9edbe08919bd4c7c
msgid ""
"Navigate one level back to the ``ros2_ws/src/py_pubsub`` directory, where"
" the ``setup.py``, ``setup.cfg``, and ``package.xml`` files have been "
"created for you."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:226
#: b10a98e708904e4e9b15b8746d82ab20
msgid ""
"After the lines above, add the following dependencies corresponding to "
"your node's import statements:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:233
#: c152f69d991e41dfbe0d626535e6d26b
msgid ""
"This declares the package needs ``rclpy`` and ``std_msgs`` when its code "
"is executed."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:238
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:293
#: 047c462860c04559b3655b939b29db81 2f9eec59ed974c9e96f830fd91887406
msgid "2.3 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:263
#: 23cd08778cdd4084a50b01bd60d082b1
msgid "2.4 Check setup.cfg"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:265
#: d373abb3990b4a909177f3d703c8cab0
msgid ""
"The contents of the ``setup.cfg`` file should be correctly populated "
"automatically, like so:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:274
#: 7e73525a9cc24c6c983b87af229aa906
msgid ""
"This is simply telling setuptools to put your executables in ``lib``, "
"because ``ros2 run`` will look for them there."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:281
#: 2ea8999dcb9c4ff5ae6c6fd9bc230d48
msgid ""
"Return to ``ros2_ws/src/py_pubsub/py_pubsub`` to create the next node. "
"Enter the following code in your terminal:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:312
#: ef2ff3542e694a66a01301dea1018fe4
msgid "Now the directory should have these files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:321
#: 14b08ad2d1964611b6ebfcdf59ecd799
msgid "Open the ``subscriber_member_function.py`` with your text editor."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:363
#: d478f79f082a463b9431a25057846b22
msgid ""
"The subscriber node's code is nearly identical to the publisher's. The "
"constructor creates a subscriber with the same arguments as the "
"publisher. Recall from the :doc:`topics tutorial <../Beginner-CLI-Tools"
"/Understanding-ROS2-Topics/Understanding-ROS2-Topics>` that the topic "
"name and message type used by the publisher and subscriber must match to "
"allow them to communicate."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:375
#: 1faf96685d2f4549a0b22aefef8cd044
msgid ""
"The subscriber's constructor and callback don't include any timer "
"definition, because it doesn't need one. Its callback gets called as soon"
" as it receives a message."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:378
#: b7a639367d854fa7825e79dadf397d35
#, python-format
msgid ""
"The callback definition simply prints an info message to the console, "
"along with the data it received. Recall that the publisher defines "
"``msg.data = 'Hello World: %d' % self.i``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:386
#: 3e3b70c10cb24a5f82afe788e91fa577
msgid ""
"The ``main`` definition is almost exactly the same, replacing the "
"creation and spinning of the publisher with the subscriber."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:394
#: 1a76699fe6334707b89d94711f72b2aa
msgid ""
"Since this node has the same dependencies as the publisher, there's "
"nothing new to add to ``package.xml``. The ``setup.cfg`` file can also "
"remain untouched."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:399
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:240
#: 18307e5d3d5443abb570d27fe3edb134 eb54a851a584468c9164c02968c709d8
msgid "3.2 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:401
#: 98e73fc741ab43d39a53707ef6692474
msgid ""
"Reopen ``setup.py`` and add the entry point for the subscriber node below"
" the publisher's entry point. The ``entry_points`` field should now look "
"like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:417
#: b9298691250147978c67f60dae555d45
msgid ""
"You likely already have the ``rclpy`` and ``std_msgs`` packages installed"
" as part of your ROS 2 system. It's good practice to run ``rosdep`` in "
"the root of your workspace (``ros2_ws``) to check for missing "
"dependencies before building:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:519
#: 18b9a54221be49b48aecd15a418dc642
msgid ""
"You created two nodes to publish and subscribe to data over a topic. "
"Before running them, you added their dependencies and entry points to the"
" package configuration files."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:531
#: 0681eeb9207d4c0a82709ecc5243629e
msgid ""
"There are several ways you could write a publisher and subscriber in "
"Python; check out the ``minimal_publisher`` and ``minimal_subscriber`` "
"packages in the `ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclpy/topics>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:8
#: 229edeb99dd94790a79634bb557b38ec
msgid "Writing a simple service and client (Python)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:10
#: 3c35c2a40ed84850b56650fa85f3acbd
msgid "**Goal:** Create and run service and client nodes using Python."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:50
#: cf0c0e3462ad40a58532c4ee8ad01f43
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``py_srvcli`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:52
#: df4fcca5c90843e486c6caf1b84de5e9
msgid ""
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml``. ``example_interfaces`` is the "
"package that includes `the .srv file "
"<https://github.com/ros2/example_interfaces/blob/{REPOS_FILE_BRANCH}/srv/AddTwoInts.srv>`__"
" you will need to structure your requests and responses:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:67
#: 362c981fe8db49f28b2b53965eef3b0b
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don't have to manually add dependencies to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:78
#: 6a9e820b8b0a4e47aec614b2e0c6e9c6
msgid "1.2 Update ``setup.py``"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:80
#: 8db9b37118e6416d8c14c7eb805a95c2
msgid ""
"Add the same information to the ``setup.py`` file for the ``maintainer``,"
" ``maintainer_email``, ``description`` and ``license`` fields:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:92
#: dc7c88015f4f490694b7447b47caac03
msgid ""
"Inside the ``ros2_ws/src/py_srvcli/py_srvcli`` directory, create a new "
"file called ``service_member_function.py`` and paste the following code "
"within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:131
#: a4ce656db3064c669072553b779c1ebe
msgid ""
"The first ``import`` statement imports the ``AddTwoInts`` service type "
"from the ``example_interfaces`` package. The following ``import`` "
"statement imports the ROS 2 Python client library, and specifically the "
"``Node`` class."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:141
#: 2dac9bc02fba4b6cac26a934b8c22438
msgid ""
"The ``MinimalService`` class constructor initializes the node with the "
"name ``minimal_service``. Then, it creates a service and defines the "
"type, name, and callback."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:150
#: fcdbc02cc097482e8d4b6102241e5848
msgid ""
"The definition of the service callback receives the request data, sums "
"it, and returns the sum as a response."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:160
#: 9a2ae6b6dd5a4f7caf562c60e0267d52
msgid ""
"Finally, the main class initializes the ROS 2 Python client library, "
"instantiates the ``MinimalService`` class to create the service node and "
"spins the node to handle callbacks."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:165
#: cd61dd8cbede43d0819bd2546c599c0b
msgid ""
"To allow the ``ros2 run`` command to run your node, you must add the "
"entry point to ``setup.py`` (located in the ``ros2_ws/src/py_srvcli`` "
"directory)."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:167
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:265
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:297
#: 858e4a87701146c5bf082533f28b63d7 8e7a70800fdb459eae65728a5769ccb0
#: d5652d1a88654302bbad20a0c235cac9
msgid "Add the following line between the ``'console_scripts':`` brackets:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:176
#: 8cc6259603d5408489676487d9ff85f5
msgid ""
"Inside the ``ros2_ws/src/py_srvcli/py_srvcli`` directory, create a new "
"file called ``client_member_function.py`` and paste the following code "
"within:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:224
#: 92c0721a241244928a0e504a9fb32928
msgid ""
"The only different ``import`` statement for the client is ``import sys``."
" The client node code uses `sys.argv "
"<https://docs.python.org/3/library/sys.html#sys.argv>`__ to get access to"
" command line input arguments for the request."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:227
#: 23f0b525793e4b29ba2fd15870f51ed7
msgid ""
"The constructor definition creates a client with the same type and name "
"as the service node. The type and name must match for the client and "
"service to be able to communicate."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:230
#: d1363cf882044fa7b009e15787a72d19
msgid ""
"The ``while`` loop in the constructor checks if a service matching the "
"type and name of the client is available once a second."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:232
#: af88b9250c51466e80a363a46a523075
msgid "Below the constructor is the request definition, followed by ``main``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:234
#: 36d36884c5fe45d0915ebcd42c1bd7c1
msgid ""
"The only significant difference in the client's ``main`` is the ``while``"
" loop. The loop checks the ``future`` to see if there is a response from "
"the service, as long as the system is running. If the service has sent a "
"response, the result will be written in a log message."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:242
#: 62e5815a9810483ebea457a5146a8dc5
msgid ""
"Like the service node, you also have to add an entry point to be able to "
"run the client node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:244
#: 276db56ee98b44029d1c1e5cb8a62a0a
msgid ""
"The ``entry_points`` field of your ``setup.py`` file should look like "
"this:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:311
#: a9f13a2202bc4e1dbb410f9493df6045
msgid "The node will wait for the client's request."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:313
#: 842d4adeb0a54d648ec88e66e585ed74
msgid ""
"Open another terminal and source the setup files from inside ``ros2_ws`` "
"again. Start the client node, followed by any two integers separated by a"
" space:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:326
#: 765cb3ea0f454481b57c3847a2e9a2f8
msgid ""
"Return to the terminal where your service node is running. You will see "
"that it published log messages when it received the request:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:340
#: 42ac617752e946048e7e1a98f35caeee
msgid ""
"You created two nodes to request and respond to data over a service. You "
"added their dependencies and executables to the package configuration "
"files so that you could build and run them, allowing you to see a "
"service/client system at work."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:352
#: 3e1fb4c389ec4e67a2f45f634967df96
msgid ""
"There are several ways you could write a service and client in Python; "
"check out the ``minimal_client`` and ``minimal_service`` packages in the "
"`ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclpy/services>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:354
#: 75e939a0b2aa4a24aa9e512c702cdb02
msgid ""
"In this tutorial, you used the ``call_async()`` API in your client node "
"to call the service. There is another service call API available for "
"Python called synchronous calls. We do not recommend using synchronous "
"calls, but if you'd like to learn more about them, read the guide to "
":doc:`Synchronous vs. asynchronous clients <../../How-To-Guides/Sync-Vs-"
"Async>`."
msgstr ""

#: ../../source/Tutorials/Demos.rst:2 fc4f7e0fd5734c2294d5a30ecdd5e719
msgid "Demos"
msgstr ""

#: ../../source/Tutorials/Demos.rst:17 5de1652e63fa4df984cffa72c107bd56
msgid "External resources"
msgstr ""

#: ../../source/Tutorials/Demos.rst:19 95edc156b83640ab9af2aa0d462c47c9
msgid ""
"`Bridging communication between ROS 1 and ROS 2 "
"<https://github.com/ros2/ros1_bridge/blob/master/README.md>`__"
msgstr ""

#: ../../source/Tutorials/Demos.rst:20 1b53b0b7179c4c98b9802f9e126efdc0
msgid ""
"`Motion planning for a MoveIt 2 arm "
"<https://moveit.picknik.ai/main/index.html>`__"
msgstr ""

#: ../../source/Tutorials/Demos.rst:21 a258febe3e2141f8b33392df04b21a25
msgid "Using Turtlebot 3 (community-contributed)"
msgstr ""

#: ../../source/Tutorials/Demos.rst:23 784b36e9f03344a991cddfcbb20230e4
msgid ""
"`Getting started <https://emanual.robotis.com/docs/en/platform/turtlebot3"
"/quick-start/>`__"
msgstr ""

#: ../../source/Tutorials/Demos.rst:24 b9c4f11cfac94f96adede8d5ecfd0342
msgid "`Simulating <https://ubuntu.com/blog/simulate-the-turtlebot3>`__"
msgstr ""

#: ../../source/Tutorials/Demos.rst:25 6b4da955ac7b4f1d92c7f92a7830b796
msgid ""
"`Navigating in simulation "
"<https://github.com/cyberbotics/webots_ros2/wiki/Navigate-TurtleBot3>`__"
msgstr ""

#: ../../source/Tutorials/Demos.rst:26 656447ca0e6b42559997cdac58ec17cf
msgid ""
"`Learning SLAM in simulation "
"<https://github.com/cyberbotics/webots_ros2/wiki/SLAM-with-TurtleBot3>`__"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:6
#: 90dfa1c6c49a4f4287c84e6768360c1a
msgid "Creating a content filtering subscription"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:8
#: ae4dc828fe2044b2a07e0c70a9bc1992
msgid "**Goal:** Create a content filtering subscription."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:21
#: b6728fec2b9045fbb1faee675f829f02
msgid ""
"ROS 2 applications typically consist of topics to transmit data from "
"publishers to subscriptions. Basically, subscriptions receive all "
"published data from publishers on the topic. But sometimes, a "
"subscription might be interested in only a subset of the data which is "
"being sent by publishers. A content filtering subscription allows to "
"receive only the data of interest for the application."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:26
#: 76024c9832e142d9ad2b2535cfa5648a
msgid ""
"In this demo, we'll be highlighting how to create a content filtering "
"subscription and how they work."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:29
#: b87a867b624d4f80ac809f67ca7be514
msgid "RMW Support"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:31
#: 36fa9238db7d4cc687bf300388298d27
msgid "Content filtering subscriptions require RMW implementation support."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:33
#: 16eb516584ed445a9747668199a2ba48
msgid "Content-Filtering-Subscription Support Status"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:36
#: 52ef43d2063f40e181ab8460ecece1ca
msgid "rmw_fastrtps"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:37
#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:39
#: 243d54842b1044dcb114e9f8b14018f4 9c65582800ee4efc896ef99dbf3e8273
msgid "supported"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:38
#: 9b9bdf9d48e847f3a696431fedcdc9db
msgid "rmw_connextdds"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:40
#: fbdc9ec0731043cbb49259010f4b737f
msgid "rmw_cyclonedds"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:41
#: 9f35bb83cb674612b3421a2a410d1e8b
msgid "not supported"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:43
#: 511b587d7586431e968992cdbf745d61
msgid ""
"Currently all RMW implementations that support content filtering "
"subscriptions are `DDS <https://www.omg.org/omg-dds-portal/>`__ based. "
"That means that the supported filtering expressions and parameters are "
"also dependent on `DDS <https://www.omg.org/omg-dds-portal/>`__, you can "
"refer to `DDS specification <https://www.omg.org/spec/DDS/1.4/PDF>`__ "
"``Annex B - Syntax for Queries and Filters`` for details."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:47
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:21
#: 85ec34739aed41c3a7760ec6606465aa eddcf43c56f44c1dbd6c6ec0b6c02b61
msgid "Installing the demo"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:49
#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:26
#: 7c133a6abccf477094d8782c42894c9a d0bef0c6cdec442fb1fe5b0bc76e1ef1
msgid ""
"See the :doc:`installation instructions <../../Installation>` for details"
" on installing ROS 2."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:51
#: 19ac5c7d629d400186ae5390105a87ca
msgid ""
"If you've installed ROS 2 from packages, ensure that you have "
"``ros-{DISTRO}-demo-nodes-cpp`` installed. If you downloaded the archive "
"or built ROS 2 from source, it will already be part of the installation."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:55
#: 4a582c6471f547f2bd262661735c7109
msgid "Temperature filtering demo"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:57
#: dacdd65048654023a7d047e3fdf3e6ba
msgid ""
"This demo shows how a content filtering subscription can be used to only "
"receive temperature values that are out of the acceptable temperature "
"range, detecting emergencies. The content filtering subscription filters "
"out the uninteresting temperature data, so that the subscription callback"
" is not issued."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:60
#: 851e92247d3448a8b5e2236bdc6429fd
msgid "ContentFilteringPublisher:"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:62
#: 0c70f2303dd2447987cd154c3cfd9fc1
msgid "https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/topics/content_filtering_publisher.cpp"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:130
#: 17d2137673174b4fb59b3dde1f64a660
msgid ""
"The content filter is defined in the subscription side, publishers don't "
"need to be configured in any special way to allow content filtering. The "
"``ContentFilteringPublisher`` node publishes simulated temperature data "
"starting from -100.0 and ending at 150.0 with a step size of 10.0 every "
"second."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:133
#: 74c2a5a2ea0a403a9ce723387e00e84c
msgid ""
"We can run the demo by running the ``ros2 run demo_nodes_cpp "
"content_filtering_publisher`` executable (don't forget to source the "
"setup file first):"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:169
#: b9a05c46383c432c8b062b34c1d82249
msgid "ContentFilteringSubscriber:"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:171
#: 84482a8691b249e1934178d41d6fa917
msgid "https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/topics/content_filtering_subscriber.cpp"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:241
#: 2aa22f1ea8f741f08ceacc54d9918424
msgid ""
"To enable content filtering, applications can set the filtering "
"expression and the expression parameters in ``SubscriptionOptions``. The "
"application can also check if content filtering is enabled on the "
"subscription."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:244
#: db63c0e57e4f42c8b9d332234c9816e1
msgid ""
"In this demo, the ``ContentFilteringSubscriber`` node creates a content "
"filtering subscription that receives a message only if the temperature "
"value is less than -30.0 or greater than 100.0."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:246
#: 417cbb7bf8464bac815d06e3addbe8c5
msgid ""
"As commented before, content filtering subscription support depends on "
"the RMW implementation. Applications can use the ``is_cft_enabled`` "
"method to check if content filtering is actually enabled on the "
"subscription."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:249
#: 930cce0b3e3345b49580cead9742b856
msgid "To test content filtering subscription, let's run it:"
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:275
#: 69671c42cbdc4e4a92bb499d960353b6
msgid ""
"You should see a message showing the content filtering options used and "
"logs for each message received only if the temperature value is less than"
" -30.0 or greater than 100.0."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:277
#: 08ab7ac263ae4ccbbec62a6001aeab28
msgid ""
"If content filtering is not supported by the RMW implementation, the "
"subscription will still be created without content filtering enabled. We "
"can try that by executing ``RMW_IMPLEMENTATION=rmw_cyclonedds_cpp ros2 "
"run demo_nodes_cpp content_filtering_publisher``."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:302
#: 8fed0cca6d464f189adeac678e765c14
msgid ""
"You can see the message ``Content filter is not enabled`` because "
"underlying RMW implementation does not support the feature, but the demo "
"still successfully creates the normal subscription to receive all "
"temperature data."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:307
#: ffb4f9cfa03340f88d09abfe4772176f
msgid ""
"`content filtering examples "
"<https://github.com/ros2/examples/blob/{REPOS_FILE_BRANCH}/rclcpp/topics/minimal_subscriber/content_filtering.cpp>`__"
" that covers all interfaces for content filtering subscription."
msgstr ""

#: ../../source/Tutorials/Demos/Content-Filtering-Subscription.rst:308
#: b77abab784ec4bfa916ac5da0a45c262
msgid "`content filtering design PR <https://github.com/ros2/design/pull/282>`__"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:7
#: 7776be6683b641ce9f2f5e412d256016
msgid "Setting up efficient intra-process communication"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:16
#: 3bcc863c1624414ea6cd849acf17f85e
msgid ""
"ROS applications typically consist of a composition of individual "
"\"nodes\" which perform narrow tasks and are decoupled from other parts "
"of the system. This promotes fault isolation, faster development, "
"modularity, and code reuse, but it often comes at the cost of "
"performance. After ROS 1 was initially developed, the need for efficient "
"composition of nodes became obvious and Nodelets were developed. In ROS 2"
" we aim to improve on the design of Nodelets by addressing some "
"fundamental problems that required restructuring of nodes."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:21
#: a5cc182b54124edd934daf93ab9d448e
msgid ""
"In this demo we'll be highlighting how nodes can be composed manually, by"
" defining the nodes separately but combining them in different process "
"layouts without changing the node's code or limiting its abilities."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:24
#: 2292c71293934479b25143c461e3e0b3
msgid "Installing the demos"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:28
#: 461db8db325649d784a48a969424966a
msgid ""
"If you've installed ROS 2 from packages, ensure that you have "
"``ros-{DISTRO}-intra-process-demo`` installed. If you downloaded the "
"archive or built ROS 2 from source, it will already be part of the "
"installation."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:32
#: 782c2d1328cc44f3b00c8fa5c4e7e0b8
msgid "Running and understanding the demos"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:34
#: c7be07f9358740a3924cbec561ed3051
msgid ""
"There are a few different demos: some are toy problems designed to "
"highlight features of the intra process communications functionality and "
"some are end to end examples which use OpenCV and demonstrate the ability"
" to recombine nodes into different configurations."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:37
#: 43573f1820eb45feb7f298864e8769d0
msgid "The two node pipeline demo"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:39
#: fa7e00f76fed4873abc4142fa0498850
msgid ""
"This demo is designed to show that the intra process publish/subscribe "
"connection can result in zero-copy transport of messages when publishing "
"and subscribing with ``std::unique_ptr``\\ s."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:41
#: 136f3de1e82f45d2a9dbfaa284cc9271
msgid "First let's take a look at the source:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:43
#: 2f7cc53f27294045b448191bd7c5ae6a
msgid "https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/intra_process_demo/src/two_node_pipeline/two_node_pipeline.cpp"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:127
#: edce8b68a599482b8718b79afc6072aa
msgid ""
"As you can see by looking at the ``main`` function, we have a producer "
"and a consumer node, we add them to a single threaded executor, and then "
"call spin."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:129
#: 270ae52eb5724b8fbf3ee967fa6272f3
msgid ""
"If you look at the \"producer\" node's implementation in the ``Producer``"
" struct, you can see that we have created a publisher which publishes on "
"the \"number\" topic and a timer which periodically creates a new "
"message, prints out its address in memory and its content's value and "
"then publishes it."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:131
#: 184abf9fb00a488c8223fd2d98444ed0
msgid ""
"The \"consumer\" node is a bit simpler, you can see its implementation in"
" the ``Consumer`` struct, as it only subscribes to the \"number\" topic "
"and prints the address and value of the message it receives."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:133
#: a1019d5bd2864a5fa65c3aa0a8ab16c8
msgid ""
"The expectation is that the producer will print out an address and value "
"and the consumer will print out a matching address and value. This "
"demonstrates that intra process communication is indeed working and "
"unnecessary copies are avoided, at least for simple graphs."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:136
#: 807df90b1d3a4e2eb58ec4e25a213bfc
msgid ""
"Let's run the demo by executing ``ros2 run intra_process_demo "
"two_node_pipeline`` executable (don't forget to source the setup file "
"first):"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:154
#: 055a11e806f8443a925c1cbf4ba287a7
msgid ""
"One thing you'll notice is that the messages tick along at about one per "
"second. This is because we told the timer to fire at about once per "
"second."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:157
#: 675da3dae3fc45dabfbe63f7bcddb789
msgid ""
"Also you may have noticed that the first message (with value ``0``) does "
"not have a corresponding \"Received message ...\" line. This is because "
"publish/subscribe is \"best effort\" and we do not have any \"latching\" "
"like behavior enabled. This means that if the publisher publishes a "
"message before the subscription has been established, the subscription "
"will not receive that message. This race condition can result in the "
"first few messages being lost. In this case, since they only come once "
"per second, usually only the first message is lost."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:163
#: e83040ca916e4a48815e59a6bfcea5f9
msgid ""
"Finally, you can see that \"Published message...\" and \"Received message"
" ...\" lines with the same value also have the same address. This shows "
"that the address of the message being received is the same as the one "
"that was published and that it is not a copy. This is because we're "
"publishing and subscribing with ``std::unique_ptr``\\ s which allow "
"ownership of a message to be moved around the system safely. You can also"
" publish and subscribe with ``const &`` and ``std::shared_ptr``, but "
"zero-copy will not occur in that case."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:169
#: 6999a4e025c9457d89b2bf1c0e2bc216
msgid "The cyclic pipeline demo"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:171
#: ea713a81445647b0a106e4ec0ca4977e
msgid ""
"This demo is similar to the previous one, but instead of the producer "
"creating a new message for each iteration, this demo only ever uses one "
"message instance. This is achieved by creating a cycle in the graph and "
"\"kicking off\" communication by externally making one of the nodes "
"publish before spinning the executor:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:174
#: a0493d45ebcf40ac89aabe9df45c3b15
msgid "https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/intra_process_demo/src/cyclic_pipeline/cyclic_pipeline.cpp"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:256
#: 29cafa419e8d417889f6005766948f8a
msgid ""
"Unlike the previous demo, this demo uses only one Node, instantiated "
"twice with different names and configurations. The graph ends up being "
"``pipe1`` -> ``pipe2`` -> ``pipe1`` ... in a loop."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:259
#: 308e5c5581314acc98455780caeebcb8
msgid ""
"The line ``pipe1->pub->publish(msg);`` kicks the process off, but from "
"then on the messages are passed back and forth between the nodes by each "
"one calling publish within its own subscription callback."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:261
#: 05b40796b85f46c9910fbbaccbe6842d
msgid ""
"The expectation here is that the nodes pass the message back and forth, "
"once a second, incrementing the value of the message each time. Because "
"the message is being published and subscribed to as a ``unique_ptr`` the "
"same message created at the beginning is continuously used."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:264
#: 7f0e256446c14acd8edfad0b51692353
msgid "To test those expectations, let's run it:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:294
#: 4efbe8ef9613488282c19c367e60bde6
msgid ""
"You should see ever increasing numbers on each iteration, starting with "
"42... because 42, and the whole time it reuses the same message, as "
"demonstrated by the pointer addresses which do not change, which avoids "
"unnecessary copies."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:297
#: 1b72a2ecba7f490daa13824218f8cb13
msgid "The image pipeline demo"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:299
#: 194c81e5f97049feb1b43d1886a96c99
msgid "In this demo we'll use OpenCV to capture, annotate, and then view images."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:303
#: d44560efe74747b8ada158c0fe0c845b
msgid ""
"If you are on macOS and these examples do not work or you receive an "
"error like ``ddsi_conn_write failed -1``, then you'll need to increase "
"your system wide UDP packet size:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:310
#: 08708e16caa54a0e8b357b959c57fbaa
msgid "These changes will not persist after a reboot."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:313
#: 67d2b5821d3b4a088645ae3d19efb611
msgid "Simple pipeline"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:315
#: 8750ffa4b9d74d2482c655bd5f245ece
msgid ""
"First we'll have a pipeline of three nodes, arranged as such: "
"``camera_node`` -> ``watermark_node`` -> ``image_view_node``"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:317
#: 9633684749e8436a839f7adafc5561e1
msgid ""
"The ``camera_node`` reads from camera device ``0`` on your computer, "
"writes some information on the image and publishes it. The "
"``watermark_node`` subscribes to the output of the ``camera_node`` and "
"adds more text before publishing it too. Finally, the ``image_view_node``"
" subscribes to the output of the ``watermark_node``, writes more text to "
"the image and then visualizes it with ``cv::imshow``."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:321
#: 331c1879cd114673895953e4850c4757
msgid ""
"In each node the address of the message which is being sent, or which has"
" been received, or both, is written to the image. The watermark and image"
" view nodes are designed to modify the image without copying it and so "
"the addresses imprinted on the image should all be the same as long as "
"the nodes are in the same process and the graph remains organized in a "
"pipeline as sketched above."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:326
#: bbe49258e3ff4fca866850058545fa24
msgid ""
"On some systems (we've seen it happen on Linux), the address printed to "
"the screen might not change. This is because the same unique pointer is "
"being reused. In this situation, the pipeline is still running."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:329
#: 264665be07f14b3f9f4d04c2e0f70bf5
msgid "Let's run the demo by executing the following executable:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:335
#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:128
#: c8ae4e45a6444443b4698a44bcc02331 fb0a4b0a6eea4f08ab546a13908e7bd9
msgid "You should see something like this:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:341
#: 962e00e7f0834f11bb9543323c06db36
msgid ""
"You can pause the rendering of the image by pressing the spacebar and you"
" can resume by pressing the spacebar again. You can also press ``q`` or "
"``ESC`` to exit."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:344
#: ef70a5ab5877458b9e619c031d743396
msgid ""
"If you pause the image viewer, you should be able to compare the "
"addresses written on the image and see that they are the same."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:347
#: cb4d44175a9b423e8f7ae889abc73886
msgid "Pipeline with two image viewers"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:349
#: f991539419aa47738f2c1349e95ca0a3
msgid ""
"Now let's look at an example just like the one above, except it has two "
"image view nodes. All the nodes are still in the same process, but now "
"two image view windows should show up. (Note for macOS users: your image "
"view windows might be on top of each other). Let's run it with the "
"command:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:361
#: 90a62ba2676a4703bf584dedcf353bc7
msgid ""
"Just like the last example, you can pause the rendering with the spacebar"
" and continue by pressing the spacebar a second time. You can stop the "
"updating to inspect the pointers written to the screen."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:363
#: 936c387b2d4746f588c09fedf3249f14
msgid ""
"As you can see in the example image above, we have one image with all of "
"the pointers the same and then another image with the same pointers as "
"the first image for the first two entries, but the last pointer on the "
"second image is different. To understand why this is happening consider "
"the graph's topology:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:370
#: e7841064f28c45729a0051b1f7583404
msgid ""
"The link between the ``camera_node`` and the ``watermark_node`` can use "
"the same pointer without copying because there is only one intra process "
"subscription to which the message should be delivered. But for the link "
"between the ``watermark_node`` and the two image view nodes the "
"relationship is one to many, so if the image view nodes were using "
"``unique_ptr`` callbacks then it would be impossible to deliver the "
"ownership of the same pointer to both. It can be, however, delivered to "
"one of them. Which one would get the original pointer is not defined, but"
" instead is simply the last to be delivered."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:372
#: 662d6e40f37d4f21b305a634d3547c7a
msgid ""
"Note that the image view nodes are not subscribed with ``unique_ptr`` "
"callbacks. Instead they are subscribed with ``const shared_ptr``\\ s. "
"This means the system deliveres the same ``shared_ptr`` to both "
"callbacks. When the first intraprocess subscription is handled, the "
"internally stored ``unique_ptr`` is promoted to a ``shared_ptr``. Each of"
" the callbacks will receive shared ownership of the same message."
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:375
#: 23cbd3d244b344f3a28638237c533d29
msgid "Pipeline with interprocess viewer"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:377
#: ce32e56f69434891867482c9a564f547
msgid ""
"One other important thing to get right is to avoid interruption of the "
"intra process zero-copy behavior when interprocess subscriptions are "
"made. To test this we can run the first image pipeline demo, "
"``image_pipeline_all_in_one``, and then run an instance of the stand "
"alone ``image_view_node`` (don't forget to prefix them with ``ros2 run "
"intra_process_demo`` in the terminal). This will look something like "
"this:"
msgstr ""

#: ../../source/Tutorials/Demos/Intra-Process-Communication.rst:383
#: 98389c36ea67425aa82f2c9132ee21fd
msgid ""
"It's hard to pause both images at the same time so the images may not "
"line up, but the important thing to notice is that the "
"``image_pipeline_all_in_one`` image view shows the same address for each "
"step. This means that the intra process zero-copy is preserved even when "
"an external view is subscribed as well. You can also see that the "
"interprocess image view has different process IDs for the first two lines"
" of text and the process ID of the standalone image viewer in the third "
"line of text."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:7
#: 37e7c5692482469583eaa21567ebd74a
msgid "Logging"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:13
#: 99c1128c5f1e4386a9742d33467c5532
msgid ""
"See `the logging page <../../Concepts/Intermediate/About-Logging>` for "
"details on available functionality."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:16
#: 72ee08751c404ff9910ed28c4d867310
msgid "Using log statements in code"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:19
#: 701810fb6e194fa897de40c105b5ebe8
msgid "Basic logging"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:21
#: 4b27aefbe2b543e49d3c6f1038113e8b
msgid ""
"The following code will output a log message from a ROS 2 node at "
"``DEBUG`` severity:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:41
#: dc63fda0e6454fca9c2bb2497b572536
msgid ""
"Note that in both cases, no trailing newline is added, as the logging "
"infrastructure will automatically add one."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:44
#: 27454408d482406c9a670114a3f3b61c
msgid "Logging only the first time"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:46
#: 06476431cd654c3fb952709795c4770e
msgid ""
"The following code will output a log message from a ROS 2 node at "
"``INFO`` severity, but only the first time it is hit:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:68
#: 702a4232f606423386d5d15e949a24bb
msgid "Logging all but the first time"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:70
#: 5fbf4de3ae9247a7aeb21d140a2c08bc
msgid ""
"The following code will output a log message from a ROS 2 node at "
"``WARN`` severity, but not the very first time it is hit:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:92
#: ae64f2b7144f4f7cb37d227ce8d1322a
msgid "Logging throttled"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:94
#: 5033ef1201c649ab89c2b7ac73a23c37
msgid ""
"The following code will output a log message from a ROS 2 node at "
"``ERROR`` severity, but no more than once per second."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:96
#: 37c441a5602c4c63a49c2aff7bfb2960
msgid ""
"The interval parameter specifying milliseconds between messages should "
"have an integer data type so it can be converted to a "
"``rcutils_duration_value_t`` (an ``int64_t``):"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:121
#: 73a592c34a1c41d59ecda15712987eeb
msgid "Logging throttled all but the first time"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:123
#: 22a5b70d2c53468685eaeed6db98b14c
msgid ""
"The following code will output a log message from a ROS 2 node at "
"``DEBUG`` severity, no more than once per second, skipping the very first"
" time it is hit:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:144
#: 76358c9f5cf243689ebe06c94e0398a1
msgid "Logging demo"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:146
#: 9b2c57dc8ca54fb6924f06b7e1505f74
msgid ""
"In this `demo "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/logging_demo>`_, "
"different types of log calls are shown and the severity level of "
"different loggers is configured locally and externally."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:148
#: 8c127c40573449eeb5e5cda85acc717b
msgid "Start the demo with:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:154
#: e537f6e8efa94118b69c38d799815ccd
msgid ""
"Over time you will see output from various log calls with different "
"properties. To start with you will only see output from log calls with "
"severity ``INFO`` and above (``WARN``, ``ERROR``, ``FATAL``). Note that "
"the first message will only be logged once, though the line is reached on"
" each iteration, as that is a property of the log call used for that "
"message."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:159
#: 03d1921e19954540b0e13f3d6eb628a2
msgid "Logging directory configuration"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:161
#: f5a1aa3b007c44939c851db26401b68b
msgid ""
"The logging directory can be configured through two environment "
"variables: ``ROS_LOG_DIR`` and ``ROS_HOME``. The logic is as follows:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:164
#: d72418e9305d4f55a9b6b943563ee57c
msgid "Use ``$ROS_LOG_DIR`` if ``ROS_LOG_DIR`` is set and not empty."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:165
#: 3a3c1279d4f84a7aae745b3c31e3ca1a
msgid ""
"Otherwise, use ``$ROS_HOME/log``, using ``~/.ros`` for ``ROS_HOME`` if "
"not set or if empty."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:167
#: 5a9d0c2c6dd54891b1d379dbbfac56d2
msgid "For example, to set the logging directory to ``~/my_logs``:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:192
#: d5373674cf1d49359706b58b53173853
msgid "You will then find the logs under ``~/my_logs/``."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:194
#: e57a21576cc140038d163b219f440a3a
msgid ""
"Alternatively, you can set ``ROS_HOME`` and the logging directory will be"
" relative to it (``$ROS_HOME/log``). ``ROS_HOME`` is intended to be used "
"by anything that needs a base directory. Note that ``ROS_LOG_DIR`` has to"
" be either unset or empty. For example, with ``ROS_HOME`` set to "
"``~/my_ros_home``:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:222
#: 445bd51113bd4d27967ae234b023c4b1
msgid "You will then find the logs under ``~/my_ros_home/log/``."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:225
#: ee19043d4b0649e5b60acf553e78f425
msgid "Logger level configuration: programmatically"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:227
#: b78f00bad59c4e91b0f426b84cf11cd6
msgid ""
"After 10 iterations the level of the logger will be set to ``DEBUG``, "
"which will cause additional messages to be logged."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:229
#: 3e605ef4e3cd4a26a4b43fd8473e68dd
msgid ""
"Some of these debug messages cause additional functions/expressions to be"
" evaluated, which were previously skipped as ``DEBUG`` log calls were not"
" enabled. See `the source code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/logging_demo/src/logger_usage_component.cpp>`__"
" of the demo for further explanation of the calls used, and see the "
"rclcpp logging documentation for a full list of supported logging calls."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:233
#: 372e52f1b441422db94d46e735d810a8
msgid "Logger level configuration: externally"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:235
#: e3e45da5906e478aac81fdada498a16f
msgid ""
"ROS 2 nodes have services available to configure the logging level "
"externally at runtime. These services are disabled by default. The "
"following code shows how to enable the logger service while creating the "
"node."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:255
#: 4ca8c68a59844c4b95d917dd63e2ec3a
msgid ""
"If you run one of the nodes as configured above, you will find 2 services"
" when running ``ros2 service list``:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:265
#: 3e60831f9de6456d8856391ad923c171
msgid "get_logger_levels"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:267
#: 1238575c76de49cab3c241f07303b0bc
msgid "Use this service to get logger levels for specified logger names."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:269
#: 6645a4911fe44a949bb62af2bfd262f3
msgid ""
"Run ``ros2 service call`` to get logger levels for "
"``NodeWithLoggerService`` and ``rcl``."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:280
#: 89fc46a84cd04ae49263cecbf30e9c86
msgid "set_logger_levels"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:282
#: 324dc380c6774ae4a60daae90c5aa835
msgid "Use this service to set logger levels for specified logger names."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:284
#: 3fac232299fd42da96add966d8a20af7
msgid ""
"Run ``ros2 service call`` to set logger levels for "
"``NodeWithLoggerService`` and ``rcl``."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:296
#: c5ea8ace20b34c8cab4af776dc55b70a
msgid ""
"There is also demo code showing how to set or get the logger level via "
"the logger service."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:298
#: 4e4ce133e87d4e22901415fcdd2ba332
msgid ""
"rclcpp: `demo code "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/logging/use_logger_service.cpp>`__"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:304
#: 8dae45e29e06424e9b2c4aef79d98781
msgid ""
"rclpy: `demo code "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/demo_nodes_py/demo_nodes_py/logging/use_logger_service.py>`__"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:312
#: b30296b0b1334211a484ac1bcb1c84df
msgid ""
"Currently, there is a limitation that ``get_logger_levels`` and "
"``set_logger_levels`` services are not thread-safe. This means that you "
"need to ensure that only one thread is calling the services at a time. "
"Please see the details in https://github.com/ros2/rcutils/issues/397"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:317
#: ef1a0eaa1d1f4709bc01ec9b752c28ee
msgid "Using the logger config component"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:319
#: ca9253077658467e8ef5e4cd399a3177
msgid ""
"The server that responds to the logger configuration requests has been "
"developed as a component so that it may be added to an existing "
"composition-based system. For example, if you are using `a container to "
"run your nodes <../Intermediate/Composition>`, to be able to configure "
"your loggers you only need to request that it additionally load the "
"``logging_demo::LoggerConfig`` component into the container."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:322
#: e20d194e29464192953395cbbae78650
msgid ""
"As an example, if you want to debug the ``composition::Talker`` demo, you"
" can start the talker as normal with:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:324
#: 38ab6c401cc6468dbf4aea9579ca5304
msgid "Shell 1:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:330
#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:347
#: 9f8a797b56d4434dbb25df8fae16bb68 e7a04ed5ca22486dacf79a110aa78e69
msgid "Shell 2:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:336
#: e3bebf46f0794c39b6b49371c28c7f45
msgid ""
"And then when you want to enable debug logging, load the ``LoggerConfig``"
" component with:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:338
#: 12bef9cda77a469bbf806fb3d6ff6909
msgid "Shell 2"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:344
#: f22ee78663c34f76b8441ea2fc17f619
msgid ""
"And finally, configure all unset loggers to the debug severity by "
"addressing the empty-named logger. Note that loggers that have been "
"specifically configured to use a particular severity will not be affected"
" by this call."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:353
#: 0de8858acc924ed4a2bfd8dcf3aed67e
msgid ""
"You should see debug output from any previously unset loggers in the "
"process start to appear, including from the ROS 2 core."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:356
#: cc265fae4d9a45ac89487ba764f32b40
msgid "Logger level configuration: command line"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:358
#: aa4c4f0e8e5344fd91bc7990155306cd
msgid ""
"As of the Bouncy ROS 2 release, the severity level for loggers that have "
"not had their severity set explicitly can be configured from the command "
"line. Restart the demo including the following command line argument:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:366
#: 02102f69a01a461b99f9ce5fd8318edd
msgid ""
"This configures the default severity for any unset logger to the debug "
"severity level. You should see debug output from loggers from the demo "
"itself and from the ROS 2 core."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:369
#: 567e50947aa74bae86f508dace0144ce
msgid ""
"The severity level for individual loggers can be configured from the "
"command-line. Restart the demo including the following command line "
"arguments:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:378
#: 5a48f8839a3c4dc3a4e258ea504d0938
msgid "Console output formatting"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:380
#: e397019199954c8096f8435b6e88bc92
msgid ""
"If you would like more or less verbose formatting, you can use "
"RCUTILS_CONSOLE_OUTPUT_FORMAT environment variable. For example, to "
"additionally get the timestamp and location of the log calls, stop the "
"demo and restart it with the environment variable set:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:404
#: e8fa584b4fc34717978bdf9fce3e9d12
msgid ""
"You should see the timestamp in seconds and the function name, filename "
"and line number additionally printed with each message. *The ``time`` "
"option is only supported as of the ROS 2 Bouncy release.*"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:408
#: c6f15df814994f2c9c867aba5a29bea8
msgid "Console output colorizing"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:410
#: b1c4f4be9a3f4c87b1ceae29aa055e5f
msgid ""
"By default, the output is colorized when it's targeting a terminal. If "
"you would like to force enabling or disabling it, you can use the "
"``RCUTILS_COLORIZED_OUTPUT`` environment variable. For example:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:435
#: e222af1df53e4660b794498c134f60ba
msgid ""
"You should see that debug, warn, error and fatal logs aren't colorized "
"now."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:439
#: 2872ed8914a74853965115f29a968497
msgid ""
"In Linux and MacOS forcing colorized output means that if you redirect "
"the output to a file, the ansi escape color codes will appear on it. In "
"windows the colorization method relies on console APIs. If it is forced "
"you will get a new warning saying that colorization failed. The default "
"behavior already checks if the output is a console or not, so forcing "
"colorization is not recommended."
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:445
#: 0222197c0e95423ca4c84eb0e4957656
msgid "Default stream for console output"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:447
#: 3c5610ed83d542319c4a5afcd1999359
msgid ""
"In Foxy and later, the output from all debug levels goes to stderr by "
"default.  It is possible to force all output to go to stdout by setting "
"the ``RCUTILS_LOGGING_USE_STDOUT`` environment variable to ``1``. For "
"example:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:472
#: 11b3f45760e84150abf7bcb9c9cb545e
msgid "Line buffered console output"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:475
#: ae9be67c292a4e0bbea8165a6dc9a191
msgid ""
"By default, all logging output is unbuffered. You can force it to be "
"buffered by setting the ``RCUTILS_LOGGING_BUFFERED_STREAM`` environment "
"variable to 1. For example:"
msgstr ""

#: ../../source/Tutorials/Demos/Logging-and-logger-configuration.rst:499
#: ../../source/Tutorials/Demos/Quality-of-Service.rst:71
#: 19ce542981314810a7783438d781fc55 d49b2830e1824af682f837c39244b3aa
msgid "Then run:"
msgstr ""

#: ../../source/Tutorials/Demos/Managed-Nodes.rst:7
#: a91bf77bade1497984080a80c2e4a8e0
msgid "Managing nodes with managed lifecycles"
msgstr ""

#: ../../source/Tutorials/Demos/Managed-Nodes.rst:9
#: 9faecc625e6141df8b112093893f1376
msgid ""
"This page lives now directly side-by-side with the `code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/lifecycle/README.rst>`__."
" For more information about the ``lifecycle`` package, refer to `rosindex"
" <https://index.ros.org/p/lifecycle/github-ros2-demos/>`__."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:7
#: 179fe24799a24208a50c95ea9bb875ac
msgid "Using quality-of-service settings for lossy networks"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:16
#: bd6a9c020bad4105ae4ae80e38250832
msgid ""
"Please read the documentation page `about QoS settings "
"<../../Concepts/Intermediate/About-Quality-of-Service-Settings>` for "
"background information on available support in ROS 2."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:18
#: 7db6736e411c40c39562a9789984aafc
msgid ""
"In this demo, we will spawn a node that publishes a camera image and "
"another that subscribes to the image and shows it on the screen. We will "
"then simulate a lossy network connection between them and show how "
"different quality of service settings handle the bad link."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:24
#: c13198ba60284fcf8fedf926e8d8b326
msgid ""
"This tutorial assumes you have a :doc:`working ROS 2 installation "
"<../../Installation>` and OpenCV. See the `OpenCV documentation "
"<http://docs.opencv.org/doc/tutorials/introduction/table_of_content_introduction/table_of_content_introduction.html"
"#table-of-content-introduction>`__ for its installation instructions. You"
" will also need the ROS package ``image_tools``."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:30
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:27
#: a4a488eb8cda4e04b9a4e30bdda4b2eb fadd4986118849f1b52664fae3e148e6
msgid "Linux Binaries"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:36
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:33
#: 949b6b7d009d483dbc7fb5fdd410c427 b95a93715e6845afb2702ec95c17a902
msgid "From Source"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:47
#: bfd1933e8f284a7daba8a1ab6332c791
msgid ""
"Before running the demo, make sure you have a working webcam connected to"
" your computer."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:49
#: 6cb8fc4c376a4ef49047694b0bbf1c78
msgid "Once you've installed ROS 2, source your setup file:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:77
#: 5abb467043b14151a028838e43fca273
msgid ""
"Nothing will happen yet. ``showimage`` is a subscriber node that is "
"waiting for a publisher on the ``image`` topic."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:80
#: 697605fd9e3b4735a39bd47749c99d67
msgid ""
"Note: you have to close the ``showimage`` process with ``Ctrl-C`` later. "
"You can't just close the window."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:83
#: 48f845b5688c4991975172bf96018d5d
msgid ""
"In a separate terminal, source the install file and run the publisher "
"node:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:89
#: e3908c1f053f43feb76c57a90446d43e
msgid ""
"This will publish an image from your webcam. In case you don't have a "
"camera attached to your computer, there is a commandline option which "
"publishes predefined images."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:98
#: 13b3f81fa0944c5b92ec53695870d164
msgid "In this window, you'll see terminal output:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:107
#: 1e9ea01b40a64621b84e90e2d44e8f10
msgid ""
"A window will pop up with the title \"view\" showing your camera feed. In"
" the first window, you'll see output from the subscriber:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:119
#: fffcaed51af74551a9ece370d116ecab
msgid ""
"macOS users: If these examples do not work or you receive an error like "
"``ddsi_conn_write failed -1`` then you'll need to increase your system "
"wide UDP packet size:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:126
#: 92ea5f514dd84bd2ad54928e53d8ddc2
msgid ""
"These changes will not persist a reboot. If you want the changes to "
"persist, add these lines to ``/etc/sysctl.conf`` (create the file if it "
"doesn't exist already):"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:134
#: 170d2fe5b7ae4ed8a4977ffb17355ac2
msgid "Command line options"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:136
#: 01d65768d6644dd3a38e22b2eed154a3
msgid "In one of your terminals, add a -h flag to the original command:"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:146
#: e108502e69cc48dfa3c70d18ad6690ac
msgid "Add network traffic"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:150
#: 1367f78d5ad548d983a8425dcdcd814d
msgid ""
"This section of the demo won't work on RTI's Connext DDS. When running "
"multiple nodes in the same host, the RTI Connext DDS implementation uses "
"shared memory along with the loopback interface. Degrading the loopback "
"interface throughput won't affect shared memory, thus traffic between the"
" two nodes won't be affected."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:156
#: e7197e7c9456458d92b2047918df8b84
msgid "This next section is Linux-specific."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:158
#: 16ecce37b86b4b11886c1d090b36028c
msgid ""
"However, for macOS and Windows you can achieve a similar effect with the "
"utilities \"Network Link Conditioner\" (part of the xcode tool suite) and"
" \"Clumsy\" (http://jagt.github.io/clumsy/index.html), respectively, but "
"they will not be covered in this tutorial."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:160
#: b16b2f967cf840329b5bd7c94b5afa36
msgid ""
"We are going to use the Linux network traffic control utility, ``tc`` "
"(http://linux.die.net/man/8/tc)."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:166
#: 821f8e52fdce4470ac3682462d6f4acd
msgid ""
"This magical incantation will simulate 5% packet loss over the local "
"loopback device. If you use a higher resolution of the images (e.g. "
"``--ros-args -p width:=640 -p height:=480``) you might want to try a "
"lower packet loss rate (e.g. ``1%``)."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:169
#: 65ad6abad63f42ac88935331bb151c42
msgid ""
"Next we start the ``cam2image`` and ``showimage``, and we'll soon notice "
"that both programs seem to have slowed down the rate at which images are "
"transmitted. This is caused by the behavior of the default QoS settings. "
"Enforcing reliability on a lossy channel means that the publisher (in "
"this case, ``cam2image``) will resend the network packets until it "
"receives acknowledgement from the consumer (i.e. ``showimage``)."
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:173
#: 7544e266a8c34345a46c0a62ff2528fa
msgid ""
"Let's now try running both programs, but with more suitable settings. "
"First of all, we'll use the ``-p reliability:=best_effort`` option to "
"enable best effort communication. The publisher will now just attempt to "
"deliver the network packets, and don't expect acknowledgement from the "
"consumer. We see now that some of the frames on the ``showimage`` side "
"were dropped, so the frame numbers in the shell running ``showimage`` "
"won't be consecutive anymore:"
msgstr ""

#: db73c627ab834da997096170e1cfb50f
msgid "Best effort image transfer"
msgstr ""

#: ../../source/Tutorials/Demos/Quality-of-Service.rst:184
#: ec2d57eef3954f109274de4e0ad48e52
msgid "When you're done, remember to delete the queueing discipline:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:7
#: ff33ea8778e6445ba807ece76914e40d
msgid "Understanding real-time programming"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:16
#: 336e00dd071e42228b588b4cd015dc24
msgid ""
"Real-time computing is a key feature of many robotics systems, "
"particularly safety- and mission-critical applications such as autonomous"
" vehicles, spacecrafts, and industrial manufacturing. We are designing "
"and prototyping ROS 2 with real-time performance constraints in mind, "
"since this is a requirement that was not considered in the early stages "
"of ROS 1 and it is now intractable to refactor ROS 1 to be real-time "
"friendly."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:19
#: a242c5706bf6418b968d1ae4eced8185
msgid ""
"`This document "
"<https://design.ros2.org/articles/realtime_background.html>`__ outlines "
"the requirements of real-time computing and best practices for software "
"engineers.  In short:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:21
#: cc379bd263cc4642b44869ba9c50d926
msgid ""
"To make a real-time computer system, our real-time loop must update "
"periodically to meet deadlines. We can only tolerate a small margin of "
"error on these deadlines (our maximum allowable jitter). To do this, we "
"must avoid nondeterministic operations in the execution path, things "
"like: pagefault events, dynamic memory allocation/deallocation, and "
"synchronization primitives that block indefinitely."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:25
#: b7cbe4f945374f569f5869e51c5459de
msgid ""
"A classic example of a controls problem commonly solved by real-time "
"computing is balancing an `inverted pendulum "
"<https://en.wikipedia.org/wiki/Inverted_pendulum>`__. If the controller "
"blocked for an unexpectedly long amount of time, the pendulum would fall "
"down or go unstable. But if the controller reliably updates at a rate "
"faster than the motor controlling the pendulum can operate, the pendulum "
"will successfully adapt react to sensor data to balance the pendulum."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:29
#: 46abbb4164054bc6b81cc47ed681da9b
msgid "Now that you know everything about real-time computing, let's try a demo!"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:32
#: 93dd250552634792b0576632bfcfc39d
msgid "Install and run the demo"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:34
#: d1c9ff4484b842bf94772d9752f1e145
msgid ""
"The real-time demo was written with Linux operating systems in mind, "
"since many members of the ROS community doing real-time computing use "
"Xenomai or RT_PREEMPT as their real-time solutions. Since many of the "
"operations done in the demo to optimize performance are OS-specific, the "
"demo only builds and runs on Linux systems. **So, if you are an OSX or "
"Windows user, don't try this part!**"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:38
#: 153b31317d2145e7a2a10ee37388f1f8
msgid ""
"Also this must be built from source using a the static DDS API. "
"**Currently the only supported implementation is Connext**."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:40
#: 039d6780793845d2a8d5e75135681d9a
msgid ""
"First, follow the instructions to build ROS 2 :doc:`from source "
"<../../Installation/Alternatives/Ubuntu-Development-Setup>` using Connext"
" DDS as the middleware."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:43
#: 1e1981a01ae34981af2045d42ddf98de
msgid "Run the tests"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:45
#: eb6362f9c52a4f07881563772c558d32
msgid ""
"**Before you run make sure you have at least 8Gb of RAM free. With the "
"memory locking, swap will not work anymore.**"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:47
#: cd76db4a5c3d433d84e3054fbb9f727e
msgid "Source your ROS 2 setup.bash."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:49
#: 40be2a1610a04385992748001f17c0a6
msgid ""
"Run the demo binary, and redirect the output. You may want to use "
"``sudo`` in case you get permission error:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:56
#: 3c23511b144a42b6b22e277f4ea07976
msgid "What the heck just happened?"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:58
#: 914c5d7912fe41758ebd2c3bfe23a877
msgid ""
"First, even though you redirected stdout, you will see some output to the"
" console (from stderr):"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:66
#: 08bb8c86187b497f9ec7ed707bd8a456
msgid ""
"After the initialization stage of the demo program, it will attempt to "
"lock all cached memory into RAM and prevent future dynamic memory "
"allocations using ``mlockall``. This is to prevent pagefaults from "
"loading lots of new memory into RAM. (See `the realtime design article "
"<https://design.ros2.org/articles/realtime_background.html#memory-"
"management>`__ for more information.)"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:70
#: aa97f35747594d4ab4f1256f44d35ffb
msgid ""
"The demo will continue on as usual when this occurs. At the bottom of the"
" output.txt file generated by the demo, you'll see the number of "
"pagefaults encountered during execution:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:79
#: 4f969032051248f493ff0aae1fe25c15
msgid "If we want those pagefaults to go away, we'll have to..."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:82
#: 5b8e43d1316840c1ac999b1af521f587
msgid "Adjust permissions for memory locking"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:84
#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:179
#: 2b19e8cf81db4d4a81e13f8ed8442c1e 968c38e93ebe43e8831f3fac7473912a
msgid "Add to ``/etc/security/limits.conf`` (as sudo):"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:90
#: 8d1a508c0ffe4c6ab8013d487f0d4c1f
msgid ""
"A limit of ``-1`` is unlimited. If you choose this, you may need to "
"accompany it with ``ulimit -l unlimited`` (as root) after editing the "
"file."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:93
#: ae2a77a542324edfaca9370c0425a040
msgid ""
"After saving the file, log out and log back in. Then rerun the "
"``pendulum_demo`` invocation."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:96
#: 84be20f6b78f46c9976b6f2ea3741d86
msgid ""
"You'll either see zero pagefaults in your output file, or an error saying"
" that a bad_alloc exception was caught. If this happened, you didn't have"
" enough free memory available to lock the memory allocated for the "
"process into RAM. You'll need to install more RAM in your computer to see"
" zero pagefaults!"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:101
#: d5142f5d77e243c39940a864603bab31
msgid "Output overview"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:103
#: 40cb53c9f8f34258bfc9dde299177d99
msgid "To see more output, we have to run the ``pendulum_logger`` node."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:105
#: f1012fb4ae1f445cb17b5de4cf96cd7f
msgid "In one shell with your ``install/setup.bash`` sourced, invoke:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:112
#: 4341706d120a4d6483bcbfddbd0b52bf
msgid "You should see the output message:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:118
#: 5ac9371b85594378ad57a1b1b596a66e
msgid "In another shell with setup.bash sourced, invoke ``pendulum_demo`` again."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:120
#: 39a1fc6de62b4becad1abbb94512af74
msgid ""
"As soon as this executable starts, you should see the other shell "
"constantly printing output:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:132
#: 1f3afc07866d4f7abb55264281c1034e
msgid ""
"The demo is controlling a very simple inverted pendulum simulation. The "
"pendulum simulation calculates its position in its own thread. A ROS node"
" simulates a motor encoder sensor for the pendulum and publishes its "
"position. Another ROS node acts as a simple PID controller and calculates"
" the next command message."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:137
#: f13a18c6b5b3448abbca80131a7f9ae6
msgid ""
"The logger node periodically prints out the pendulum's state and the "
"runtime performance statistics of the demo during its execution phase."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:139
#: 9af7a6c0915749edb20dacbdc3f61497
msgid ""
"After the ``pendulum_demo`` is finished, you'll have to CTRL-C out of the"
" logger node to exit."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:142
#: 626bbccabe194407adba5d7ae1facea8
msgid "Latency"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:144
#: 02adaff962814038baa54b9fae435ccd
msgid ""
"At the ``pendulum_demo`` execution, you'll see the final statistics "
"collected for the demo:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:160
#: 2e0f5e7590e64040aede2c9f6b7a7eb3
msgid ""
"The latency fields show you the minimum, maximum, and average latency of "
"the update loop in nanoseconds. Here, latency means the amount of time "
"after the update was expected to occur."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:163
#: 28cf44a0cba5463b9c00509073b1bf11
#, python-format
msgid ""
"The requirements of a real-time system depend on the application, but "
"let's say in this demo we have a 1kHz (1 millisecond) update loop, and "
"we're aiming for a maximum allowable latency of 5% of our update period."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:165
#: f002b8caec3e4a06bae97b114a2be9f5
msgid ""
"So, our average latency was really good in this run, but the maximum "
"latency was unacceptable because it actually exceeded our update loop! "
"What happened?"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:167
#: 7b8842e4cb064004971568880b801887
msgid ""
"We may be suffering from a non-deterministic scheduler. If you're running"
" a vanilla Linux system and you don't have the RT_PREEMPT kernel "
"installed, you probably won't be able to meet the real-time goal we set "
"for ourselves, because the Linux scheduler won't allow you to arbitrarily"
" pre-empt threads at the user level."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:170
#: 5339cd48b6e34d4eb2101224ae668546
msgid ""
"See the `realtime design article "
"<https://design.ros2.org/articles/realtime_background.html#multithreaded-"
"programming-and-synchronization>`__ for more information."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:172
#: 41bff5d36a70400e8f8132b7c1916640
msgid ""
"The demo attempts to set the scheduler and thread priority of the demo to"
" be suitable for real-time performance. If this operation failed, you'll "
"see an error message: \"Couldn't set scheduling priority and policy: "
"Operation not permitted\". You can get slightly better performance by "
"following the instructions in the next section:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:177
#: cac986b23fbe4bbe8677b8f3345b56ff
msgid "Setting permissions for the scheduler"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:185
#: cfa8ac4c34cc4066b90d079ade622459
msgid ""
"The range of the rtprio (real-time priority) field is 0-99. However, do "
"NOT set the limit to 99 because then your processes could interfere with "
"important system processes that run at the top priority (e.g. watchdog). "
"This demo will attempt to run the control loop at priority 98."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:190
#: 8fd8138440a54b4ab2132eb3fcaaa20b
msgid "Plotting results"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:192
#: 624f908fc6674b26b949545d99f73778
msgid ""
"You can plot the latency and pagefault statistics that are collected in "
"this demo after the demo runs."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:194
#: 6e00104e906e4064879739629fb5452c
msgid ""
"Because the code has been instrumented with `rttest "
"<https://github.com/ros2/rttest>`__, there are useful command line "
"arguments available:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:197
#: d117047e31834982a6df04d7f6065fa7
msgid "Command"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:197
#: 0d6e49c697f34c698c9af3e335defee7
msgid "Description"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:197
#: 1b42f751898042f293e29a58ddc18e15
msgid "Default value"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:199
#: ce59fd7cb1e64378bbd46f0f3d29d07f
msgid "-i"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:199
#: dc401389212b43fb8dd05cd92745b705
msgid "Specify how many iterations to run the real-time loop"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:199
#: 653c3ee991814a74a56090330033cf32
msgid "1000"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:201
#: 3e23106eee2f47fbaa0585c2282b1886
msgid "-u"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:201
#: c5ce10b67cea45eb8a7cefd581866415
msgid "Specify the update period with the default unit being microseconds."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:203
#: c4a355f0c4434b20a1cc93891d01e50f
msgid "Use the suffix \"s\" for seconds, \"ms\" for milliseconds,"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:205
#: 519922854d724ec8a687f6ae9290856c
msgid "\"us\" for microseconds, and \"ns\" for nanoseconds."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:201
#: e07563f5b8dc4bf8824ce78faf12f81b
msgid "1ms"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:207
#: 3fc433e66340413b867a2e099039987b
msgid "-f"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:207
#: 816f0f51a5d245c0918d8f33bbe79721
msgid "Specify the name of the file for writing the collected data."
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:210
#: 558617e168cb41b2a029c8a7186893f8
msgid "Run the demo again with a filename to save results:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:216
#: 22d6d47d327b4539bee5fb6bd77a424c
msgid "Then run the ``rttest_plot`` script on the resulting file:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:222
#: 1c3e9676685743adb27c3cfd1893cc63
msgid "This script will produce a number of files:"
msgstr ""

#: ../../source/Tutorials/Demos/Real-Time-Programming.rst:231
#: ddac431f0d464589b2341d25e1ab8055
msgid "You can view these plots in an image viewer of your choice."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:7
#: 85f4d841a6134158b232e989649746ad
msgid "Recording and playing back data with ``rosbag`` using the ROS 1 bridge"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:9
#: 0551c52789ce448aa7cda17073c00107
msgid ""
"This tutorial is a follow up to the *Bridge communication between ROS 1 "
"and ROS 2* demo as can be found `here "
"<https://github.com/ros2/ros1_bridge/blob/master/README.md>`__, and in "
"the following it is assumed you have completed that tutorial already."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:11
#: 1f8002f6abfb45e1b7fc258ad3638e7a
msgid ""
"The ros1_bridge can be built from :doc:`source <../../How-To-Guides"
"/Using-ros1_bridge-Jammy-upstream>` for these examples."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:13
#: ca3d14a63dd842a9bc3fa9cc2a5167da
msgid ""
"What follows is a series of additional examples, like that ones that come"
" at the end of the aforementioned *Bridge communication between ROS 1 and"
" ROS 2* demo."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:16
#: 403fb0da24244081a88b9d28707ea616
msgid "Recording topic data with rosbag and ROS 1 Bridge"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:18
#: 81c42baacfe34a3fb3da7257df1875ac
msgid ""
"In this example, we'll be using the ``cam2image`` demo program that comes"
" with ROS 2 and a Python script to emulate a simple turtlebot-like "
"robot's sensor data so that we can bridge it to ROS 1 and use rosbag to "
"record it."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:20
#: a2792c8b715d4b91918b6495d2a8e8e4
msgid "First we'll run a ROS 1 ``roscore`` in a new shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:30
#: 35b361bf690743e6af63670fcef9f626
msgid ""
"Then we'll run the ROS 1 <=> ROS 2 ``dynamic_bridge`` with the "
"``--bridge-all-topics`` option (so we can do ``rostopic list`` and see "
"them) in another shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:44
#: 31d3647653d64ea6b9766499ae9859e1
msgid ""
"Remember to replace ``<workspace-with-bridge>`` with the path to where "
"you either extracted the ROS 2 binary or where you built ROS 2 from "
"source."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:48
#: 6232a9e9eeab478da63bdea1f4b18bb7
msgid ""
"Now we can start up the ROS 2 programs that will emulate our turtlebot-"
"like robot. First we'll run the ``cam2image`` program with the ``-b`` "
"option so it doesn't require a camera to work:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:59
#: 4fa51120ed12402da488b0291cf1e69d
msgid "TODO: use namespaced topic names"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:61
#: 64a2bcca9e1c49c9a4bbd33965345859
msgid ""
"Then we'll run a simple Python script to emulate the ``odom`` and "
"``imu_data`` topics from a Kobuki base. I would use the more accurate "
"``~sensors/imu_data`` topic name for the imu data, but we don't have "
"namespace support just yet in ROS 2 (it's coming!). Place this script in "
"a file called ``emulate_kobuki_node.py``:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:106
#: 56c914bbfb1c4a988f7b9f2f6037d74e
msgid "You can run this python script in a new ROS 2 shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:118
#: b278fffdee6746e0809437387bb433e7
msgid ""
"Now that all the data sources and the dynamic bridge are running, we can "
"look at the available topics in a new ROS 1 shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:139
#: d5e59f55798448349566077656820444
msgid "We can now record this data with ``rosbag record`` in the same shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:146
#: f0a132d95a3f4750b03ffea2d50857ba
msgid ""
"After a few seconds you can ``Ctrl-c`` the ``rosbag`` command and do an "
"``ls -lh`` to see how big the file is, you might see something like this:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:154
#: d15eb461ddc8428485a88a57244e4219
msgid ""
"Though the file name will be different for your bag (since it is derived "
"from the date and time)."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:157
#: e6844333bdf84930b2f50051b52ad99a
msgid "Playing back topic data with rosbag and ROS 1 Bridge"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:159
#: 55eb66f95e9e4099b7ffb6c6324b08de
msgid ""
"Now that we have a bag file you can use any of the ROS 1 tools to "
"introspect the bag file, like ``rosbag info <bag file>``, ``rostopic list"
" -b <bag file>``, or ``rqt_bag <bag file>``. However, we can also "
"playback bag data into ROS 2 using ``rosbag play`` and the ROS 1 <=> ROS "
"2 ``dynamic_bridge``."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:162
#: 7e77f91866ff4a7fa9c657652f30c2bb
msgid ""
"First close out all the shells you opened for the previous tutorial, "
"stopping any running programs."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:164
#: 7d6bde32e33a4653b5ba3d83108cbdca
msgid "Then in a new shell start the ``roscore``:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:174
#: a2d3b717fca0409cb9bd16a49d69d881
msgid "Then run the ``dynamic_bridge`` in another shell:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:188
#: 48f366fb41124e7fb6fbb00097ea0140
msgid ""
"Then play the bag data back with ``rosbag play`` in another new shell, "
"using the ``--loop`` option so that we don't have to keep restarting it "
"for short bags:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:198
#: e57c4556948e4397a39080ebee7a1320
msgid ""
"Make sure to replace ``path/to/bag_file`` with the path to the bag file "
"you want to playback."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:202
#: 4d8ef5cf3ddd416aa9934a0550467673
msgid ""
"Now that the data is being played back and the bridge is running we can "
"see the data coming across in ROS 2."
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:213
#: 1c28c2902da04ce7a7031ff4ff6a6b44
msgid "You should see something like:"
msgstr ""

#: ../../source/Tutorials/Demos/Rosbag-with-ROS1-Bridge.rst:224
#: 162668cd462c4f6eb5d7063bc60d7209
msgid ""
"You can also see the image being played from the bag by using the "
"``showimage`` tool:"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:7
#: 68052857fdf942b1a1f0853d77c802ed
msgid "Experimenting with a dummy robot"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:9
#: 02b95fdf56c7427a90e5e666dd465040
msgid ""
"In this demo, we present a simple demo robot with all components from "
"publishing joint states over publishing fake laser data until visualizing"
" the robot model on a map in RViz."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:12
#: a94acdead189451697196e5f6556a90d
msgid "Launching the demo"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:14
#: ed8d9970955f45e2a39b6b58bb3d2103
msgid ""
"We assume your ROS 2 installation dir as ``~/ros2_ws``. Please change the"
" directories according to your platform."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:16
#: c5313d76344041389d40541d74f74af2
msgid ""
"To start the demo, we execute the demo bringup launch file, which we are "
"going to explain in more details in the next section."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:23
#: be914804a3f94341b787c569d3757cb0
msgid ""
"You should see some prints inside your terminal along the lines of the "
"following:"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:53
#: 07f9df06386f4f17aed4f8aa11f38c74
msgid "If you now open in a next terminal your RViz, you'll see your robot. 🎉"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:60
#: 8caea42c0d7e4c8197b49a68d0bc56c5
msgid ""
"This opens RViz2. Assuming you have your dummy_robot_bringup still "
"launched, you can now add the TF display plugin and configure your global"
" frame to ``world``. Once you did that, you should see a similar picture:"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:67
#: fed42fe8ac14433da1b85a5b93ac8e7b
msgid "What's happening?"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:69
#: d4d17414d6cf4923b00e49f533744a9e
msgid ""
"If you have a closer look at the launch file, we start a couple of nodes "
"at the same time."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:72
#: c43010a4f37a4a90a8e8fb839200e0cc
msgid "dummy_map_server"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:73
#: e8d07b8ab55d4c00bf6c4ca08044e120
msgid "dummy_laser"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:74
#: 3221dbeb6e0c4bceb05ee4aa19698047
msgid "dummy_joint_states"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:75
#: 788bd7e2c72949c6b6b791989674e1c7
msgid "robot_state_publisher"
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:77
#: b21e222326e2418b9f5bac4d28d56ac3
msgid ""
"The first two packages are relatively simple. The ``dummy_map_server`` "
"constantly publishes an empty map with a periodic update. The "
"``dummy_laser`` does basically the same; publishing dummy fake laser "
"scans."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:79
#: accb761405f848c7b40a264ef6bf2d5d
msgid ""
"The ``dummy_joint_states`` node is publishing fake joint state data. As "
"we are publishing a simple RRbot with only two joints, this node "
"publishes joint states values for these two joints."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:81
#: 0053b2b2737249eb83bc1d782e0ca84a
msgid ""
"The ``robot_state_publisher`` is doing the actual interesting work. It "
"parses the given URDF file, extracts the robot model and listens to the "
"incoming joint states. With this information, it publishes TF values for "
"our robot which we visualize in RViz."
msgstr ""

#: ../../source/Tutorials/Demos/dummy-robot-demo.rst:83
#: fc0cd6e6ac7245ddbace9dc0094f71b3
msgid "Hooray!"
msgstr ""

#: ../../source/Tutorials/Intermediate.rst:2 8513e1c27a1b4bf5afef660bc9d232c8
msgid "Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:7
#: a9a824e319fc4c0daeda013af2f0f770
msgid "Composing multiple nodes in a single process"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:13
#: 9d469cbd92e0493d9c33eab1e173915a
msgid "**Goal:** Compose multiple nodes into a single process."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:15
#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:12
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:11
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:12
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:11
#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:13
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:11
#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:10
#: ../../source/Tutorials/Intermediate/Rosdep.rst:14
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:12
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:12
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:12
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:12
#: 06bdaab7ef82428d8b215db59897ad63 0a4e7761a6de4d2fa67f709ef19d4660
#: 109bf52e200a4e9f806358ba32fd7767 1e71e9e274e44df3b2dae8869c307406
#: 288f07ed8628422fbd394a7a91f8ae40 34bddd98dbde476c9ae2ce83ad27186d
#: 399b7fbfdaac4b5f9234d2771ce765e3 5d4734eab1e7494fa5583643da696f0c
#: 650dde43188042348a57a18f9a3608e4 70b71b0e75254a3394b4b90dc15384c3
#: 76d21fd1d6624d8ab9ff9b80501b22a1 7a53de9ee9834babae88bd849418c5d9
#: 8861053ef3164b7ab00ac32221fb0636 89f189bd3d634b7685b8f30828fb7527
#: 8b105f165edf4522b700528cacd11a71 9799212ea1574e29ba303a5d0d7c79a2
#: 9a06434ddaa34930be173194b76c2fc4 a08c16854dc14092bc4b3b77718ee0d4
#: a878bed62c3a4c809059b840f78cb2b1 b8f4cb0a27034db9b8e1db8222d91581
#: ce5f499e8ef54802912396a4d17eb4eb ceb2b41942a84eb0a398477991d3189e
#: dd721147ff1246b89d51b7aba452a6ac dfdde663081f497cbf5082791fac45aa
#: e4837b5654a54e8e8cf60e6a301361bb e60c9824c25b4459a0cc7476500a21e2
#: e80906c81cc4487f970b8279417ca9f1 ef093fa346404b7aba8a5f3a2cb917eb
#: ef797188f9584b0f93e219ce3611c155 f002c7817bd24262a8bffd18e6e96a92
#: f2825a17035c466a91a0799762dfc34c f881898a9d27438ea184b8ccb8208d3c
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:22
#: 3f3210d1bb774826b79de4dfbc8ad474
msgid ""
"See the :doc:`conceptual article <../../Concepts/Intermediate/About-"
"Composition>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:25
#: a7c33ab4334d41d9981dc84062b8dd63
msgid "Run the demos"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:27
#: e323a0f368184d858156ee0724e686b3
msgid ""
"The demos use executables from `rclcpp_components "
"<https://github.com/ros2/rclcpp/tree/{REPOS_FILE_BRANCH}/rclcpp_components>`__,"
" `ros2component "
"<https://github.com/ros2/ros2cli/tree/{REPOS_FILE_BRANCH}/ros2component>`__,"
" and  `composition "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/composition>`__ "
"packages, and can be run with the following commands."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:31
#: 7d3b0d76247d454ca0784621d8b36b49
msgid "Discover available components"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:33
#: 6e8206ec65c148749397274337fac541
msgid ""
"To see what components are registered and available in the workspace, "
"execute the following in a shell:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:39
#: 0fb44413d0584d85bd1b772105a67cab
msgid "The terminal will return the list of all available components:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:54
#: 2d03c081593945e7b6dc1d5f3a7303fc
msgid "Run-time composition using ROS services with a publisher and subscriber"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:56
#: ../../source/Tutorials/Intermediate/Composition.rst:213
#: ../../source/Tutorials/Intermediate/Composition.rst:279
#: 45f97df26d3947b88ad2d75760757b78 76c07fad1bb747e795a71a3c2aad6238
#: bc473a07949d4681ab8210ebad89c431
msgid "In the first shell, start the component container:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:62
#: 3e81f55755dd47a0a6694506f5343bf4
msgid ""
"Open the second shell and verify that the container is running via "
"``ros2`` command line tools:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:68
#: ../../source/Tutorials/Intermediate/Composition.rst:225
#: 3e15c39cf7c84e8a8f3ec1020abf608e c64fd32e2d36484cb5465e491c998820
msgid "You should see a name of the component:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:74
#: 98796bf02ccd44bbb443810432170314
msgid ""
"In the second shell load the talker component (see `talker "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/talker_component.cpp>`__"
" source code):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:80
#: 6620a64c56d34a6787bfae02c999eff9
msgid ""
"The command will return the unique ID of the loaded component as well as "
"the node name:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:86
#: 32c07cbaccac40978b1d02fa8f3fddb8
msgid ""
"Now the first shell should show a message that the component was loaded "
"as well as repeated message for publishing a message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:88
#: f9cb3595f4194fb7b90da5c33a12f0ea
msgid ""
"Run another command in the second shell to load the listener component "
"(see `listener "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/listener_component.cpp>`__"
" source code):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:94
#: adb2041c9b04486db29fbae750832a01
msgid "Terminal will return:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:100
#: f89bf3db74364626ae5aa9545b5a1340
msgid ""
"The ``ros2`` command line utility can now be used to inspect the state of"
" the container:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:106
#: 07374a58e5c94d2d91dcd015387f35a7
msgid "You will see the following result:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:114
#: c2f7cb381e5c4a92ba36ef9c1d6878d3
msgid "Now the first shell should show repeated output for each received message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:117
#: fafb90be3e8d484fb53909f68f2fbad4
msgid "Run-time composition using ROS services with a server and client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:119
#: ee1447064ace49fd8fb7c7f111f0fd2f
msgid "The example with a server and a client is very similar."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:121
#: f4cb394925fb4d83b2f8adcd0f1c5f8b
msgid "In the first shell:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:127
#: e5a99c4dfb33463ebd388c1ddd5ee569
msgid ""
"In the second shell (see `server "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/server_component.cpp>`__"
" and `client "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/client_component.cpp>`__"
" source code):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:134
#: 41fb1588eefa43789dc0daadeae20827
msgid ""
"In this case the client sends a request to the server, the server "
"processes the request and replies with a response, and the client prints "
"the received response."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:137
#: bcc4d5a348a2442e9a9bb303f0dd8c9a
msgid "Compile-time composition using ROS services"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:139
#: 3edd6cc4fa3f415cb7afe3c633c047d9
msgid ""
"This demos shows that the same shared libraries can be reused to compile "
"a single executable running multiple components. The executable contains "
"all four components from above: talker and listener as well as server and"
" client."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:142
#: af5d29aef1a348848d629d021ae2bef2
msgid ""
"In the shell call (see `source code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/manual_composition.cpp>`__):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:148
#: 08d2cb71d32c4f3ca644f9378995e745
msgid ""
"This should show repeated messages from both pairs, the talker and the "
"listener as well as the server and the client."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:152
#: 34eb80b7cc0f48a2ae03343b7e4bdf8e
msgid ""
"Manually-composed components will not be reflected in the ``ros2 "
"component list`` command line tool output."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:155
#: 8b44e03ffbf044fca51eb25022dc6868
msgid "Run-time composition using dlopen"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:157
#: 9de071d2ddb64fb7bd07a0754d6fd353
msgid ""
"This demo presents an alternative to run-time composition by creating a "
"generic container process and explicitly passing the libraries to load "
"without using ROS interfaces. The process will open each library and "
"create one instance of each \"rclcpp::Node\" class in the library `source"
" code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/dlopen_composition.cpp>`__)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:180
#: b9397b1dbfac46ee943a71cca0457cd4
msgid "to get the path to where composition is installed. Then call"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:186
#: 4084509fa39d4ea480eb9be1f6d24db7
msgid ""
"Now the shell should show repeated output for each sent and received "
"message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:190
#: 9896a3191a9745c29513189a63bfdd77
msgid ""
"dlopen-composed components will not be reflected in the ``ros2 component "
"list`` command line tool output."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:194
#: 51acd097428943b5aceb4d7be33d2f65
msgid "Composition using launch actions"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:196
#: d4e2cadd51d44d87befea9b68c2394da
msgid ""
"While the command line tools are useful for debugging and diagnosing "
"component configurations, it is frequently more convenient to start a set"
" of components at the same time. To automate this action, we can use a "
"`launch file "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/launch/composition_demo_launch.py>`__:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:205
#: 78ed83a521814e66830cf68f2819b26a
msgid "Advanced Topics"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:207
#: dd0ded9b2b594cca9f1181da31af26af
msgid ""
"Now that we have seen the basic operation of components, we can discuss a"
" few more advanced topics."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:211
#: e820a345f97d4e16be9593bb2353c99f
msgid "Unloading components"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:219
#: 10d62dddad3945fe8827754c7deea3bc
msgid "Verify that the container is running via ``ros2`` command line tools:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:231
#: f47fd4506efe4932abb9f79624236f7b
msgid "In the second shell load both the talker and listener as we have before:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:238
#: 3b4b11f27f0a4d5383d1a09ef57eb986
msgid "Use the unique ID to unload the node from the component container."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:244
#: 6042eb4faf5246b8bdbde02f22151bc7
msgid "The terminal should return:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:251
#: 6d0ae171c8b14f7bb1e4d21243eae3cf
msgid ""
"In the first shell, verify that the repeated messages from talker and "
"listener have stopped."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:255
#: c918f970f2d24d1cae293db395a0db91
msgid "Remapping container name and namespace"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:257
#: f17ab6518d664d0f9fd1adcb082d5b72
msgid ""
"The component manager name and namespace can be remapped via standard "
"command line arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:263
#: 827851d701cf466c9aa6e08e2175e996
msgid ""
"In a second shell, components can be loaded by using the updated "
"container name:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:271
#: ../../source/Tutorials/Intermediate/Composition.rst:323
#: 3a2ce2492d13467287d199cc242e2c2b bea0d65c39114ce084942f84aa49da42
msgid "Namespace remappings of the container do not affect loaded components."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:275
#: ac30af48acf641399834939a43d3cae3
msgid "Remap component names and namespaces"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:277
#: 6649a7db70a646aaae3f805d55e170b3
msgid ""
"Component names and namespaces may be adjusted via arguments to the load "
"command."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:286
#: f9c45cddde4349c685488f910eb20cf5
msgid "Some examples of how to remap names and namespaces."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:288
#: 74789fe57e14474e9e278267962cd0cd
msgid "Remap node name:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:294
#: 4bd8b770bef043feb2e1217be29a2b2b
msgid "Remap namespace:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:300
#: 4c5d97ae9348473685d408e649628ac7
msgid "Remap both:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:306
#: b20404b683aa4ea38fff4f79d4a8a4e0
msgid "Now use ``ros2`` command line utility:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:312
#: 5d3f953251db482b9aa8bcb53913d418
msgid "In the console you should see corresponding entries:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:326
#: 6448a83ec1544d888545ff065652810b
msgid "Passing parameter values into components"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:328
#: 8ed6a4b688624e4baabfa0af151ad6f3
msgid ""
"The ``ros2 component load`` command-line supports passing arbitrary "
"parameters to the node as it is constructed. This functionality can be "
"used as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:336
#: a6d48309a4744503a8e66eabaaa6a2df
msgid "Passing additional arguments into components"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:338
#: 12b31bc291c9496cb14677cf03185c6a
msgid ""
"The ``ros2 component load`` command-line supports passing particular "
"options to the component manager for use when constructing the node. As "
"of now, the only command-line option that is supported is to instantiate "
"a node using intra-process communication. This functionality can be used "
"as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:347
#: c2b09ffb577b4825aa6543bf855d20bf
msgid "Composable nodes as shared libraries"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:349
#: d6d45d39fc6a4effa89b21d41bdcb796
msgid ""
"If you want to export a composable node as a shared library from a "
"package and use that node in another package that does link-time "
"composition, add code to the CMake file which imports the actual targets "
"in downstream packages."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:351
#: 0717d18c5c0d4bf2bc5ab428b9fe58b5
msgid "Then install the generated file and export the generated file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:353
#: 5589beb7c31f44aab99e4c46ceb3bb72
msgid ""
"A practical example can be seen here: `ROS Discourse - Ament best "
"practice for sharing libraries <https://discourse.ros.org/t/ament-best-"
"practice-for-sharing-libraries/3602>`__"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:356
#: cbad0c6884ff4c859c75c44c58ebd6d2
msgid "Composing Non-Node Derived Components"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:358
#: ca8ef3dfecef475485f02bd66b472b41
msgid ""
"In ROS 2, components allow for more efficient use of system resources and"
" provide a powerful feature that enables you to create reusable "
"functionality that is not tied to a specific node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:360
#: 162da0944b2f48fdbf8f1f1e69cffe5d
msgid ""
"One advantage of using components is that they allow you to create non-"
"node derived functionality as standalone executables or shared libraries "
"that can be loaded into the ROS system as needed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:362
#: 663132f6454e429c9ebd506f8ca98a4e
msgid ""
"To create a component that is not derived from a node, follow these "
"guidelines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:364
#: 4baa53bf851e4ba295387078da08e59c
msgid ""
"Implement a constructor that takes ``const rclcpp::NodeOptions&`` as its "
"argument."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:365
#: c5c043ca046a42b1bcac162b126c2c0b
msgid ""
"Implement the ``get_node_base_interface()`` method, which should return a"
" ``NodeBaseInterface::SharedPtr``. You can use the "
"``get_node_base_interface()`` method of a node that you create in your "
"constructor to provide this interface."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:367
#: a25a4f6430864f3babe6318d745c64b6
msgid ""
"Here's an example of a component that is not derived from a node, which "
"listens to a ROS topic: `node_like_listener_component "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/node_like_listener_component.cpp>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Composition.rst:369
#: f50964ab63aa4476af5830ff6ccc96af
msgid ""
"For more information on this topic, you can refer to this `discussion "
"<https://github.com/ros2/rclcpp/issues/2110#issuecomment-1454228192>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:8
#: d37a3ba6d1464887ac4edde221b76196
msgid "Creating an action"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:10
#: 31d0484851d04b56b5eee2539fbf2901
msgid "**Goal:** Define an action in a ROS 2 package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:23
#: c239f0b92b134a80aa1255798c7a79dc
msgid ""
"You learned about actions previously in the :doc:`../Beginner-CLI-Tools"
"/Understanding-ROS2-Actions/Understanding-ROS2-Actions` tutorial. Like "
"the other communication types and their respective interfaces (topics/msg"
" and services/srv), you can also custom-define actions in your packages. "
"This tutorial shows you how to define and build an action that you can "
"use with the action server and action client you will write in the next "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:32
#: a7ccca8cdf6f40b4972ec8c73ad0edce
msgid ""
"You should have :doc:`ROS 2 <../../Installation>` and `colcon "
"<https://colcon.readthedocs.org>`__ installed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:34
#: 32cad1443e49446c8c6ef5ae0c1b46cc
msgid ""
"You should know how to set up a :doc:`workspace <../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>` and create "
"packages."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:36
#: 7a9bd67b12d74de7a12f59dd9265f4d2
msgid ""
"Remember to :doc:`source your ROS 2 installation <../Beginner-CLI-Tools"
"/Configuring-ROS2-Environment>` first."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:42
#: e5e17296fed4490a9f2a537d87309267
msgid "1 Creating an interface package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:72
#: 35e0d774d3a4469ca0a1295c73fcf99e
msgid "2 Defining an action"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:74
#: e4511670c4454a1fa278e07ae88f0e63
msgid "Actions are defined in ``.action`` files of the form:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:84
#: 43d1619efc9d44ef88534727abc915e1
msgid ""
"An action definition is made up of three message definitions separated by"
" ``---``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:86
#: 9a122f82e00e4596b971c8261a1126bf
msgid ""
"A *request* message is sent from an action client to an action server "
"initiating a new goal."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:87
#: fe4036f3ac334a2aadad2e55b0facf2b
msgid ""
"A *result* message is sent from an action server to an action client when"
" a goal is done."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:88
#: b6cc6e74cffa4defa0b180d9c21d875a
msgid ""
"*Feedback* messages are periodically sent from an action server to an "
"action client with updates about a goal."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:90
#: 257baedfdef74c36a87ef82ffdf9a92f
msgid "An instance of an action is typically referred to as a *goal*."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:92
#: 610e9671aa094228a187359ae5cd2272
msgid ""
"Say we want to define a new action \"Fibonacci\" for computing the "
"`Fibonacci sequence <https://en.wikipedia.org/wiki/Fibonacci_number>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:94
#: 42cd67e125554a48a8d6bf392e766cc0
msgid ""
"Create an ``action`` directory in our ROS 2 package "
"``custom_action_interfaces``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:119
#: 9b0f69629553481a93048233ffb3a848
msgid ""
"Within the ``action`` directory, create a file called "
"``Fibonacci.action`` with the following contents:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:129
#: 821a9f1c1e1a4c918fe43f0313611658
msgid ""
"The goal request is the ``order`` of the Fibonacci sequence we want to "
"compute, the result is the final ``sequence``, and the feedback is the "
"``partial_sequence`` computed so far."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:132
#: 97bba7c11d1c4f7b96a377b74dcd351a
msgid "3 Building an action"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:134
#: 7f47ba41058f4bf082ea8c90108916e4
msgid ""
"Before we can use the new Fibonacci action type in our code, we must pass"
" the definition to the rosidl code generation pipeline."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:136
#: bcfe5a0b30de4c40998d1c825c6a1f0c
msgid ""
"This is accomplished by adding the following lines to our "
"``CMakeLists.txt`` before the ``ament_package()`` line, in the "
"``custom_action_interfaces``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:146
#: bded2b0de84f4106acd7f8744f2c0a61
msgid "We should also add the required dependencies to our ``package.xml``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:154
#: a572b01f715d49cb83be0d98d6bceba1
msgid ""
"We should now be able to build the package containing the ``Fibonacci`` "
"action definition:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:163
#: 2503a7c7b9a340f485c7fdfd6443b959
msgid "We're done!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:165
#: 27fa5ef4e43d4b0c9c92e854b054517c
msgid ""
"By convention, action types will be prefixed by their package name and "
"the word ``action``. So when we want to refer to our new action, it will "
"have the full name ``custom_action_interfaces/action/Fibonacci``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:168
#: 4c7951e019b34e928bae5ceb2ffd35dc
msgid ""
"We can check that our action built successfully with the command line "
"tool. First source our workspace:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:191
#: 8c9998794da3416a821f7040b1ebcdc3
msgid "Now check that our action definition exists:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:197
#: b847a6d5e0b84f8a907c65c2ce7124bc
msgid "You should see the Fibonacci action definition printed to the screen."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:202
#: 89867c23b0c749cb8a48ed66cd2574dd
msgid ""
"In this tutorial, you learned the structure of an action definition. You "
"also learned how to correctly build a new action interface using "
"``CMakeLists.txt`` and ``package.xml``, and how to verify a successful "
"build."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:209
#: 879bc380eb384b82957e3d32b35cc303
msgid ""
"Next, let's utilize your newly defined action interface by creating an "
"action service and client (in :doc:`Python <Writing-an-Action-Server-"
"Client/Py>` or :doc:`C++ <Writing-an-Action-Server-Client/Cpp>`)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Creating-an-Action.rst:214
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:394
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:361
#: 5c8d10ddba494eed9742c3a9b9cc4b17 6449f38a8e9e406e869b33ec98ace7fc
#: b7185a6cf22c4b74aca5e51eac2f0a88
msgid ""
"For more detailed information about ROS actions, please refer to the "
"`design article <http://design.ros2.org/articles/actions.html>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:7
#: 4b6122d539794fa5bcee13b00e2b2f16
msgid "Creating a launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:9
#: 30d8e97513af49e1a12a0518a0e45b75
msgid "**Goal:** Create a launch file to run a complex ROS 2 system."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:22
#: 6e8be77d1f294b2daec8f154c58927fa
msgid ""
"This tutorial uses the :doc:`rqt_graph and turtlesim <../../Beginner-CLI-"
"Tools/Introducing-Turtlesim/Introducing-Turtlesim>` packages."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:24
#: 0b588411a55342b4bac18d3c40e7a2c5
msgid "You will also need to use a text editor of your preference."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:26
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:25
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:35
#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:35
#: 2bcea26d22034ff58ff77875dfc71242 599f5f9250da42d89730d4a6f1801269
#: 6a76eb008e4f4cd1bb8ae9cb4b83482e 75f277dffe3f48698af3093e7f07c850
msgid ""
"As always, don’t forget to source ROS 2 in :doc:`every new terminal you "
"open <../../Beginner-CLI-Tools/Configuring-ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:31
#: ec13af2894f74d0fab035e634d5105b5
msgid ""
"The launch system in ROS 2 is responsible for helping the user describe "
"the configuration of their system and then execute it as described. The "
"configuration of the system includes what programs to run, where to run "
"them, what arguments to pass them, and ROS-specific conventions which "
"make it easy to reuse components throughout the system by giving them "
"each a different configuration. It is also responsible for monitoring the"
" state of the processes launched, and reporting and/or reacting to "
"changes in the state of those processes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:35
#: d455a5718bd849d699b459850bfb82c0
msgid ""
"Launch files written in Python, XML, or YAML can start and stop different"
" nodes as well as trigger and act on various events. See :doc"
":`../../../How-To-Guides/Launch-file-different-formats` for a description"
" of the different formats. The package providing this framework is "
"``launch_ros``, which uses the non-ROS-specific ``launch`` framework "
"underneath."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:39
#: 369f41666b2241219dce9c6e33866b34
msgid ""
"The `design document <https://design.ros2.org/articles/roslaunch.html>`__"
" details the goal of the design of ROS 2's launch system (not all "
"functionality is currently available)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:47
#: 3509d75d417e41838cd34d4ccec94289
msgid "Create a new directory to store your launch files:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:54
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:247
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:258
#: 6859377edc0f4a04a38489ff9e1e5325 8be5860455fa4ea6942de0dbd24e04b0
#: e0f91ccd93eb4dec85440e5504f40e90
msgid "2 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:56
#: c8ee9e77b0e049159ac9f358e5aa20d8
msgid ""
"Let’s put together a ROS 2 launch file using the ``turtlesim`` package "
"and its executables. As mentioned above, this can either be in Python, "
"XML, or YAML."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:63
#: e5ef952909124ee08933af57b16c1ef0
msgid ""
"Copy and paste the complete code into the "
"``launch/turtlesim_mimic_launch.py`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:95
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:211
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:279
#: 0afd525569c449098615506ad5a55108 a81515618c714a629c48d5c37c1a4439
#: db956bede97b4bb5bc6ea8add05ef292
msgid "XML"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:97
#: 289a23aa7ab04e15a4f029b09938f422
msgid ""
"Copy and paste the complete code into the "
"``launch/turtlesim_mimic_launch.xml`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:110
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:229
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:286
#: 2ac2a7c14e7944439a1f4d93aa461227 4e7f0f6d9706474db9031579740292c5
#: c9677558f57a46bfa890bed4c55a4c4b
msgid "YAML"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:112
#: 347fac73152a49839cb4df12de1312dd
msgid ""
"Copy and paste the complete code into the "
"``launch/turtlesim_mimic_launch.yaml`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:144
#: 97f65f5557bb469ba6e7560e49cf09c7
msgid "2.1 Examine the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:146
#: b927205d43954a92befcdd9ddb279ab9
msgid ""
"All of the launch files above are launching a system of three nodes, all "
"from the ``turtlesim`` package. The goal of the system is to launch two "
"turtlesim windows, and have one turtle mimic the movements of the other."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:149
#: 26f76a4e3f194412a5c257c05b01a26f
msgid ""
"When launching the two turtlesim nodes, the only difference between them "
"is their namespace values. Unique namespaces allow the system to start "
"two nodes without node name or topic name conflicts. Both turtles in this"
" system receive commands over the same topic and publish their pose over "
"the same topic. With unique namespaces, messages meant for different "
"turtles can be distinguished."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:154
#: 19f7935b3b9b4e149aef1be4a18f102d
msgid ""
"The final node is also from the ``turtlesim`` package, but a different "
"executable: ``mimic``. This node has added configuration details in the "
"form of remappings. ``mimic``'s ``/input/pose`` topic is remapped to "
"``/turtlesim1/turtle1/pose`` and it's ``/output/cmd_vel`` topic to "
"``/turtlesim2/turtle1/cmd_vel``. This means ``mimic`` will subscribe to "
"``/turtlesim1/sim``'s pose topic and republish it for "
"``/turtlesim2/sim``'s velocity command topic to subscribe to. In other "
"words, ``turtlesim2`` will mimic ``turtlesim1``'s movements."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:164
#: 4a53333e1b2042dba6dd3de782f4aed5
msgid "These import statements pull in some Python ``launch`` modules."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:171
#: 25cb4277b58e4fb7a9c3ebccfd3ca351
msgid "Next, the launch description itself begins:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:180
#: dd532e2c1bb4426c8e3fa73292049f99
msgid ""
"The first two actions in the launch description launch the two turtlesim "
"windows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:197
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:220
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:248
#: 4c1a2b80b87c4086a371e6af75c4e9a5 a3bc9734d52745319b21616921715b9d
#: d4d0b08eef4d46e4b8267b69d0f528bd
msgid "The final action launches the mimic node with the remaps:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:213
#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:231
#: cf15749a6aca488b922e6fafc8821d62 e176cf5aa3304ae5abca1a31fb07c03d
msgid "The first two actions launch the two turtlesim windows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:266
#: bf27fd200352460dbc8d4fdf70b2be2b
msgid "3 ros2 launch"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:268
#: 1d45f4573efb412f9d38c4ab7fcd3c88
msgid ""
"To run the launch file created above, enter into the directory you "
"created earlier and run the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:295
#: 28bcd568aaeb44878b481fe39bbda76b
msgid ""
"It is possible to launch a launch file directly (as we do above), or "
"provided by a package. When it is provided by a package, the syntax is:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:302
#: 0d124f2313a94e98abf7cf6c60e4e2b8
msgid ""
"You learned about creating packages in :doc:`../../Beginner-Client-"
"Libraries/Creating-Your-First-ROS2-Package`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:306
#: 808d3ed367514ab18e369734380d8e11
msgid ""
"For packages with launch files, it is a good idea to add an "
"``exec_depend`` dependency on the ``ros2launch`` package in your "
"package's ``package.xml``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:312
#: c6cea6d86b864e34a0083271a03a1143
msgid ""
"This helps make sure that the ``ros2 launch`` command is available after "
"building your package. It also ensures that all :doc:`launch file formats"
" <../../../How-To-Guides/Launch-file-different-formats>` are recognized."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:315
#: 32188c1ff493421b8e036ee8b235dc71
msgid ""
"Two turtlesim windows will open, and you will see the following "
"``[INFO]`` messages telling you which nodes your launch file has started:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:324
#: 7024f1cd08c94296957980358f4dc0cf
msgid ""
"To see the system in action, open a new terminal and run the ``ros2 topic"
" pub`` command on the ``/turtlesim1/turtle1/cmd_vel`` topic to get the "
"first turtle moving:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:330
#: 27a064ed59c046c1b3856fed5d81c276
msgid "You will see both turtles following the same path."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:335
#: 261ebfeafe794b9cac679a4da6893971
msgid "4 Introspect the system with rqt_graph"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:337
#: 069c9449c0b04fc7a2278eaef1196f3c
msgid ""
"While the system is still running, open a new terminal and run "
"``rqt_graph`` to get a better idea of the relationship between the nodes "
"in your launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:347
#: 00c9242a0c284adeafddf885474c76f2
msgid ""
"A hidden node (the ``ros2 topic pub`` command you ran) is publishing data"
" to the ``/turtlesim1/turtle1/cmd_vel`` topic on the left, which the "
"``/turtlesim1/sim`` node is subscribed to. The rest of the graph shows "
"what was described earlier: ``mimic`` is subscribed to "
"``/turtlesim1/sim``'s pose topic, and publishes to ``/turtlesim2/sim``'s "
"velocity command topic."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Creating-Launch-Files.rst:353
#: 10c0d5a06ee4411a84c27495e37041d3
msgid ""
"Launch files simplify running complex systems with many nodes and "
"specific configuration details. You can create launch files using Python,"
" XML, or YAML, and run them using the ``ros2 launch`` command."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:9
#: bdd6cb1a0fbe4360b7b2317d01870fde
msgid "Launch"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:11
#: a2b708b9b1f04ed5b4722541db337f0b
msgid ""
"ROS 2 Launch files allow you to start up and configure a number of "
"executables containing ROS 2 nodes simultaneously."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:22
#: 8c0f9f9f451b40b58849a48bf19e2f65
msgid ":doc:`Creating a launch file <./Creating-Launch-Files>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:24
#: 688508af00c74230b6562ea89e359134
msgid ""
"Learn how to create a launch file that will start up nodes and their "
"configurations all at once."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:26
#: f13b59b49c6541c08c9b263341957f3a
msgid ":doc:`Launching and monitoring multiple nodes <./Launch-system>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:28
#: 940a6980b1674ac88121e31c3587815d
msgid "Get a more advanced overview of how launch files work."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:30
#: 24b69f3f66e740bc8837c5aeafd726cc
msgid ":doc:`Using substitutions <./Using-Substitutions>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:32
#: 4fb41498dd4e45148d04a81e4dced070
msgid ""
"Use substitutions to provide more flexibility when describing reusable "
"launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:34
#: cb0e72f4a4e04e0388a58f6eadd1f82d
msgid ":doc:`Using event handlers <./Using-Event-Handlers>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:36
#: 927dad4520e3416684c2ca53f1c6ccdc
msgid ""
"Use event handlers to monitor the state of processes or to define a "
"complex set of rules that can be used to dynamically modify the launch "
"file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:38
#: 5d799103d58f42a5bf973ddcacb0788b
msgid ":doc:`Managing large projects <./Using-ROS2-Launch-For-Large-Projects>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:40
#: a4a1b5a4c5464096b1cc7810bbfd248e
msgid ""
"Structure launch files for large projects so they may be reused as much "
"as possible in different situations. See usage examples of different "
"launch tools like parameters, YAML files, remappings, namespaces, default"
" arguments, and RViz configs."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-Main.rst:45
#: 85c20252a51146d897837960510e08b1
msgid ""
"If you are coming from ROS 1, you can use the :doc:`ROS Launch Migration "
"guide <../../../How-To-Guides/Launch-files-migration-guide>` to help you "
"migrate your launch files to ROS 2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:8
#: 840abd6d38304ec48cab203e92d496f5
msgid "Integrating launch files into ROS 2 packages"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:10
#: ab59f498f2b44259adf94c9f4d7791e5
msgid "**Goal:** Add a launch file to a ROS 2 package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:23
#: d28d660b813e4a708681004a41656603
msgid ""
"You should have gone through the tutorial on how to :doc:`create a ROS 2 "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:30
#: 3be6b96394e1439e913cc4053316b92d
msgid ""
"In the :doc:`previous tutorial <Creating-Launch-Files>`, we saw how to "
"write a standalone launch file. This tutorial will show how to add a "
"launch file to an existing package, and the conventions typically used."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:39
#: c71f05b214b04065bbc32b2df4542cb9
msgid "Create a workspace for the package to live in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:66
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:86
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:203
#: 754384d94d8d4d94a912a254e15d42f8 95a8a03f9d924a50875ee1d845234932
#: a03cc4696c04492297d7213eafbc7ae7
msgid "Python package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:72
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:123
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:225
#: 6f7ceabf06ee4c92a2e5efc2ddf7cc67 b61acc2a430b47ee8f04e0bab33afdb8
#: ed32dd72c01d4a4a9cfc557adf260536
msgid "C++ package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:79
#: cbed7af42a6b47a7b1fc7f0ad7a9e649
msgid "2 Creating the structure to hold launch files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:81
#: ebbeeca5b4584cbd8145c052692ea513
msgid ""
"By convention, all launch files for a package are stored in the "
"``launch`` directory inside of the package. Make sure to create a "
"``launch`` directory at the top-level of the package you created above."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:88
#: 25ccda4d1a8f4a43bb76bd4eac23b4c8
msgid ""
"For Python packages, the directory containing your package should look "
"like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:102
#: 8ab7d950d19b450db89db0c3332a9f3c
msgid ""
"In order for colcon to find the launch files, we need to inform Python's "
"setup tools of our launch files using the ``data_files`` parameter of "
"``setup``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:104
#: 3b32cc2fc6f64590b30da4add4610015
msgid "Inside our ``setup.py`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:125
#: 8373cc2e7ceb4cbdb6ac1981fbffbc74
msgid ""
"For C++ packages, we will only be adjusting the ``CMakeLists.txt`` file "
"by adding:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:135
#: d67089eee005458397fda9718dcfa2f6
msgid "to the end of the file (but before ``ament_package()``)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:139
#: 2f9f97efde9542e6afb67d80175694b4
msgid "3 Writing the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:143
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:207
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:229
#: 014db598db1e4975843c1c1fb1186420 0c04759014d749caa698f14d4522f872
#: 5b15d89f873546e5b458900e90ce39a6
msgid "Python launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:145
#: f73a3f0f849147f893ca6e6658192854
msgid ""
"Inside your ``launch`` directory, create a new launch file called "
"``my_script_launch.py``. ``_launch.py`` is recommended, but not required,"
" as the file suffix for Python launch files. However, the launch file "
"name needs to end with ``launch.py`` to be recognized and autocompleted "
"by ``ros2 launch``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:149
#: 0a5dca5ee1054a859d4c27977b5a2e60
msgid ""
"Your launch file should define the ``generate_launch_description()`` "
"function which returns a ``launch.LaunchDescription()`` to be used by the"
" ``ros2 launch`` verb."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:164
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:213
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:235
#: 0b7816fbb1f64ed68572d525b3731884 90773908379d4340bbd20000b15dcdef
#: f747dd6dcd1f4dce94e6cb6b82a2c9bb
msgid "XML launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:166
#: 37025dfabfe4492b985830372d4cab91
msgid ""
"Inside your ``launch`` directory, create a new launch file called "
"``my_script_launch.xml``. ``_launch.xml`` is recommended, but not "
"required, as the file suffix for XML launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:175
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:219
#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:241
#: 772726b053da47e3965c2ff31734c2f9 c37e0dac91ea49b68b6e81d5819a7696
#: c4ef42d78b7f4b938c3b4d44cb7f5be0
msgid "YAML launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:177
#: a40e12eb61a44679bf603db4a59e8191
msgid ""
"Inside your ``launch`` directory, create a new launch file called "
"``my_script_launch.yaml``. ``_launch.yaml`` is recommended, but not "
"required, as the file suffix for YAML launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:191
#: daa67dc00f1a4c50accb95208ac85533
msgid "4 Building and running the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:193
#: 20658709bd094355a76417246993339d
msgid "Go to the top-level of the workspace, and build it:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:199
#: 60db4252423747edbc267ef6656172ef
msgid ""
"After the ``colcon build`` has been successful and you've sourced the "
"workspace, you should be able to run the launch file as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:249
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:305
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:391
#: 4d70e35eb155448680eded55c2cb1574 73df08ffb5a3417999b7893f3cd8e42c
#: c4d68af694ea4c3cbf931a33947035cd
msgid "Documentation"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:251
#: 28cf1611c6c8462eadd524bcc969c36f
msgid ""
"`The launch documentation "
"<https://github.com/ros2/launch/blob/{REPOS_FILE_BRANCH}/launch/doc/source/architecture.rst>`__"
" provides more details on concepts that are also used in ``launch_ros``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Launch-system.rst:253
#: a5138b7a08dd4d6b879385d0cd33a24d
msgid ""
"Additional documentation/examples of launch capabilities are forthcoming."
" See the source code (https://github.com/ros2/launch and "
"https://github.com/ros2/launch_ros) in the meantime."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:7
#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:39
#: 31c4f963a29f40789a8e7a644e5bf335 dd2281eda4d94225b18a3b48a553f05c
msgid "Using event handlers"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:9
#: b84b8b45d03149af92e8d01bc3a46c41
msgid "**Goal:** Learn about event handlers in ROS 2 launch files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:22
#: 5dc622dd55ec4fceb3a774ae3385037f
msgid ""
"Launch in ROS 2 is a system that executes and manages user-defined "
"processes. It is responsible for monitoring the state of processes it "
"launched, as well as reporting and reacting to changes in the state of "
"those processes. These changes are called events and can be handled by "
"registering an event handler with the launch system. Event handlers can "
"be registered for specific events and can be useful for monitoring the "
"state of processes. Additionally, they can be used to define a complex "
"set of rules which can be used to dynamically modify the launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:28
#: 723ff6fa762641bfaf26a37514771082
msgid ""
"This tutorial shows usage examples of event handlers in ROS 2 launch "
"files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:33
#: f0d412e7d28f45c18b21fa2d4a9ab734
msgid ""
"This tutorial uses the :doc:`turtlesim <../../Beginner-CLI-Tools"
"/Introducing-Turtlesim/Introducing-Turtlesim>` package. This tutorial "
"also assumes you have :doc:`created a new package <../../Beginner-Client-"
"Libraries/Creating-Your-First-ROS2-Package>` of build type "
"``ament_python`` called ``launch_tutorial``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:36
#: 930f2d34b2074cac9323c0f937e81705
msgid ""
"This tutorial extends the code shown in the :doc:`Using substitutions in "
"launch files <./Using-Substitutions>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:42
#: 425d9adb4c95454d9dbca31ff07958fd
msgid "1 Event handlers example launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:44
#: 41e41038b9964293bc340e4048abb953
msgid ""
"Create a new file called ``example_event_handlers_launch.py`` file in the"
" ``launch`` folder of the ``launch_tutorial`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:183
#: 5e6c5164b01f450698d5fb5555e6bfab
msgid ""
"``RegisterEventHandler`` actions for the ``OnProcessStart``, "
"``OnProcessIO``, ``OnExecutionComplete``, ``OnProcessExit``, and "
"``OnShutdown`` events were defined in the launch description."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:185
#: bd9214417d1645a0bc2967ea8cd54aee
msgid ""
"The ``OnProcessStart`` event handler is used to register a callback "
"function that is executed when the turtlesim node starts. It logs a "
"message to the console and executes the ``spawn_turtle`` action when the "
"turtlesim node starts."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:200
#: 2c36824e78fb49648a63e7e75186c3c0
msgid ""
"The ``OnProcessIO`` event handler is used to register a callback function"
" that is executed when the ``spawn_turtle`` action writes to its standard"
" output. It logs the result of the spawn request."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:215
#: b36fccec5ba844aaa7b2ada103e37fe3
msgid ""
"The ``OnExecutionComplete`` event handler is used to register a callback "
"function that is executed when the ``spawn_turtle`` action completes. It "
"logs a message to the console and executes the ``change_background_r`` "
"and ``change_background_r_conditioned`` actions when the spawn action "
"completes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:234
#: 02680c5ca991477da0fce371a0fe34fe
msgid ""
"The ``OnProcessExit`` event handler is used to register a callback "
"function that is executed when the turtlesim node exits. It logs a "
"message to the console and executes the ``EmitEvent`` action to emit a "
"``Shutdown`` event when the turtlesim node exits. It means that the "
"launch process will shutdown when the turtlesim window is closed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:252
#: f779fe8e97bb4194b577b20ffa1805a2
msgid ""
"Finally, the ``OnShutdown`` event handler is used to register a callback "
"function that is executed when the launch file is asked to shutdown. It "
"logs a message to the console why the launch file is asked to shutdown. "
"It logs the message with a reason for shutdown like the closure of "
"turtlesim window or :kbd:`ctrl-c` signal made by the user."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:268
#: 82e489c4716f4daeb7593efe7c0b4c51
msgid "Build the package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:270
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:331
#: 437beae4a79944aeb56d9474ab84f6da 45fdae24774043bf8a70b11cbd636d68
msgid "Go to the root of the workspace, and build the package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:276
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:337
#: 436aca91ffd44785a47f2fef3f04de8c 656bdb5a2efa4088aab966537ff0a04f
msgid "Also remember to source the workspace after building."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:279
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:340
#: 192c76b7b06f4870a63c667cef926614 37e4c20ba11046d3891f7df1ed2807df
msgid "Launching example"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:281
#: 96702a89220e499681cf0bae483bd258
msgid ""
"Now you can launch the ``example_event_handlers_launch.py`` file using "
"the ``ros2 launch`` command."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:287
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:348
#: 631fb7dde4dd4d04a3bbbf884c024f42 99112062547d4718ad71f99028d969b8
msgid "This will do the following:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:289
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:350
#: 19b84765a4f3440fb6b198a0b1a7a609 46671acae1cc4c7f8c6fe0600ecc8e08
msgid "Start a turtlesim node with a blue background"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:290
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:351
#: 5f9b3778c34f420393c0ee42a2c7ba22 80c64b31d610439fba7969e26a3e4672
msgid "Spawn the second turtle"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:291
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:352
#: de5356d974694a35b4b9c23a6c95982d f2f0f93d718c43f081f7945d76529ca3
msgid "Change the color to purple"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:292
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:353
#: 19fa97fa67b242f189d35e6ba499446b 40176c1d42124b5581f277bbadad51c5
msgid ""
"Change the color to pink after two seconds if the provided "
"``background_r`` argument is ``200`` and ``use_provided_red`` argument is"
" ``True``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:293
#: 1f1163316d294bcd98ffe04f84c0ae32
msgid "Shutdown the launch file when the turtlesim window is closed"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:295
#: be5e1004148e462db328f0dc4afd0a45
msgid "Additionally, it will log messages to the console when:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:297
#: 4fba095761b148039c672209d78365df
msgid "The turtlesim node starts"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:298
#: 90759478e81b4e55951ad42a75baadea
msgid "The spawn action is executed"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:299
#: e0eb7c8f4f0c423883e9a4654795586a
msgid "The ``change_background_r`` action is executed"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:300
#: 405514b4d1824e6aab0482d1eb24f562
msgid "The ``change_background_r_conditioned`` action is executed"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:301
#: 94157210202b45edab269f3155a33c75
msgid "The turtlesim node exits"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:302
#: 3c90e438e67b4f358ae377f353e45fdf
msgid "The launch process is asked to shutdown."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:307
#: c3d2463afc794063a551daecf364c02d
msgid ""
"`The launch documentation "
"<https://github.com/ros2/launch/blob/{REPOS_FILE_BRANCH}/launch/doc/source/architecture.rst>`_"
" provides detailed information about available event handlers."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Event-Handlers.rst:312
#: 5eae3e1f45d047cdb29e1a91831aaf96
msgid ""
"In this tutorial, you learned about using event handlers in launch files."
" You learned about their syntax and usage examples to define a complex "
"set of rules to dynamically modify launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:9
#: b40e299573284de7a3fca2e18e241106
msgid "Managing large projects"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:11
#: 8c0973b4c9274509aec7be62ad596c09
msgid ""
"**Goal:** Learn best practices of managing large projects using ROS 2 "
"launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:24
#: 9dc7154568c544fd9f534c54e795fd6a
msgid ""
"This tutorial describes some tips for writing launch files for large "
"projects. The focus is on how to structure launch files so they may be "
"reused as much as possible in different situations. Additionally, it "
"covers usage examples of different ROS 2 launch tools, like parameters, "
"YAML files, remappings, namespaces, default arguments, and RViz configs."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:31
#: 3218e09187584508be374362d3f62047
msgid ""
"This tutorial uses the :doc:`turtlesim <../../Beginner-CLI-Tools"
"/Introducing-Turtlesim/Introducing-Turtlesim>` and :doc:`turtle_tf2_py "
"<../Tf2/Introduction-To-Tf2>` packages. This tutorial also assumes you "
"have :doc:`created a new package <../../Beginner-Client-Libraries"
"/Creating-Your-First-ROS2-Package>` of build type ``ament_python`` called"
" ``launch_tutorial``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:35
#: 6f63a07ad6da4fce8434a2ecf8fe4966
msgid "Introduction"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:37
#: ea5d9bb421274a798df7898a181fc3cb
msgid ""
"Large applications on a robot typically involve several interconnected "
"nodes, each of which can have many parameters. Simulation of multiple "
"turtles in the turtle simulator can serve as a good example. The turtle "
"simulation consists of multiple turtle nodes, the world configuration, "
"and the TF broadcaster and listener nodes. Between all of the nodes, "
"there are a large number of ROS parameters that affect the behavior and "
"appearance of these nodes. ROS 2 launch files allow us to start all nodes"
" and set corresponding parameters in one place. By the end of a tutorial,"
" you will build the ``launch_turtlesim_launch.py`` launch file in the "
"``launch_tutorial`` package. This launch file will bring up different "
"nodes responsible for the simulation of two turtlesim simulations, "
"starting TF broadcasters and listener, loading parameters, and launching "
"an RViz configuration. In this tutorial, we'll go over this launch file "
"and all related features used."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:47
#: 7403466d3ec14112994dd69d6c6cfb24
msgid "Writing launch files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:50
#: ca3278aa58bd4e1794d40f813eff3023
msgid "1 Top-level organization"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:52
#: 2413326f1feb44cda91f5939c9906c10
msgid ""
"One of the aims in the process of writing launch files should be making "
"them as reusable as possible. This could be done by clustering related "
"nodes and configurations into separate launch files. Afterwards, a top-"
"level launch file dedicated to a specific configuration could be written."
" This would allow moving between identical robots to be done without "
"changing the launch files at all. Even a change such as moving from a "
"real robot to a simulated one can be done with only a few changes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:58
#: 378b2d781f4f46d08cfd392afa0a60d3
msgid ""
"We will now go over the top-level launch file structure that makes this "
"possible. Firstly, we will create a launch file that will call separate "
"launch files. To do this, let's create a ``launch_turtlesim_launch.py`` "
"file in the ``/launch`` folder of our ``launch_tutorial`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:115
#: 20215238c74b4674b1eaad869256c0df
msgid ""
"This launch file includes a set of other launch files. Each of these "
"included launch files contains nodes, parameters, and possibly, nested "
"includes, which pertain to one part of the system. To be exact, we launch"
" two turtlesim simulation worlds, TF broadcaster, TF listener, mimic, "
"fixed frame broadcaster, and RViz nodes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:119
#: 2ac76f5455ad4c7a957d5f9082ecc041
msgid ""
"Design Tip: Top-level launch files should be short, consist of includes "
"to other files corresponding to subcomponents of the application, and "
"commonly changed parameters."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:121
#: 7599228645fd4230bd7e4a3e70520f81
msgid ""
"Writing launch files in the following manner makes it easy to swap out "
"one piece of the system, as we'll see later. However, there are cases "
"when some nodes or launch files have to be launched separately due to "
"performance and usage reasons."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:124
#: b3f92acc5c334b3d85796c58af842fb0
msgid ""
"Design tip: Be aware of the tradeoffs when deciding how many top-level "
"launch files your application requires."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:127
#: 5a43ef87e6ce4526a5e37485a25895a4
msgid "2 Parameters"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:130
#: 1eb343c0512945529faaa9b28b02db2a
msgid "2.1 Setting parameters in the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:132
#: db2a6ba4a29f4c0a804079430922f3a9
msgid ""
"We will begin by writing a launch file that will start our first "
"turtlesim simulation. First, create a new file called "
"``turtlesim_world_1_launch.py``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:171
#: 17ac3a39e4bf496993ced64dc0d3080f
msgid ""
"This launch file starts the ``turtlesim_node`` node, which starts the "
"turtlesim simulation, with simulation configuration parameters that are "
"defined and passed to the nodes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:174
#: 905d32f62b764a22b4e9f38073aee031
msgid "2.2 Loading parameters from YAML file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:176
#: e3587e2a856b49d8a84e63343af5e2b5
msgid ""
"In the second launch, we will start a second turtlesim simulation with a "
"different configuration. Now create a ``turtlesim_world_2_launch.py`` "
"file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:206
#: a5c98b197a954839b0018086c4258717
msgid ""
"This launch file will launch the same ``turtlesim_node`` with parameter "
"values that are loaded directly from the YAML configuration file. "
"Defining arguments and parameters in YAML files make it easy to store and"
" load a large number of variables. In addition, YAML files can be easily "
"exported from the current ``ros2 param`` list. To learn how to do that, "
"refer to the :doc:`Understand parameters <../../Beginner-CLI-Tools"
"/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:211
#: 415058b2ed734cd8a03ac10f43117a3c
msgid ""
"Let's now create a configuration file, ``turtlesim.yaml``, in the "
"``/config`` folder of our package, which will be loaded by our launch "
"file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:221
#: 8743dcb73b214e2e9cbdb95e513a458f
msgid ""
"If we now start the ``turtlesim_world_2_launch.py`` launch file, we will "
"start the ``turtlesim_node`` with preconfigured background colors."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:223
#: 57eb1dbce6974945b7e20e2a0efa6823
msgid ""
"To learn more about using parameters and using YAML files, take a look at"
" the :doc:`Understand parameters <../../Beginner-CLI-Tools/Understanding-"
"ROS2-Parameters/Understanding-ROS2-Parameters>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:226
#: d4a88d55addf43139a52f764e5aded27
msgid "2.3 Using wildcards in YAML files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:228
#: eb0fdc7b19a94ada978ff485855bb1d2
msgid ""
"There are cases when we want to set the same parameters in more than one "
"node. These nodes could have different namespaces or names but still have"
" the same parameters. Defining separate YAML files that explicitly define"
" namespaces and node names is not efficient. A solution is to use "
"wildcard characters, which act as substitutions for unknown characters in"
" a text value, to apply parameters to several different nodes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:233
#: 06f644f6674b4bd0a9d008635ebb3f0b
msgid ""
"Now let's create a new ``turtlesim_world_3_launch.py`` file similar to "
"``turtlesim_world_2_launch.py`` to include one more ``turtlesim_node`` "
"node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:246
#: 48161175f2564cabb13232a92dfb1aed
msgid ""
"Loading the same YAML file, however, will not affect the appearance of "
"the third turtlesim world. The reason is that its parameters are stored "
"under another namespace as shown below:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:256
#: 92aae550ca294fdcb422b884b3a40275
msgid ""
"Therefore, instead of creating a new configuration for the same node that"
" use the same parameters, we can use wildcards syntax. ``/**`` will "
"assign all the parameters in every node, despite differences in node "
"names and namespaces."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:259
#: 4adbc7dd8ace475aad3858f3069cebde
msgid ""
"We will now update the ``turtlesim.yaml``, in the ``/config`` folder in "
"the following manner:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:269
#: 4b8cb80f191043f893bd1464a52c3eb3
msgid ""
"Now include the ``turtlesim_world_3_launch.py`` launch description in our"
" main launch file. Using that configuration file in our launch "
"descriptions will assign ``background_b``, ``background_g``, and "
"``background_r`` parameters to specified values in ``turtlesim3/sim`` and"
" ``turtlesim2/sim`` nodes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:273
#: c21a636b2a814e0288cabdcb6e1aa1a6
msgid "3 Namespaces"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:275
#: f440ccfc9dc34119a231edcf04d99548
msgid ""
"As you may have noticed, we have defined the namespace for the turlesim "
"world in the ``turtlesim_world_2_launch.py`` file. Unique namespaces "
"allow the system to start two similar nodes without node name or topic "
"name conflicts."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:282
#: e17c3e13e2044693a1d8b3703bc6a878
msgid ""
"However, if the launch file contains a large number of nodes, defining "
"namespaces for each of them can become tedious. To solve that issue, the "
"``PushROSNamespace`` action can be used to define the global namespace "
"for each launch file description. Every nested node will inherit that "
"namespace automatically."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:286
#: bb3af439328249ab8ea9da525f1574da
msgid ""
"To do that, firstly, we need to remove the ``namespace='turtlesim2'`` "
"line from the ``turtlesim_world_2_launch.py`` file. Afterwards, we need "
"to update the ``launch_turtlesim_launch.py`` to include the following "
"lines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:307
#: 7e5dbca21a0e434e96fabe91c9839b94
msgid ""
"Finally, we replace the ``turtlesim_world_2`` to "
"``turtlesim_world_2_with_namespace`` in the ``return LaunchDescription`` "
"statement. As a result, each node in the ``turtlesim_world_2_launch.py`` "
"launch description will have a ``turtlesim2`` namespace."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:311
#: 9aa3f457aafa4f5f80663f0aeb0e297e
msgid "4 Reusing nodes"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:313
#: 6b0e74de1d0f40cfbb5e182e1119e2f8
msgid "Now create a ``broadcaster_listener_launch.py`` file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:357
#: 341f843c1f9a4aeead9d3d789ea67bdb
msgid ""
"In this file, we have declared the ``target_frame`` launch argument with "
"a default value of ``turtle1``. The default value means that the launch "
"file can receive an argument to forward to its nodes, or in case the "
"argument is not provided, it will pass the default value to its nodes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:360
#: b4a13e0016364e4783fc0c1f88257606
msgid ""
"Afterwards, we use the ``turtle_tf2_broadcaster`` node two times using "
"different names and parameters during launch. This allows us to duplicate"
" the same node without conflicts."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:363
#: 5fc44c2b75624748805a49c0fa27ac97
msgid ""
"We also start a ``turtle_tf2_listener`` node and set its ``target_frame``"
" parameter that we declared and acquired above."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:366
#: 589a9a7d02564e7893902d359b7bf1f7
msgid "5 Parameter overrides"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:368
#: 00f6dd00d00840a2b37399314fbdbc98
msgid ""
"Recall that we called the ``broadcaster_listener_launch.py`` file in our "
"top-level launch file. In addition to that, we have passed it "
"``target_frame`` launch argument as shown below:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:380
#: 79c52b7e8fe64a50918ac92017c771c5
msgid ""
"This syntax allows us to change the default goal target frame to "
"``carrot1``. If you would like ``turtle2`` to follow ``turtle1`` instead "
"of the ``carrot1``, just remove the line that defines "
"``launch_arguments``. This will assign ``target_frame`` its default "
"value, which is ``turtle1``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:387
#: 9c65e1be6a5a4932a493d3c43c886529
msgid "Now create a ``mimic_launch.py`` file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:408
#: bddad1ecd5504582ba5a18f3daa69a36
msgid ""
"This launch file will start the ``mimic`` node, which will give commands "
"to one turtlesim to follow the other. The node is designed to receive the"
" target pose on the topic ``/input/pose``. In our case, we want to remap "
"the target pose from ``/turtle2/pose`` topic. Finally, we remap the "
"``/output/cmd_vel`` topic to ``/turtlesim2/turtle1/cmd_vel``. This way "
"``turtle1`` in our ``turtlesim2`` simulation world will follow "
"``turtle2`` in our initial turtlesim world."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:415
#: 1e1aaee79b354ca7bf400ce45149c75a
msgid "7 Config files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:417
#: 1546c982f3e9454ea3ae75ba5bfef471
msgid "Let's now create a file called ``turtlesim_rviz_launch.py``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:445
#: 70ada5ee408845649c272adf6faae695
msgid ""
"This launch file will start the RViz with the configuration file defined "
"in the ``turtle_tf2_py`` package. This RViz configuration will set the "
"world frame, enable TF visualization, and start RViz with a top-down "
"view."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:449
#: 8aa45b2ac67f4caf8d81d2e0f37947d9
msgid "8 Environment Variables"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:451
#: df7b4db12b954e87914e103088bea8a2
msgid ""
"Let's now create the last launch file called "
"``fixed_broadcaster_launch.py`` in our package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:475
#: cd028e5f4f7c4348b7f51524f0305b5c
msgid ""
"This launch file shows the way environment variables can be called inside"
" the launch files. Environment variables can be used to define or push "
"namespaces for distinguishing nodes on different computers or robots."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:479
#: 6a1956b941464cb3a87e5cda02a6e890
msgid "Running launch files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:482
#: 06516a1201e64943a9937b777b1ebcbc
msgid "1 Update setup.py"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:484
#: 70c4c9e18a7b4a57bfb2dc44b5ba861e
msgid ""
"Open ``setup.py`` and add the following lines so that the launch files "
"from the ``launch/`` folder and configuration file from the ``config/`` "
"would be installed. The ``data_files`` field should now look like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:505
#: 863dcb7711fe4e63969cf08df31e88fa
msgid ""
"To finally see the result of our code, build the package and launch the "
"top-level launch file using the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:511
#: a2c573263de64c818b43a42cb287867c
msgid ""
"You will now see the two turtlesim simulations started. There are two "
"turtles in the first one and one in the second one. In the first "
"simulation, ``turtle2`` is spawned in the bottom-left part of the world. "
"Its aim is to reach the ``carrot1`` frame which is five meters away on "
"the x-axis relative to the ``turtle1`` frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:516
#: d1b08b5994004039aa710eaff81c332c
msgid ""
"The ``turtlesim2/turtle1`` in the second is designed to mimic the "
"behavior of the ``turtle2``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:518
#: 20118307a47c489e9d5a588bd1159c70
msgid "If you want to control the ``turtle1``, run the teleop node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:524
#: 77413eda66634dea8f4cb091396065ba
msgid "As a result, you will see a similar picture:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:528
#: cf82f683e6904c6ab4a152a4eded9521
msgid ""
"In addition to that, the RViz should have started. It will show all "
"turtle frames relative to the ``world`` frame, whose origin is at the "
"bottom-left corner."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects.rst:536
#: 51115dee4cab4d1abcd029104dc604f8
msgid ""
"In this tutorial, you learned about various tips and practices of "
"managing large projects using ROS 2 launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:7
#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:38
#: 7fbee6ea2f374dac8c40050ae83806b7 88bc6d853f8a496d897cfef5edce841b
msgid "Using substitutions"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:9
#: 045bc1d730fd49159da40c09f8098af3
msgid "**Goal:** Learn about substitutions in ROS 2 launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:22
#: aa8ed0ded0264ee0bcda34ede45db44f
msgid ""
"Launch files are used to start nodes, services and execute processes. "
"This set of actions may have arguments, which affect their behavior. "
"Substitutions can be used in arguments to provide more flexibility when "
"describing reusable launch files. Substitutions are variables that are "
"only evaluated during execution of the launch description and can be used"
" to acquire specific information like a launch configuration, an "
"environment variable, or to evaluate an arbitrary Python expression."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:27
#: 73a3e4d8eaf64acd9661540c29300bc2
msgid "This tutorial shows usage examples of substitutions in ROS 2 launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:32
#: 0250b3dcecd94f2684da71564fbd4cda
msgid ""
"This tutorial uses the :doc:`turtlesim <../../Beginner-CLI-Tools"
"/Introducing-Turtlesim/Introducing-Turtlesim>` package. This tutorial "
"also assumes you are familiar with :doc:`creating packages "
"<../../Beginner-Client-Libraries/Creating-Your-First-ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:41
#: 212cf5e429ec458aa853d7fc820518a9
msgid "1 Create and setup the package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:43
#: 14c933a488604b948cfbb04340639677
msgid ""
"Create a new package of build_type ``ament_python`` called "
"``launch_tutorial``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:49
#: 341506b5803c4ad4a179c3e5a797f1cd
msgid "Inside of that package, create a directory called ``launch``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:71
#: 49cf173e88e24f638fac8e392be7b33e
msgid ""
"Finally, make sure to add in changes to the ``setup.py`` of the package "
"so that the launch files will be installed:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:92
#: 9c2c1fb19a9a4a958fc30b40aac2d83d
msgid "2 Parent launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:94
#: c73e9d06eb4e4e4ea4d65d5afbdd533c
msgid ""
"Let's create a launch file that will call and pass arguments to another "
"launch file. To do this, create an ``example_main_launch.py`` file in the"
" ``launch`` folder of the ``launch_tutorial`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:130
#: 48443d6523424d1da6db41d69b7d55fb
msgid ""
"In the ``example_main_launch.py`` file, the ``FindPackageShare`` "
"substitution is used to find the path to the ``launch_tutorial`` package."
" The ``PathJoinSubstitution`` substitution is then used to join the path "
"to that package path with the ``example_substitutions_launch.py`` file "
"name."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:141
#: d98c2209957e400ead5a392e50000af7
msgid ""
"The ``launch_arguments`` dictionary with ``turtlesim_ns`` and "
"``use_provided_red`` arguments is passed to the "
"``IncludeLaunchDescription`` action. The ``TextSubstitution`` "
"substitution is used to define the ``new_background_r`` argument with the"
" value of the ``background_r`` key in the ``colors`` dictionary."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:153
#: 65fed7f48b6e4cd585e8031b2edb2b00
msgid "3 Substitutions example launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:155
#: e648791b7c134bb08cd9eca5016eb60a
msgid "Now create an ``example_substitutions_launch.py`` file in the same folder."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:241
#: 67802d01402d45b0a90f7243fea6d101
msgid ""
"In the ``example_substitutions_launch.py`` file, ``turtlesim_ns``, "
"``use_provided_red``, and ``new_background_r`` launch configurations are "
"defined. They are used to store values of launch arguments in the above "
"variables and to pass them to required actions. These "
"``LaunchConfiguration`` substitutions allow us to acquire the value of "
"the launch argument in any part of the launch description."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:245
#: dc44916f10084988a34bb3ce3c4b3f00
msgid ""
"``DeclareLaunchArgument`` is used to define the launch argument that can "
"be passed from the above launch file or from the console."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:266
#: 7af5693049324afca3d32c95c6dab8f9
msgid ""
"The ``turtlesim_node`` node with the ``namespace`` set to "
"``turtlesim_ns`` ``LaunchConfiguration`` substitution is defined."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:277
#: c03921d01cc84927b2f81cd4d2249c2d
msgid ""
"Afterwards, the ``ExecuteProcess`` action called ``spawn_turtle`` is "
"defined with the corresponding ``cmd`` argument. This command makes a "
"call to the spawn service of the turtlesim node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:280
#: 962a55a2c4b4465ca26d99500d87bc0d
msgid ""
"Additionally, the ``LaunchConfiguration`` substitution is used to get the"
" value of the ``turtlesim_ns`` launch argument to construct a command "
"string."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:295
#: 9b0d9ad0294e46c1b34a6fec8cef3aaa
msgid ""
"The same approach is used for the ``change_background_r`` and "
"``change_background_r_conditioned`` actions that change the turtlesim "
"background's red color parameter. The difference is that the "
"``change_background_r_conditioned`` action is only executed if the "
"provided ``new_background_r`` argument equals ``200`` and the "
"``use_provided_red`` launch argument is set to ``True``. The evaluation "
"inside the ``IfCondition`` is done using the ``PythonExpression`` "
"substitution."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:329
#: bd8ef7a9896b47f68fa8fce226dcea49
msgid "4 Build the package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:342
#: 45079e541a044bb7ab4ff093ba9aadc3
msgid ""
"Now you can launch the ``example_main_launch.py`` file using the ``ros2 "
"launch`` command."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:356
#: 47b2b004a7ec404f9512ade8932a711e
msgid "Modifying launch arguments"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:358
#: 0fb6d029b8774c8db9b0d60cab10b06c
msgid ""
"If you want to change the provided launch arguments, you can either "
"update them in ``launch_arguments`` dictionary in the "
"``example_main_launch.py`` or launch the "
"``example_substitutions_launch.py`` with preferred arguments. To see "
"arguments that may be given to the launch file, run the following "
"command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:365
#: 43ef8f8b322e4e6e9c4ca0b90ddd1d6e
msgid ""
"This will show the arguments that may be given to the launch file and "
"their default values."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:383
#: 3d95ef3f380f4f57aa682fbfe2d30908
msgid "Now you can pass the desired arguments to the launch file as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:393
#: dbc759fc0b7246ab888ba7195430250e
msgid ""
"`The launch documentation "
"<https://github.com/ros2/launch/blob/{REPOS_FILE_BRANCH}/launch/doc/source/architecture.rst>`_"
" provides detailed information about available substitutions."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:398
#: 9d991f8946f64594baa145b49f006121
msgid ""
"In this tutorial, you learned about using substitutions in launch files. "
"You learned about their possibilities and capabilities to create reusable"
" launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Launch/Using-Substitutions.rst:401
#: d218808ffd2f4dfd8e094513db4cdabb
msgid ""
"You can now learn more about :doc:`using event handlers in launch files "
"<./Using-Event-Handlers>` which are used to define a complex set of rules"
" which can be used to dynamically modify the launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:6
#: 3b8d9549e59a4ed2a94530dc5801ca47
msgid "Monitoring for parameter changes (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:8
#: 79291070c61b45e1bdfe5710a292979f
msgid ""
"**Goal:** Learn to use the ParameterEventHandler class to monitor and "
"respond to parameter changes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:21
#: e1f948171254498da96af24adc55c977
msgid ""
"Often a node needs to respond to changes to its own parameters or another"
" node's parameters. The ParameterEventHandler class makes it easy to "
"listen for parameter changes so that your code can respond to them. This "
"tutorial will show you how to use the C++ version of the "
"ParameterEventHandler class to monitor for changes to a node's own "
"parameters as well as changes to another node's parameters."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:28
#: c1d84c6f500a4474996b6a27a097eac6
msgid ""
"Before starting this tutorial, you should first complete the following "
"tutorials:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:30
#: 4f7a88cbc3644507acd56d60c5392815
msgid ""
":doc:`../Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-"
"ROS2-Parameters`"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:31
#: 5b9865dfda4e4f97a7ea0478501275eb
msgid ":doc:`../Beginner-Client-Libraries/Using-Parameters-In-A-Class-CPP`"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:36
#: 929703792e894a968f19b2574c2563b8
msgid ""
"In this tutorial, you will create a new package to contain some sample "
"code, write some C++ code to use the ParameterEventHandler class, and "
"test the resulting code."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:42
#: f9388b0de78e427687bc51f123a97bce
msgid ""
"First, open a new terminal and :doc:`source your ROS 2 installation "
"<../Beginner-CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` "
"commands will work."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:46
#: 5c865f30ce4b441ab9d1ec1e46d23cd8
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. So, navigate into ``ros2_ws/src`` and then create "
"a new package there:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:53
#: bd4c81b6d7904275bde9d156db3532d6
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``cpp_parameter_event_handler`` and all its necessary files and "
"folders."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:60
#: f2f98a03232d4a438b7dd2366bc588c8
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don’t have to manually add dependencies to ``package.xml`` or "
"``CMakeLists.txt``. As always, though, make sure to add the description, "
"maintainer email and name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:72
#: f5141b027d0a40309c6e50701fe1b02e
msgid ""
"Inside the ``ros2_ws/src/cpp_parameter_event_handler/src`` directory, "
"create a new file called ``parameter_event_handler.cpp`` and paste the "
"following code within:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:119
#: 1b65c459a24b452c99edecf9c8b496e7
msgid ""
"The first statement, ``#include <memory>`` is included so that the code "
"can utilize the std::make_shared template. The next, ``#include "
"\"rclcpp/rclcpp.hpp\"`` is included to allow the code to reference the "
"various functionality provided by the rclcpp interface, including the "
"ParameterEventHandler class."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:122
#: 6ca2f940169e482c8058dd3f525fbf35
msgid ""
"After the class declaration, the code defines a class, "
"``SampleNodeWithParameters``. The constructor for the class declares an "
"integer parameter ``an_int_param``, with a default value of 0. Next, the "
"code creates a ``ParameterEventHandler`` that will be used to monitor "
"changes to parameters. Finally, the code creates a lambda function and "
"sets it as the callback to invoke whenever ``an_int_param`` is updated."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:129
#: e049c70f86fb43f3b63fbd3f22ec96d7
msgid ""
"It is very important to save the handle that is returned by "
"``add_parameter_callback``; otherwise, the callback will not be properly "
"registered."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:153
#: bdac5f84713d4e8f80a7037f5ea358bf
msgid ""
"Following the ``SampleNodeWithParameters`` is a typical ``main`` function"
" which initializes ROS, spins the sample node so that it can send and "
"receive messages, and then shuts down after the user enters ^C at the "
"console."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:170
#: d180b703abb94fc8b54b1ed12e890349
msgid ""
"To build this code, first open the ``CMakeLists.txt`` file and add the "
"following lines of code below the dependency ``find_package(rclcpp "
"REQUIRED)``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:237
#: 920b8bc302044ebf9cb8cc9cdd32a5f0
msgid ""
"The node is now active and has a single parameter and will print a "
"message whenever this parameter is updated. To test this, open up another"
" terminal and source the ROS setup file as before (. install/setup.bash) "
"and execute the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:244
#: 13435875f7494446bc6e05419f4923fa
msgid ""
"The terminal running the node will display a message similar to the "
"following:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:250
#: fc7ba06c1c1445b59d3a370671eaa11f
msgid ""
"The callback we set previously in the node has been invoked and has "
"displayed the new updated value. You can now terminate the running "
"parameter_event_handler sample using ^C in the terminal."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:254
#: a74bab52440a4ff48e5a30dcef00c99d
msgid "3.1 Monitor changes to another node's parameters"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:256
#: 271cf1c43ee6436dab8a492bad7cc3fd
msgid ""
"You can also use the ParameterEventHandler to monitor parameter changes "
"to another node's parameters. Let's update the SampleNodeWithParameters "
"class to also monitor for changes to a parameter in another node. We will"
" use the parameter_blackboard demo application to host a double parameter"
" that we will monitor for updates."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:260
#: 4f3998d1b7b74e71a82c92a19bb93e2e
msgid ""
"First update the constructor to add the following code after the existing"
" code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:278
#: b5fdd17c264a4ef1a1454c99aa39a806
msgid ""
"Then add another member variable, ``cb_handle2`` for the additional "
"callback handle:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:289
#: 6ae974f9a2a149d283a58b62e9135ba7
msgid ""
"In a terminal, navigate back to the root of your workspace, ``ros2_ws``, "
"and build your updated package as before:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:295
#: 49ad89e8c24547f0bb0176619d52462a
msgid "Then source the setup files:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:317
#: d11d3e195d164e40a7d5858b550a60d6
msgid ""
"Now, to test monitoring of remote parameters, first run the newly-built "
"parameter_event_handler code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:323
#: 1120ce42ebf24048bc6bce198378fed2
msgid ""
"Next, from another teminal (with ROS initialized), run the "
"parameter_blackboard demo application, as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:329
#: a862200302424ce888e33f910b9c4957
msgid ""
"Finally, from a third terminal (with ROS initialized), let's set a "
"parameter on the parameter_blackboard node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:335
#: cbfcf069e1084ebfb92759d7bf688379
msgid ""
"Upon executing this command, you should see output in the "
"parameter_event_handler window, indicating that the callback function was"
" invoked upon the parameter update:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:344
#: 5a239f7a06844dffae53fdd8ef2a2473
msgid ""
"You created a node with a parameter and used the ParameterEventHandler "
"class to set a callback to monitor changes to that parameter. You also "
"used the same class to monitor changes to a remote node. The "
"ParameterEventHandler is a convenient way to monitor for parameter "
"changes so that you can then respond to the updated values."
msgstr ""

#: ../../source/Tutorials/Intermediate/Monitoring-For-Parameter-Changes-CPP.rst:351
#: eae763eb53204531ab170f972741f79a
msgid ""
"To learn how to adapt ROS 1 parameter files for ROS 2, see the "
":doc:`Migrating YAML parameter files from ROS 1 to ROS2 <../../How-To-"
"Guides/Parameters-YAML-files-migration-guide>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:6
#: d3c1c77b578c4fc1808aa96febabac97
msgid "Managing Dependencies with rosdep"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:12
#: 35bc286d8824450787e369c1229a79de
msgid "**Goal:** Manage external dependencies using ``rosdep``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:18
#: 37b3f3cfc7504c558128083fb7b88e6b
msgid ""
"This tutorial will explain how to manage external dependencies using "
"``rosdep``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:21
#: 0921b936acf94bf4b62b19451535b824
msgid "What is rosdep?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:23
#: 3951232088e24d0ea2111041cc7d17c3
msgid ""
"``rosdep`` is a dependency management utility that can work with packages"
" and external libraries. It is a command-line utility for identifying and"
" installing dependencies to build or install a package. ``rosdep`` is "
"*not* a package manager in its own right; it is a meta-package manager "
"that uses its own knowledge of the system and the dependencies to find "
"the appropriate package to install on a particular platform. The actual "
"installation is done using the system package manager (e.g. ``apt`` on "
"Debian/Ubuntu, ``dnf`` on Fedora/RHEL, etc)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:28
#: bbab79c4cc584d9f88c8341006fdfcd0
msgid ""
"It is most often invoked before building a workspace, where it is used to"
" install the dependencies of the packages within that workspace."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:30
#: 0c2a97814caf4d1dbb36b3c379c025e0
msgid ""
"It has the ability to work over a single package or over a directory of "
"packages (e.g. workspace)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:34
#: 146e5a6bf6c84306a8f58f44ccc6d696
msgid ""
"While the name suggests it is for ROS, ``rosdep`` is semi-agnostic to "
"ROS. You can utilize this powerful tool in non-ROS software projects by "
"installing it as a standalone Python package. Successfully running "
"``rosdep`` relies on ``rosdep keys`` to be available, which can be "
"downloaded from a public git repository with a few simple commands."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:39
#: 9d89146b9258426aa41f97429d75c3ae
msgid "A little about package.xml files"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:41
#: 5dac097b0ea94027819da997e5a5b68e
msgid ""
"The ``package.xml`` is the file in your software where ``rosdep`` finds "
"the set of dependencies. It is important that the list of dependencies in"
" the ``package.xml`` is complete and correct, which allows all of the "
"tooling to determine the packages dependencies. Missing or incorrect "
"dependencies can lead to users not being able to use your package, to "
"packages in a workspace being built out-of-order, and to packages not "
"being able to be released."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:45
#: 8addb05b4a72470eb82e0f27dc68769c
msgid ""
"The dependencies in the ``package.xml`` file are generally referred to as"
" \"rosdep keys\". These dependencies are manually populated in the "
"``package.xml`` file by the package's creators and should be an "
"exhaustive list of any non-builtin libraries and packages it requires."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:48
#: ab9fa0dcae944c64b8addb94e76c7058
msgid ""
"These are represented in the following tags (see `REP-149 "
"<https://ros.org/reps/rep-0149.html>`__ for the full specification):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:51
#: d4f3d821f7de4efba770f300b059245e
msgid "``<depend>``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:53
#: 51438b5956c24882a7cee3ac1056e394
msgid ""
"These are dependencies that should be provided at both build time and run"
" time for your package. For C++ packages, if in doubt, use this tag. Pure"
" Python packages generally don't have a build phase, so should never use "
"this and should use ``<exec_depend>`` instead."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:58
#: 98e7dd8bccd440958e2fcebcd642c2c5
msgid "``<build_depend>``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:60
#: dbdd5a84ee2247ff8ca87be9a96379ae
msgid ""
"If you only use a particular dependency for building your package, and "
"not at execution time, you can use the ``<build_depend>`` tag."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:62
#: 44f37c538fff4059aa838114b4aa253c
msgid ""
"With this type of dependency, an installed binary of your package does "
"not require that particular package to be installed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:64
#: c586a1f3c15041cc987fcf11f9f79d98
msgid ""
"However, that can create a problem if your package exports a header that "
"includes a header from this dependency. In that case you also need a "
"``<build_export_depend>``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:68
#: 83d923e2b2464b8f9e8a298c14e8786d
msgid "``<build_export_depend>``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:70
#: 7c46225b04c045e99765310813bd2c89
msgid ""
"If you export a header that includes a header from a dependency, it will "
"be needed by other packages that ``<build_depend>`` on yours. This mainly"
" applies to headers and CMake configuration files. Library packages "
"referenced by libraries you export should normally specify ``<depend>``, "
"because they are also needed at execution time."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:75
#: 6eb766cf92ee4bbbb1005c8427073f06
msgid "``<exec_depend>``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:77
#: fdb2fceb4fb741cc9c8cf0ce8de31ad0
msgid ""
"This tag declares dependencies for shared libraries, executables, Python "
"modules, launch scripts and other files required when running your "
"package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:80
#: 145a88c2275141739fbd5ada4bb871fc
msgid "``<test_depend>``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:82
#: 215243eec4ff41baab313b7447381cb7
msgid ""
"This tag declares dependencies needed only by tests. Dependencies here "
"should *not* be duplicated with keys specified by ``<build_depend>``, "
"``<exec_depend>``, or ``<depend>``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:86
#: 79676c7a706b4e07900bc7fb0309b0df
msgid "How does rosdep work?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:88
#: f729f2d21c064d158a3e9db6f11010e1
msgid ""
"``rosdep`` will check for ``package.xml`` files in its path or for a "
"specific package and find the rosdep keys stored within. These keys are "
"then cross-referenced against a central index to find the appropriate ROS"
" package or software library in various package managers. Finally, once "
"the packages are found, they are installed and ready to go!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:92
#: 676faff582ca403e9a50ace34cfbaff8
msgid ""
"``rosdep`` works by retrieving the central index on to your local machine"
" so that it doesn't have to access the network every time it runs (on "
"Debian/Ubuntu the configuration for it is stored in "
"``/etc/ros/rosdep/sources.list.d/20-default.list``)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:94
#: 50a6f6f97ba44bb5b1d1b7e0e2113103
msgid ""
"The central index is known as ``rosdistro``, which `may be found online "
"<https://github.com/ros/rosdistro>`_. We'll explore that more in the next"
" section."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:98
#: e40691ee5a07479a9cb41b3d2823edeb
msgid "How do I know what keys to put in my package.xml?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:100
#: acf4663bea0f4039ad137d891d06e029
msgid "Great question, I'm glad you asked!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:102
#: e281900562a248d78ca7ac3234d80145
msgid ""
"If the package you want to depend in your package is ROS-based, AND has "
"been released into the ROS ecosystem [1]_, e.g. ``nav2_bt_navigator``, "
"you may simply use the name of the package. You can find a list of all "
"released ROS packages in https://github.com/ros/rosdistro at "
"``<distro>/distribution.yaml`` (e.g. ``humble/distribution.yaml``) for "
"your given ROS distribution."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:103
#: bf894b4c4ee14936aae6ee24b79ca8de
msgid ""
"If you want to depend on a non-ROS package, something often called "
"\"system dependencies\", you will need to find the keys for a particular "
"library. In general, there are two files of interest:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:105
#: b4a21f98864e42d18b3e05ba2f2e58c6
msgid ""
"`rosdep/base.yaml "
"<https://github.com/ros/rosdistro/blob/master/rosdep/base.yaml>`_ "
"contains the ``apt`` system dependencies"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:106
#: 8a0e7d1bac704516bb29a591c3881a23
msgid ""
"`rosdep/python.yaml "
"<https://github.com/ros/rosdistro/blob/master/rosdep/python.yaml>`_ "
"contains the Python dependencies"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:108
#: 4c20797f8e994ac194f6686aad42f181
msgid ""
"To find a key, search for your library in these files and find the name. "
"This is the key to put in a ``package.xml`` file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:111
#: 115a0e0758ff459ea552464f908ca2d9
msgid ""
"For example, imagine a package had a dependency on ``doxygen`` because it"
" is a great piece of software that cares about quality documentation "
"(hint hint). We would search ``rosdep/base.yaml`` for ``doxygen`` and "
"come across:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:129
#: 7e40293678aa4438877a06b6e913ce4d
msgid ""
"That means our rosdep key is ``doxygen``, which would resolve to those "
"various names in different operating system's package managers for "
"installation."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:132
#: 58b6d7a358f74352af6d96f594c3e1bf
msgid "What if my library isn't in rosdistro?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:134
#: d778ca7d03104f168f8569e533ef5d04
msgid ""
"If your library isn't in ``rosdistro``, you can experience the greatness "
"that is open-source software development: you can add it yourself! Pull "
"requests for rosdistro are typically merged well within a week."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:137
#: 44268a84dba84773861a7fbd1c7af373
msgid ""
"`Detailed instructions may be found here "
"<https://github.com/ros/rosdistro/blob/master/CONTRIBUTING.md#rosdep-"
"rules-contributions>`_ for how to contribute new rosdep keys. If for some"
" reason these may not be contributed openly, it is possible to fork "
"rosdistro and maintain a alternate index for use."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:141
#: 3456cc1a9c9147ed8ae37853385111a4
msgid "How do I use the rosdep tool?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:144
#: ffda143075be430d89ae5b2ed9728267
msgid "rosdep installation"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:146
#: 94fe9e9b73384a61a71bdd725de80672
msgid ""
"If you are using ``rosdep`` with ROS, it is conveniently packaged along "
"with the ROS distribution. This is the recommended way to get ``rosdep``."
" You can install it with:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:156
#: dd48e07098f94174aad7558f0a29e02c
msgid ""
"On Debian and Ubuntu, there is another, similarly named package called "
"``python3-rosdep2``. If that package is installed, make sure to remove it"
" before installing ``python3-rosdep``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:159
#: 8466d0c99d7b4f5cbca56bc55a7a0f2a
msgid ""
"If you are using ``rosdep`` outside of ROS, the system package may not be"
" available. In that case, you can install it directly from "
"https://pypi.org:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:167
#: 54d2cd49d75247128ebc838d513a5694
msgid "rosdep operation"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:169
#: 3c679e1f5310412db8f298c19f560355
msgid ""
"Now that we have some understanding of ``rosdep``, ``package.xml``, and "
"``rosdistro``, we're ready to use the utility itself! Firstly, if this is"
" the first time using ``rosdep``, it must be initialized via:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:177
#: ea4e55cb6eb549bb9bee0b4a71a54277
msgid ""
"This will initialize rosdep and ``update`` will update the locally cached"
" rosdistro index. It is a good idea to ``update`` rosdep on occasion to "
"get the latest index."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:180
#: 35cbfa9124e74441b5c20a51282175bd
msgid ""
"Finally, we can run ``rosdep install`` to install dependencies. "
"Typically, this is run over a workspace with many packages in a single "
"call to install all dependencies. A call for that would appear as the "
"following, if in the root of the workspace with directory ``src`` "
"containing source code."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:188
#: 90d280e27bfb4014a59602deaa806ad0
msgid "Breaking that down:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:190
#: 8c8dcec6b8a449d2a0e92f1995228a08
msgid ""
"``--from-paths src`` specifies the path to check for ``package.xml`` "
"files to resolve keys for"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:191
#: a1d9e5daef4f4cc9b17b18bbd5882378
msgid ""
"``-y`` means to default yes to all prompts from the package manager to "
"install without prompts"
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:192
#: ae0c56261a4b476ba428e18654ba78df
msgid ""
"``--ignore-src`` means to ignore installing dependencies, even if a "
"rosdep key exists, if the package itself is also in the workspace."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:194
#: 516517bf53d040a9a3eb2ea14294676b
msgid ""
"There are additional arguments and options available. Use ``rosdep -h`` "
"to see them, or look at the more complete documentation for rosdep at "
"http://docs.ros.org/en/independent/api/rosdep/html/ ."
msgstr ""

#: ../../source/Tutorials/Intermediate/Rosdep.rst:197
#: 5e60c4ba54d247f6b8cb7e8b6d6496c7
msgid ""
"\"released into the ROS ecosystem\" means the package is listed in one or"
" more of the ``<distro>/distribution.yaml`` directories in the `rosdistro"
" database <https://github.com/ros/rosdistro>`_."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:4
#: 10f19445ceed47b38348087a2a2f9295
msgid "Running Tests in ROS 2 from the Command Line"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:7
#: 55a317527f23487abe8261f1e775845e
msgid "Build and run your tests"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:9
#: e22ba2e92e5c4248af5f9670b1f96001
msgid ""
"To compile and run the tests, simply run the `test "
"<https://colcon.readthedocs.io/en/released/reference/verb/test.html>`__ "
"verb from ``colcon``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:15
#: 5c2e9ae70a5d4d948796094c7b9a8d22
msgid ""
"(where ``package_selection_args`` are optional package selection "
"arguments for ``colcon`` to limit which packages are built and run)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:17
#: 9af607fb55da439bb4c957d1afb8f365
msgid ""
":ref:`Sourcing the workspace <colcon-tutorial-source-the-environment>` "
"before testing should not be necessary. ``colcon test`` makes sure that "
"the tests run with the right environment, have access to their "
"dependencies, etc."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:21
#: 8ae4185e82ad411da89ca5d6695f12ce
msgid "Examine Test Results"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:23
#: f5cf0ffdcdfb47039df897ef33fb98b8
msgid ""
"To see the results, simply run the `test-result "
"<https://colcon.readthedocs.io/en/released/reference/verb/test-"
"result.html>`__ verb from ``colcon``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/CLI.rst:29
#: a51814905d1e43b0a4a170c53573d7a9
msgid "To see the exact test cases which fail, use the ``--verbose`` flag:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:4
#: 91b1709f6a2843209f0ba7c1f4cf337c
msgid "Writing Basic Tests with C++ with GTest"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:6
#: e595d1cd153943789b0e6a57a46f73ea
msgid ""
"Starting point: we'll assume you have a :ref:`basic ament_cmake "
"package<CreatePkg>` set up already and you want to add some tests to it."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:8
#: 35bcb2d3466a418d9da425c8a424c72a
msgid ""
"In this tutorial, we'll be using `gtest "
"<https://google.github.io/googletest/primer.html>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:11
#: ../../source/Tutorials/Intermediate/Testing/Python.rst:12
#: 05f79ce4e2934bce98a59f26b2f71c3b b2b585a85e924386a4558dce096f27a6
msgid "Package Setup"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:14
#: 843cabfbc30a4da293d1fa3b109a2fab
msgid "Source Code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:15
#: 3328fb35858248adb7375e9c616af711
msgid "We'll start off with our code in a file called ``test/tutorial_test.cpp``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:34
#: e65d11fed12244f7bc3049338862326a
msgid "package.xml"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:35
#: 645faa80d5794725974390264888fe8f
msgid "Add the following line to ``package.xml``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:42
#: b0081fb6a616413c920e64b08180135c
msgid "CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:59
#: 1055d0f8c1eb405289d825471a8e5645
msgid ""
"The testing code is wrapped in the ``if/endif`` block to avoid building "
"tests where possible. ``ament_add_gtest`` functions much like "
"``add_executable`` so you'll need to call ``target_include_directories``,"
" ``ament_target_dependencies`` and ``target_link_libraries`` as you "
"normally would."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:63
#: ../../source/Tutorials/Intermediate/Testing/Python.rst:60
#: a90219cde31f4162bd3e60ffead77403 b4a3524ed5ba413bba27ce4518212f35
msgid "Running Tests"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Cpp.rst:65
#: ../../source/Tutorials/Intermediate/Testing/Python.rst:62
#: a56398a6eb43484a8d8f363971b98811 ee9724cfb91a4f38b3c87f80d8cd0e2a
msgid ""
"See the :doc:`tutorial on how to run tests from the command line <CLI>` "
"for more information on running the tests and inspecting the test "
"results."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:4
#: a2261024506c4cbdb60b52660ce66545
msgid "Writing Basic Tests with Python"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:6
#: b0262421ea6d492c9e37df64477c1c01
msgid ""
"Starting point: we'll assume you have a :ref:`basic ament_python "
"package<CreatePkg>` set up already and you want to add some tests to it."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:8
#: 29918de29f084e719794f23890cda36a
msgid ""
"If you are using ament_cmake_python, refer to the the "
":doc:`ament_cmake_python docs<../../../How-To-Guides/Ament-CMake-Python-"
"Documentation>` for how to make tests dicoverable. The test contents and "
"invocation with ``colcon`` remain the same."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:15
#: 83d6770dbbed4ae38d83ba2a626e0d12
msgid "setup.py"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:17
#: 7e245f783a0a4d749acf800155b0d9b0
msgid ""
"Your ``setup.py`` must a test dependency on ``pytest`` within the call to"
" ``setup(...)``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:24
#: 9b1905f0a3684adfb91a9e185bf737d3
msgid "Test Files and Folders"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:26
#: b8451fca3a6f41d88bbe1b3ecd7bc23f
msgid ""
"Your test code needs to go in a folder named ``tests`` in the root of "
"your package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:28
#: da88669520e345cf9d4d8a3fb89164e0
msgid ""
"Any file that contains tests that you want to run must have the pattern "
"``test_FOO.py`` where ``FOO`` can be replaced with anything."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:31
#: bc8015a75b8e45bc9a813afdb270b8d5
msgid "Example package layout:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:49
#: 417d661f4c89467099beef59bbd81c15
msgid "Test Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:51
#: 405099391f504618a26b0803f52cacd9
msgid ""
"You can now write tests to your heart's content. There are `plenty of "
"resources on pytest <https://docs.pytest.org>`__, but in short, you can "
"write functions with the ``test_`` prefix and include whatever assert "
"statements you'd like."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:65
#: a4ebb34aa26b4cba926cccdba7b20b01
msgid "Special Commands"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:67
#: 2cb830f0b4c14d9e98aead09ec3750cd
msgid ""
"Beyond the :doc:`standard colcon testing commands <CLI>` you can also "
"specify arguments to the ``pytest`` framework from the command line with "
"the ``--pytest-args`` flag. For example, you can specify the name of the "
"function to run with"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Python.rst:75
#: 3085e70ca58c4de99aabf51dec859d74
msgid "To see the pytest output while running the tests, use these flags:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:4
#: a4284d3c803447c597636b8589a37e55
msgid "Testing"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:7
#: 59031adc36b2445e8b0d426a0241a1af
msgid "Why automatic tests?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:9
#: 4a3ab0b8416a4beda62b2c428260334a
msgid "Here are some of the many good reasons why should we have automated tests:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:11
#: 3375894d9e8c40ccb850de68f82700e6
msgid ""
"You can make incremental updates to your code more quickly. ROS has "
"hundreds of packages with many interdependencies, so it can be hard to "
"anticipate the problems a small change might cause. If your change passes"
" the unit tests, you can be more confident that you haven't introduced "
"problems — or at least the problems aren't your fault."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:12
#: 03a0615fd38a43e397e9439710b2c578
msgid ""
"You can refactor your code with greater confidence. Passing the unit "
"tests verifies that you haven't introduced any bugs while refactoring. "
"This gives you this wonderful freedom from change fear!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:13
#: 301c456749ab4a33b24b33783f30bae8
msgid ""
"It leads to better designed code. Unit tests force you to write your code"
" so that it can be more easily tested. This often means keeping your "
"underlying functions and framework separate, which is one of our design "
"goals with ROS code."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:14
#: 7be04e9b4d214034b3418e75b7911002
msgid ""
"They prevent recurring bugs (bug regressions). It's a good practice to "
"write a unit test for every bug you fix. In fact, write the unit test "
"before you fix the bug. This will help you to precisely, or even "
"deterministically, reproduce the bug, and much more precisely understand "
"what the problem is. As a result, you will also create a better patch, "
"which you can then test with your regression test to verify that the bug "
"is fixed. That way the bug won't accidentally get reintroduced if the "
"code gets modified later on. It also means that it will be easier to "
"convince the reviewer of the patch that the problem is solved, and the "
"contribution is of high quality."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:15
#: ce92ff8a83b64c09925e380de7e4b3fc
msgid ""
"Other people can work on your code more easily (an automatic form of "
"documentation). It can be hard to figure out whether or not you've broken"
" someone else's code when you make a change. The unit tests are a tool "
"for other developers to validate their changes. Automatic tests document "
"your coding decisions, and communicate to other developers automatically "
"about their violation. Thus tests become documentation for your code — a "
"documentation that does not need to be read for the most time, and when "
"it does need to be inspected the test system will precisely indicate what"
" to read (which tests fail). By writing automatic tests you make other "
"contributors faster. This improves the entire ROS project."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:16
#: 3cd7fc9f8d554930a789301af7603ce3
msgid ""
"It is much easier to become a contributor to ROS if we have automated "
"unit tests. It is very difficult for new external developers to "
"contribute to your components. When they make changes to code, they are "
"often doing it in the blind, driven by a lot of guesswork. By providing a"
" harness of automated tests, you help them in the task. They get "
"immediate feedback for their changes. It becomes easier to contribute to "
"a project, and new contributors to join more easily. Also their first "
"contributions are of higher quality, which decreases the workload on "
"maintainers. A win-win!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:17
#: 80ae8f1ca9824f2d9152473ec3a7b917
msgid ""
"Automatic tests simplify maintainership. Especially for mature packages, "
"which change more slowly, and mostly need to be updated to new "
"dependencies, an automatic test suite helps to very quickly establish "
"whether the package still works. This makes it much easier to decide "
"whether the package is still supported or not."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:18
#: 08777e6b1a17470c9c646d2083cde160
msgid ""
"Automatic tests amplify the value of Continuous Integration. Regression "
"tests, along with normal scenario-based requirements tests, contribute to"
" overall body of automated tests for your component. Your component is "
"better tested against evolution of other APIs that it depends on (CI "
"servers will tell you better and more precisely what problems develop in "
"your code)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:20
#: b8a42a5e641941c1aaefc8b29445baa0
msgid ""
"Perhaps the most important benefit of writing tests is that tests make "
"you a good citizen. Tests influence quality in the long term. It is a "
"well accepted practice in many open-source projects. By writing "
"regressions tests, you are contributing to long term quality of the ROS "
"ecosystem."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:26
#: 7ccb5e7972784fc7bea6476ffbbd5a01
msgid "Is this all coming for free?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:28
#: 85c4f51fec324d49ab1cb37e177311ef
msgid ""
"Of course, there is never free lunch. To get the benefits of testing, "
"some investment is necessary."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:31
#: 5ba95416754d4b40b7a2abf4383da610
msgid ""
"You need to develop a test, which sometimes may be difficult or costly. "
"Sometimes it might also be nontrivial, as the test should be automatic. "
"Things get particularly hairy if your tests should involve special "
"hardware (they should not: try to use simulation, mock the hardware, or "
"narrow down the test to a smaller software problem) or require external "
"environment, for instance human operators."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:32
#: 8d9856dfc01b4675b772f5d32713ca72
msgid ""
"Regression tests and other automatic tests need to be maintained. When "
"the design of the component changes, a lot of tests become invalidated "
"(for instance they no longer compile, or throw runtime exceptions related"
" to the API design). These tests fail not only because the redesign re-"
"introduced bugs but also because they need to be updated to the new "
"design. Occasionally, with bigger redesigns, old regression tests should "
"be dropped."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:33
#: c8353bc3c8384e0c9c43baef11823048
msgid ""
"Large bodies of tests can take a long time to run, which can increase "
"Continuous Integration server costs."
msgstr ""

#: ../../source/Tutorials/Intermediate/Testing/Testing-Main.rst:36
#: 3212b6cd10794a8e9bd5041e3f57f413
msgid "Available Tutorials:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:8
#: 2c360dfcca81455188379f23ab200d49
msgid "Adding a frame (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:10
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:10
#: 6d2a3fb3e5a8495e809f22bd5698ac9c 9ea8d029542c4b32b715d549c55c5230
msgid "**Goal:** Learn how to to add an extra frame to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:23
#: b74f290e053f41ccbe685253edd3032c
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a "
":doc:`tf2 broadcaster <./Writing-A-Tf2-Broadcaster-Cpp>` and a :doc:`tf2 "
"listener <Writing-A-Tf2-Listener-Cpp>`. This tutorial will teach you how "
"to add extra fixed and dynamic frames to the transformation tree. In "
"fact, adding a frame in tf2 is very similar to creating the tf2 "
"broadcaster, but this example will show you some additional features of "
"tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:27
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:27
#: 393c19e6a32e4d70aa58bf7d0aa96d2d fecbc8770dc74dcca053b678a73a6a9e
msgid ""
"For many tasks related to transformations, it is easier to think inside a"
" local frame. For example, it is easiest to reason about laser scan "
"measurements in a frame at the center of the laser scanner. tf2 allows "
"you to define a local frame for each sensor, link, or joint in your "
"system. When transforming from one frame to another, tf2 will take care "
"of all the hidden intermediate frame transformations that are introduced."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:33
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:33
#: 83311cb8c4fd47aca5471966e1810601 dbb909b9678942159a26fafbf2c75d5c
msgid "tf2 tree"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:35
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:35
#: 76c56792fb304357942411e0c71bbe90 ed873324eec04830b757534a48e2527a
msgid ""
"tf2 builds up a tree structure of frames and, thus, does not allow a "
"closed loop in the frame structure. This means that a frame only has one "
"single parent, but it can have multiple children. Currently, our tf2 tree"
" contains three frames: ``world``, ``turtle1`` and ``turtle2``. The two "
"turtle frames are children of the ``world`` frame. If we want to add a "
"new frame to tf2, one of the three existing frames needs to be the parent"
" frame, and the new one will become its child frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:47
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:47
#: 04a9a0bd0d1649258383e1e3b8382aea 85f83e04f2cb4176bbb270ff82f14d80
msgid "1 Write the fixed frame broadcaster"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:49
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:49
#: 5b842364c1cb478f8c4a9df5ec41413f abcfab648e304ef7bd0befe34600e68d
msgid ""
"In our turtle example, we'll add a new frame ``carrot1``, which will be "
"the child of the ``turtle1``. This frame will serve as the goal for the "
"second turtle."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:52
#: 71ef655d83d54281b69a34a72c3c2293
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_cpp`` "
"package we created in the previous tutorials. Download the fixed frame "
"broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:83
#: 9a699b7b9ca04929bd8a281691704c07
msgid "Now open the file called ``fixed_frame_tf2_broadcaster.cpp``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:139
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:129
#: 53186c4fcd504128977120f31270601e 865bb6b04cf949ffbb7aeb56488c15e8
msgid ""
"The code is very similar to the tf2 broadcaster tutorial example and the "
"only difference is that the transform here does not change over time."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:144
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:134
#: 4e52a072586240ebb8298a2feaf3035c a3bb8292c2784064a5fa17d7bfa95fef
msgid ""
"Let's take a look at the key lines in this piece of code. Here we create "
"a new transform, from the parent ``turtle1`` to the new child "
"``carrot1``. The ``carrot1`` frame is 2 meters offset in y axis in terms "
"of the ``turtle1`` frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:162
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:451
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:222
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:307
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:249
#: 4f6fe16fabc94f86bb77b09272cb0569 704811967d2244d39c0eab037b505830
#: e0086e9e17d2453fa51605e59287f63e e44c2c78b7e9404d83b8ccb5175dc5d9
#: fe3263b1d2e446fca9d26826e8c2bcb9
msgid ""
"Navigate one level back to the ``learning_tf2_cpp`` directory, where the "
"``CMakeLists.txt`` and ``package.xml`` files are located."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:164
#: 466724cebec745e19b8e2cab0cb26848
msgid ""
"Now open the ``CMakeLists.txt`` add the executable and name it "
"``fixed_frame_tf2_broadcaster``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:185
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:162
#: 6dca06834ffe4e449b9e4c24615fd906 91c4832bd30441c1b173de1950fe21d9
msgid "1.3 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:187
#: c12a6a4710674d48bb7b8f5098c64ce2
msgid ""
"Now let's create a launch file for this example. With your text editor, "
"create a new file called ``turtle_tf2_fixed_frame_demo_launch.py``, and "
"add the following lines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:220
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:197
#: 71545579df214d81918f19d2e476458b c82355b6c1264313a4dd1cf7183ea358
msgid ""
"This launch file imports the required packages and then creates a "
"``demo_nodes`` variable that will store nodes that we created in the "
"previous tutorial's launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:222
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:199
#: 16ae1d7563b048c0bfd2c0a0cd7e1c2b e1c6e25b0dc94c5aa2ed0876e1936e23
msgid ""
"The last part of the code will add our fixed ``carrot1`` frame to the "
"turtlesim world using our ``fixed_frame_tf2_broadcaster`` node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:233
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:211
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:272
#: 747636cc6ba34521984c3a667a189ece 7709be76acea4eaa8360b1217559734f
#: d19fae4b6146440396585e4942f8de82
msgid "1.4 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:235
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:511
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:213
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:467
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:274
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:594
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:336
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:357
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:330
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:283
#: 4b4febd589114c5b8745338be8f4bd03 530c77e6870a4ca28de15b5bc1537f5b
#: 559cfb58efb54685b0697a621de10880 5b72c43d18304c278b885e25e5c3854c
#: 5c61b39536f04de5afbf4b0e16c091d5 9b19c07fe4ca4ced86a3257c80a49abd
#: 9b28277f7e2743feb46fc4fa96bc4f9b a0f0464d0aa34959a2abec7584f2a904
#: b8eacb5d41474486b2b83f86a6e86d9c cb027252839a4814b408a07149e6048b
msgid ""
"Run ``rosdep`` in the root of your workspace to check for missing "
"dependencies."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:247
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:251
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:523
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:527
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:225
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:229
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:479
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:483
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:286
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:290
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:606
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:610
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:348
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:352
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:369
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:373
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:342
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:346
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:295
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:299
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:299
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:303
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:318
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:322
#: 0b19d09f609e439a9b89e562375e5914 14734323553a404ead322156b57e3dab
#: 1a501d1a775c46898262e5cc33ccf4d1 2ed143bfd1c24c288aed0af9077f956e
#: 3064127feea54324b172aaabaa27c802 399aca5af4324148b3e837dfe1947393
#: 3ef579cf68d64ff29f60ff7d07cc95dd 59ab3dcacfa140d3a98b8491a4c777b1
#: 5bea2d0ac82842e9bf1dbfc17009f8e8 5cad8d7d306e428393eee9ab06243365
#: 7e7f06441a424b3ca06bb9818054c9ab a3a43e9f58574556b04728a36a5ee092
#: a4e7a2150bfc4fc29990bdefbd4c4f88 a8d82097e4b3478e82f414eb421e9dc2
#: ad2d37eefb864b899673d8df5ab8f2bd b13f121625fc4665a15aca25e7d10afc
#: c36872b5227a4ca9b36507a638d76ca7 c886af3fd8d54ad9a1eb06cf07e20da9
#: d2c0c0f6691347bbbd25581907330ee7 d38ade3136454ddb865940be188c9ff5
#: dacc80942b5f43518db27f058ea02cc1 e4eb3d48fce540318a18a3504833f100
#: e83f6ae4542f48e3935553ce220ca544 fcc5fc4ebd5e40a3aeca710e1b34303b
msgid ""
"rosdep only runs on Linux, so you will need to install ``geometry_msgs`` "
"and ``turtlesim`` dependencies yourself"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:253
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:529
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:354
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:348
#: 286a9b619eeb4a12a98f7d2956df6e06 434d20b2432746dd8ae7c91d61d07589
#: a21f6c12d1274759a55fd379f2ab742a c7e6def4ee4e4887b98e5b256b67c96d
msgid "From the root of your workspace, build your updated package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:275
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:551
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:253
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:507
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:634
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:376
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:397
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:370
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:323
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:327
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:346
#: 0b6def93e7404a699ebb8897075e34dc 2a17a28804e246fca923e2a864bff9d6
#: 3fe2750724dd4d87897b1c81bc30b20e 608ea22adf304ed5a16b2b965f479a9a
#: 6898468cddee41c68c259fee9f0095a9 6eab23090e714ac49176a3c6f422d9e7
#: b297f816865c4080a1efbc37424954cd c100413baebb455db6bc66939a5709a3
#: d9b9889ee2ed453ea4b5bc3d83b313f6 f4d08db4bff94514a316bc0813f60437
#: f6c8f8d703ce4215a6f522da249961b2
msgid ""
"Open a new terminal, navigate to the root of your workspace, and source "
"the setup files:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:302
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:280
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:534
#: 25de0393f64949b38d7e25a34fb7eac5 a9a2144f80d846a393a1184b350caf76
#: e7013621a0c14b40a825ba016dc94764
msgid "1.5 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:304
#: 7de5bd44c636465bbfbaa2840ab1f642
msgid "Now you can start the turtle broadcaster demo:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:310
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:288
#: d3ce5971f3f2448bb356cb76fdc299bb ee2a0b1a72714911a008964cb03efb86
msgid ""
"You should notice that the new ``carrot1`` frame appeared in the "
"transformation tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:314
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:292
#: ac394c3139954f69ac828241cc606fd9 f1451c4d3c98402f95ad55038b4e1bfb
msgid ""
"If you drive the first turtle around, you should notice that the behavior"
" didn't change from the previous tutorial, even though we added a new "
"frame. That's because adding an extra frame does not affect the other "
"frames and our listener is still using the previously defined frames."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:317
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:295
#: 3c3349a25dd84b7baf04d0d388110f49 72c87861f85b4a72a9cfc9d5c03bbcc7
msgid ""
"Therefore if we want our second turtle to follow the carrot instead of "
"the first turtle, we need to change value of the ``target_frame``. This "
"can be done two ways. One way is to pass the ``target_frame`` argument to"
" the launch file directly from the console:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:325
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:303
#: 90f9df25f2d04d68be77ce32d8e6f286 aab7dda1004e4f22bfcf248546b40325
msgid ""
"The second way is to update the launch file. To do so, open the "
"``turtle_tf2_fixed_frame_demo_launch.py`` file, and add the "
"``'target_frame': 'carrot1'`` parameter via ``launch_arguments`` "
"argument."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:336
#: 8c1bd00f008049e1918b129b16222243
msgid ""
"Now rebuild the package, restart the "
"``turtle_tf2_fixed_frame_demo_launch.py``, and you'll see the second "
"turtle following the carrot instead of the first turtle!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:341
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:319
#: d7051c0ad3f44df0b421665001fb764a f582da98d34a4e17b5ac740289b126bd
msgid "2 Write the dynamic frame broadcaster"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:343
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:321
#: 0889680323b046738d532e62f12746d8 8c9e0cd1f0c04903a3c8b580b45f9ab2
msgid ""
"The extra frame we published in this tutorial is a fixed frame that "
"doesn't change over time in relation to the parent frame. However, if you"
" want to publish a moving frame you can code the broadcaster to change "
"the frame over time. Let's change our ``carrot1`` frame so that it "
"changes relative to ``turtle1`` frame over time. Now download the dynamic"
" frame broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:376
#: f2f246cead944099aa9205029eb25e30
msgid "Now open the file called ``dynamic_frame_tf2_broadcaster.cpp``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:439
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:407
#: 6bf7162765b442808ff0644bad1a547a 83c54527519b4966bb3b78156592be64
msgid ""
"Instead of a fixed definition of our x and y offsets, we are using the "
"``sin()`` and ``cos()`` functions on the current time so that the offset "
"of ``carrot1`` is constantly changing."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:449
#: b7d723c564c647cf8888c02551e3bda3
msgid "2.2 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:453
#: 79129906ae1a4bfeb6b47cf387ad84d8
msgid ""
"Now open the ``CMakeLists.txt`` add the executable and name it "
"``dynamic_frame_tf2_broadcaster``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:474
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:430
#: 3a33130a014b417ea03efe41ca751c9e 47ce87f4fd7540d586d97f27ab9921f5
msgid "2.3 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:476
#: fdd216cd267140b3beb58acb3781b307
msgid ""
"To test this code, create a new launch file "
"``turtle_tf2_dynamic_frame_demo_launch.py`` and paste the following code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:509
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:465
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:592
#: 1d48e40731ab4cfba631806038e84764 373af9b1cd1842ea9c2718259c2ac772
#: 759cd732a8ce41fb854a356410958954
msgid "2.4 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:578
#: ffe2dcf4852945389f7d2d08ba704c42
msgid "2.5 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:580
#: 8f604b14ac9343769a783aab2164b58c
msgid "Now you can start the dynamic frame demo:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:586
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:542
#: 7d23eac2248f444f91877f0c3bbf2ec7 9bf8a1237a6442ae8ba5938906da3d60
msgid ""
"You should see that the second turtle is following the carrot's position "
"that is constantly changing."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp.rst:594
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:549
#: 2eacf1d89aee47229edcb9e46e85aaa8 a7a6fbe1267047b58d291231a0502954
msgid ""
"In this tutorial, you learned about the tf2 transformation tree, its "
"structure, and its features. You also learned that it is easiest to think"
" inside a local frame, and learned to add extra fixed and dynamic frames "
"for that local frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:8
#: 1632cc0d66b040fcbc252421e0739c2d
msgid "Adding a frame (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:23
#: 9d94243fd59142c1a7137dd08ecc41a4
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a "
":doc:`tf2 broadcaster <./Writing-A-Tf2-Broadcaster-Py>` and a :doc:`tf2 "
"listener <./Writing-A-Tf2-Listener-Py>`. This tutorial will teach you how"
" to add extra fixed and dynamic frames to the transformation tree. In "
"fact, adding a frame in tf2 is very similar to creating the tf2 "
"broadcaster, but this example will show you some additional features of "
"tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:52
#: 54a15175134a434abdcefb5e8b5e8062
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_py`` "
"package we created in the previous tutorials. Download the fixed frame "
"broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:83
#: 0494fa1b9a9d40c38b67d5800ae5389d
msgid "Now open the file called ``fixed_frame_tf2_broadcaster.py``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:150
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:246
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:217
#: 48ce316af6f140eda5df92c28547b559 7ede82de26b84150b4a662378348432c
#: a3d770eaaf5c42b88f14d14a41e7457e
msgid "1.2 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:152
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:420
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:263
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:248
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:219
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:295
#: 1eef6b640fdc42b493b55b6f8bb1006f 546093d21d7b47959a978baea7a42428
#: 9c4b38616357454793061c9460d22cb4 bd07cb38e23247b8b8ae79cb87eb648e
#: ca171b706b4843b9a0e2d36d7af5a60e eb8d0b5f2c834e3083c78ba8d3f1f682
msgid ""
"To allow the ``ros2 run`` command to run your node, you must add the "
"entry point to ``setup.py`` (located in the ``src/learning_tf2_py`` "
"directory)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:155
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:423
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:251
#: 634d9cfde28a4dd591db488b502d7254 bad38b8d50204917a3edd85cd4800268
#: eb6d7e3430b245da9b7458e2553aeb8a
msgid ""
"Finally, add the following line between the ``'console_scripts':`` "
"brackets:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:164
#: 395f6225c46d4423a528326b82e2dbd2
msgid ""
"Now let's create a launch file for this example. With your text editor, "
"create a new file called "
"``launch/turtle_tf2_fixed_frame_demo_launch.py``, and add the following "
"lines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:231
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:485
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:375
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:301
#: 5d57f2642475495b8a716e0c62a02bee 89294cd902754537a7be8f44e823eb89
#: d67819af522a478cb13e1d6ab4c39452 d79eda70ce51421abb3d5614ba5ee879
msgid "Still in the root of your workspace, build your package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:282
#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:536
#: 027d8a8858084f6a9c824c1fd0fca43f 306606ba638e456b8855b2880cd7fd32
msgid "Now you are ready to run the launch file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:314
#: 962f86cf4c65456cb08b3f1afd026737
msgid ""
"Now just rebuild the package, restart the "
"``turtle_tf2_fixed_frame_demo_launch.py``, and you'll see the second "
"turtle following the carrot instead of the first turtle!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:354
#: 3fde18e43fa84293a89b691c79b28800
msgid "Now open the file called ``dynamic_frame_tf2_broadcaster.py``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:432
#: 7d980b6d2e494f5a82fa9260c2749e8a
msgid ""
"To test this code, create a new launch file "
"``launch/turtle_tf2_dynamic_frame_demo_launch.py`` and paste the "
"following code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:8
#: ded584dd06894e1ba9468a5637a70dc6
msgid "Debugging"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:10
#: 9d7e003627f244e9b44a01e48d9215de
msgid ""
"**Goal:** Learn how to use a systematic approach for debugging tf2 "
"related problems."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:23
#: 662bd9d8d4c44b079754a9436b8ec65e
msgid ""
"This tutorial walks you through the steps to debug a typical tf2 problem."
" It will also use many of the tf2 debugging tools, such as ``tf2_echo``, "
"``tf2_monitor``, and ``view_frames``. This tutorial assumes you have "
"completed the :doc:`learning tf2 <./Tf2-Main>` tutorials."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:28
#: 5204f42af05b498ab39886b03c8a3407
msgid "Debugging example"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:31
#: 01fb731e7c424ca791c12a46a1112ed5
msgid "1 Setting and starting the example"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:33
#: f05d04e0c59d40208a285cca4d28b73f
msgid ""
"For this tutorial we will set up a demo application that has a number of "
"problems. The goal of this tutorial is to apply a systematic approach to "
"find and tackle these problems. First, let's create the source file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:37
#: a4cead064641418e841342ef0cc3b6ad
msgid ""
"Go to the ``learning_tf2_cpp`` package we created in :doc:`tf2 tutorials "
"<./Tf2-Main>`. Inside the ``src`` directory make a copy of the source "
"file ``turtle_tf2_listener.cpp`` and rename it to "
"``turtle_tf2_listener_debug.cpp``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:40
#: 43ad03f7c9db4b56888403d0af920281
msgid "Open the file using your preferred text editor, and change line 65 from"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:46
#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:62
#: 3f76fbbc3ff448e589c828cc495347ae 496f0cadde564c3ba714c81fe4f70a3c
msgid "to"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:52
#: a4b918c170f744e1aac39f5af945fcaa
msgid "and change ``lookupTransform()`` call in lines 73-77 from"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:72
#: 49a0e5af16a74d24b607236a5d9f30bc
msgid ""
"And save changes to the file. In order to run this demo, we need to "
"create a launch file ``start_tf2_debug_demo_launch.py`` in the ``launch``"
" subdirectory of package ``learning_tf2_cpp``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:121
#: ef6403e68fdd4e43b023417fb3216874
msgid ""
"Don't forget to add the ``turtle_tf2_listener_debug`` executable to the "
"``CMakeLists.txt`` and build the package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:123
#: 383196823ccd45b38e1832f194f758ad
msgid "Now let's run it to see what happens:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:129
#: b007b6ccf370471e8e094c306be3212c
msgid ""
"You will now see that the turtlesim came up. At the same time, if you run"
" the ``turtle_teleop_key`` in another terminal window, you can use the "
"arrow keys to drive the ``turtle1`` around."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:136
#: 60feeaa98a774d0bac50fed10a1d7249
msgid ""
"You will also notice that there is a second turtle in the lower, left "
"corner. If the demo would be working correctly, this second turtle should"
" be following the turtle you can command with the arrow keys. However, it"
" is not the case because we have to solve some problems first. You should"
" notice the following message:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:148
#: b21c70d2bc7a4e32a89d64dcb24f8cf7
msgid "2 Finding the tf2 request"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:150
#: 11773cacaa8c46ce9c5463014c5e6249
msgid ""
"Firstly, we need to find out what exactly we are asking tf2 to do. "
"Therefore, we go into the part of the code that is using tf2. Open the "
"``src/turtle_tf2_listener_debug.cpp`` file, and take a look at line 65:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:158
#: 448b60203cf54dd58443636cff36a65c
msgid "and lines 73-77:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:168
#: 206429637e504bc78334934f23ff322f
msgid ""
"Here we do the actual request to tf2. The three arguments tell us "
"directly what we are asking tf2: transform from frame ``turtle3`` to "
"frame ``turtle1`` at time ``now``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:171
#: f4140a15df374e0f8c620fa6ab910bf9
msgid "Now, let's take a look at why this request to tf2 is failing."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:174
#: acb4b9b0d63f4b57bd2aea254b87cf80
msgid "3 Checking the frames"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:176
#: 9d68e1ba1baf4c9b96c414415c699740
msgid ""
"Firstly, to find out if tf2 knows about our transform between ``turtle3``"
" and ``turtle1``, we will use ``tf2_echo`` tool."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:182
#: 879aaff4fe73480cae5add5af9286379
msgid "The output tells us that frame ``turtle3`` does not exist:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:190
#: fecd70b140ee4237b9c9ce34f8c1d622
msgid ""
"Then what frames do exist? If you like to get a graphical representation "
"of this, use ``view_frames`` tool."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:197
#: 62ef758177534577a6a8d9277f2f8272
msgid "Open the generated ``frames.pdf`` file to see the following output:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:201
#: e86767b712414e18bbd91115509c6f0c
msgid ""
"So obviously the problem is that we are requesting transform from frame "
"``turtle3``, which does not exist. To fix this bug, just replace "
"``turtle3`` with ``turtle2`` in line 65."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:204
#: 42182ab0f04b43ae905360c4ac736428
msgid "And now stop the running demo, build it, and run it again:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:210
#: e0b9bbb88975458ea0ea8db5666c0534
msgid "And right away we run into the next problem:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:220
#: 15a0d4e9e6cd4aee969c8857db0f75d4
msgid "4 Checking the timestamp"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:222
#: 4669765961c14dd9bb64aaf9f5426ad0
msgid ""
"Now that we solved the frame name problem, it is time to look at the "
"timestamps. Remember, we are trying to get the transform between "
"``turtle2`` and ``turtle1`` at the current time (i.e., ``now``). To get "
"statistics on the timing, call ``tf2_monitor`` with corresponding frames."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:230
#: 80bc311a7c564384b828518fbbe9fefb
msgid "The result should look something like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:244
#: 43c301379d7645cda4455e30a8740360
msgid ""
"The key part here is the delay for the chain from ``turtle2`` to "
"``turtle1``. The output shows there is an average delay of about 3 "
"milliseconds. This means that tf2 can only transform between the turtles "
"after 3 milliseconds are passed. So, if we would be asking tf2 for the "
"transformation between the turtles 3 milliseconds ago instead of ``now``,"
" tf2 would be able to give us an answer sometimes. Let's test this "
"quickly by changing lines 73-77 to:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:258
#: 5803d558dec441df9296734b3aebfdae
msgid ""
"In the new code we are asking for the transform between the turtles 100 "
"milliseconds ago. It is usual to use a longer periods, just to make sure "
"that the transform will arrive. Stop the demo, build and run:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:266
#: b3ca0344006a4717acfa21f1cc6be7db
msgid "And you should finally see the turtle move!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:270
#: efdd6926064f41dea31f6e3f449a9f15
msgid ""
"That last fix we made is not really what you want to do, it was just to "
"make sure that was our problem. The real fix would look like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:281
#: 4a78d915798649bc8d946455f4200790
msgid "Or like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:291
#: 6cf16f828fbf48be8d8088120f09c03c
msgid ""
"You can learn more about timeouts in the :doc:`Using time <./Learning-"
"About-Tf2-And-Time-Cpp>` tutorial, and use them as below:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Debugging-Tf2-Problems.rst:305
#: 98a72e8272a343ce9096942c8a9165b1
msgid ""
"In this tutorial you learned how to use a systematic approach for "
"debugging tf2 related problems. You also learned how to use tf2 debugging"
" tools, such as ``tf2_echo``, ``tf2_monitor``, and ``view_frames`` to "
"help you debug those tf2 problems."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:8
#: c8718662fe794a3cbfe5e344a86eb5d6
msgid "Introducing ``tf2``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:10
#: f31731adcb0441628332fbb44c36f5df
msgid ""
"**Goal:** Run a turtlesim demo and see some of the power of tf2 in a "
"multi-robot example using turtlesim."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:23
#: 029f24dda05d427e9cc2d3aa02f118d4
msgid "Let's start by installing the demo package and its dependencies."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:41
#: ab11a118ac0e463c93973872dfa39fcb
msgid "Running the demo"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:43
#: ddff2e6ced9f467989114bd9d4073843
msgid ""
"Now that we've installed the ``turtle_tf2_py`` tutorial package let's run"
" the demo. First, open a new terminal and :doc:`source your ROS 2 "
"installation <../../Beginner-CLI-Tools/Configuring-ROS2-Environment>` so "
"that ``ros2`` commands will work. Then run the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:51
#: f7c2daba9d4745f0a418da7818a14c27
msgid "You will see the turtlesim start with two turtles."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:55
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:411
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:432
#: 3ca08140816d436fbceb96dbbb435747 771f89d35b1344d9ab1a46b076eefe0b
#: a41af4254e9f47c687e19fcd0101d260
msgid "In the second terminal window type the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:61
#: ec27161200ce42058ec1e2349018e3a1
msgid ""
"Once the turtlesim is started you can drive the central turtle around in "
"the turtlesim using the keyboard arrow keys, select the second terminal "
"window so that your keystrokes will be captured to drive the turtle."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:66
#: 5b91319b6fd64ee4ab858dd059a66f5f
msgid ""
"You can see that one turtle continuously moves to follow the turtle you "
"are driving around."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:69
#: f05924c1c32e4181b53cba7fe8b6d9d0
msgid "What is happening?"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:71
#: 3ea99ab32a124bd497ee4d9859233df9
msgid ""
"This demo is using the tf2 library to create three coordinate frames: a "
"``world`` frame, a ``turtle1`` frame, and a ``turtle2`` frame. This "
"tutorial uses a tf2 broadcaster to publish the turtle coordinate frames "
"and a tf2 listener to compute the difference in the turtle frames and "
"move one turtle to follow the other."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:75
#: 2f0ac1f0ce6348ed9348aa7f1e20bf6b
msgid "tf2 tools"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:77
#: 7e99a5065a034934b9fb5f780b8deff6
msgid ""
"Now let's look at how tf2 is being used to create this demo. We can use "
"``tf2_tools`` to look at what tf2 is doing behind the scenes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:81
#: 845251cdc1774f3181b5932f70ddb6e5
msgid "1 Using view_frames"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:83
#: 6166543f7ecb468d857e629bfddb97d5
msgid ""
"``view_frames`` creates a diagram of the frames being broadcast by tf2 "
"over ROS."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:89
#: 578e2e0fdf4e4125bde6aa18b25fb488
msgid "You will see:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:96
#: 5a0d80bb8c284af28b280b2ad7705631
msgid ""
"Here a tf2 listener is listening to the frames that are being broadcast "
"over ROS and drawing a tree of how the frames are connected. To view the "
"tree, open the resulting ``frames.pdf`` with your favorite PDF viewer."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:101
#: d5090922f08245c0a93a4b400445bae2
msgid ""
"Here we can see three frames that are broadcasted by tf2: ``world``, "
"``turtle1``, and ``turtle2``. The ``world`` here is the parent of the "
"``turtle1`` and ``turtle2`` frames. ``view_frames`` also report some "
"diagnostic information about when the oldest and most recent frame "
"transforms were received and how fast the tf2 frame is published to tf2 "
"for debugging purposes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:107
#: 8167564d936b4a31b357052e02b53c21
msgid "2 Using tf2_echo"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:109
#: 10a38bf005534ef18f6cc12d584bd794
msgid ""
"``tf2_echo`` reports the transform between any two frames broadcasted "
"over ROS."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:111
#: 91ba786197b94bb2a4833aad0a523daf
msgid "Usage:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:117
#: a930e4743f4e4359806083be9332b1f3
msgid ""
"Let's look at the transform of the ``turtle2`` frame with respect to "
"``turtle1`` frame which is equivalent to:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:123
#: 27f4fcafdc6a4fdf866068e87447089a
msgid ""
"You will see the transform displayed as the ``tf2_echo`` listener "
"receives the frames broadcasted over ROS 2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:148
#: 185d7c6d3ffb4bde948b21dd014e0e2c
msgid ""
"As you drive your turtle around you will see the transform change as the "
"two turtles move relative to each other."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:151
#: ffb9e0ee348b4f60b10c855ada065624
msgid "rviz and tf2"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:153
#: 1bf6f3d3b0884516bb7e0618b93c5508
msgid ""
"``rviz`` is a visualization tool that is useful for examining tf2 frames."
" Let's look at our turtle frames using rviz. Let's start rviz with the "
"``turtle_rviz.rviz`` configuration file using the ``-d`` option:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.rst:163
#: bf230e58cb7d4a48a51fbec4144e145c
msgid ""
"In the side bar you will see the frames broadcasted by tf2. As you drive "
"the turtle around you will see the frames move in rviz."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:8
#: 2d111bf6fabf4d55a616c3a77a30d2e1
msgid "Using time (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:10
#: d9b6e20942bd473983e61ef66a8dd017
msgid ""
"**Goal:** Learn how to get a transform at a specific time and wait for a "
"transform to be available on the tf2 tree using ``lookupTransform()`` "
"function."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:23
#: 80186728c8404f799b12c57634f76934
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a "
":doc:`tf2 broadcaster <Writing-A-Tf2-Broadcaster-Cpp>` and a :doc:`tf2 "
"listener <Writing-A-Tf2-Listener-Cpp>`. We also learned how to :doc:`add "
"a new frame to the transformation tree <./Adding-A-Frame-Cpp>` and "
"learned how tf2 keeps track of a tree of coordinate frames. This tree "
"changes over time, and tf2 stores a time snapshot for every transform "
"(for up to 10 seconds by default). Until now we used the "
"``lookupTransform()`` function to get access to the latest available "
"transforms in that tf2 tree, without knowing at what time that transform "
"was recorded. This tutorial will teach you how to get a transform at a "
"specific time."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:33
#: be502ee15373461293bb841d5ea32a71
msgid "1 tf2 and time"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:35
#: 2d1e4d8092fa4c06a7a43947bba88902
msgid ""
"So let's go back to where we ended in the :doc:`adding a frame tutorial "
"<./Adding-A-Frame-Cpp>`. Go to ``learning_tf2_cpp`` package. Open "
"``turtle_tf2_listener.cpp`` and take a look at the ``lookupTransform()`` "
"call:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:48
#: 3f9f3221c7a74e37a4d9ae3844faef64
msgid ""
"You can see that we specified a time equal to 0 by calling "
"``tf2::TimePointZero``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:52
#: 8555fb574caf48c39f892854fb2ed43a
msgid ""
"The ``tf2`` package has it's own time type ``tf2::TimePoint``, which is "
"different from ``rclcpp::Time``. Many APIs in the package ``tf2_ros`` "
"automatically convert between ``rclcpp::Time`` and ``tf2::TimePoint``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:55
#: f08fec27b7ba435badc7565d6b791933
msgid ""
"``rclcpp::Time(0, 0, this->get_clock()->get_clock_type())`` could have "
"been used here, but it would have been converted to "
"``tf2::TimePointZero`` anyways."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:57
#: 44e280998e6c4cba9ffcff2c2478140c
msgid ""
"For tf2, time 0 means \"the latest available\" transform in the buffer. "
"Now, change this line to get the transform at the current time, "
"``this->get_clock()->now()``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:69
#: 7374f14182ad4358ab9d78b27957c5fa
msgid "Now build the package and try to run the launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:75
#: 5d4ea1987e73410b8c38aeac98bbd268
msgid "You will notice that it fails and outputs something similar to this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:83
#: 1ee6214aff624135b1fab3bbc6b1343b
msgid ""
"It tells you that the frame does not exist or that the data is in the "
"future."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:85
#: 52e2c5803dce429d8f717d3be243d43c
msgid ""
"To understand why is this happening we need to understand how buffers "
"work. Firstly, each listener has a buffer where it stores all the "
"coordinate transforms coming from the different tf2 broadcasters. "
"Secondly, when a broadcaster sends out a transform, it takes some time "
"before that transform gets into the buffer (usually a couple of "
"milliseconds). As a result, when you request a frame transform at time "
"\"now\", you should wait a few milliseconds for that information to "
"arrive."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:91
#: a54f050d2baa462aadbec1fb3f86d111
msgid "2 Wait for transforms"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:93
#: 9dd9c92509e044f580656fb1e89b90ac
msgid ""
"tf2 provides a nice tool that will wait until a transform becomes "
"available. You use this by adding a timeout parameter to "
"``lookupTransform()``. To fix this, edit your code as shown below (add "
"the last timeout parameter):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:108
#: 3381200d31c44dff8015060769cbbc38
msgid ""
"The ``lookupTransform()`` can take four arguments, where the last one is "
"an optional timeout. It will block for up to that duration waiting for it"
" to timeout."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:112
#: d8a2b9d87e814b81b29d1a59a51bf727
msgid "3 Checking the results"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:114
#: 326339787e054a4e8fcd70070f353d83
msgid "You can now build the package and run the launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:120
#: 596dc068e3184eb4a0982d500dfe9058
msgid ""
"You should notice that ``lookupTransform()`` will actually block until "
"the transform between the two turtles becomes available (this will "
"usually take a few milliseconds). Once the timeout has been reached "
"(fifty milliseconds in this case), an exception will be raised only if "
"the transform is still not available."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:126
#: ba42903f82f1417b888088778c9bfeff
msgid ""
"In this tutorial, you learned how to acquire a transform at a specific "
"timestamp and how to wait for a transform to be available on the tf2 tree"
" when using the ``lookupTransform()`` function."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:8
#: c74abd70c3d146d181e2297bf377f46c
msgid "Using time (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:10
#: 827c77ed864040fc9c821d53436c657b
msgid ""
"**Goal:** Learn to use the ``timeout`` in ``lookup_transform`` function "
"to wait for a transform to be available on the tf2 tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:23
#: 85d150268c294dc1912fa18780f47afd
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a "
":doc:`tf2 broadcaster <./Writing-A-Tf2-Broadcaster-Py>` and a :doc:`tf2 "
"listener <./Writing-A-Tf2-Listener-Py>`. We also learned how to :doc:`add"
" a new frame to the transformation tree <./Adding-A-Frame-Py>`. Now we "
"will learn more about the ``timeout`` argument which makes the "
"``lookup_transform`` wait for the specified transform for up to the "
"specified duration before throwing an exception. This tool can be useful "
"to listen for transforms that are published at varying rates or those "
"incoming source with unreliable networking and non negligible latency. "
"This tutorial will teach you how use the timeout in ``lookup_transform`` "
"function to wait for a transform to be available on the tf2 tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:33
#: 85734be8bb964ae0b1e6e09d9ed28c4a
msgid "1 Update the listener node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:35
#: 2b80319a24d742e3b469f701c0387f04
msgid ""
"Edit ``turtle_tf2_listener.py`` and remove the "
"``timeout=Duration(seconds=1.0)`` parameter that is passed to the "
"``lookup_transform()`` call on line 76. It should look like shown below:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:45
#: 273919fe3aa94fcfa110b2aefb61a2c8
msgid ""
"Moreover, import additional exceptions that we will handle in the "
"beginning of the file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:51
#: f62e786ecdf34dd8a8ea8f04def8481d
msgid ""
"Edit the exception handling on line 81 by adding newly imported "
"exceptions and ``raise`` statement to see the exception:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:60
#: 39bb0774f3b84bc9a5d98d4a2e45a4b6
msgid "If you now try to run the launch file, you will notice that it is failing:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:67
#: 158405891401421ab66702e5a88ce29a
msgid "2 Fix the listener node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:69
#: e182fcb3ef6d4ef8b58462a266536fcd
msgid ""
"You now should notice that ``lookup_transform()`` is failing. It tells "
"you that the frame does not exist or that the data is in the future. To "
"fix this, edit your code on line 76 as shown below (return the "
"``timeout`` parameter):"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:80
#: 6fee2f238a454c55bc4dde5c7d67e398
msgid ""
"The ``lookup_transform`` can take four arguments, where the last one is "
"an optional timeout. It will block for up to that duration waiting for it"
" to timeout."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:85
#: 415d15fb95f5445eae0d4d22fc81d9ad
msgid ""
"Once this change is made, remove the ``raise`` line from the ``except()``"
" block that we added above or the code will continue to fail."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:87
#: 62bf46e90dc048d9b040e550d6ea7af8
msgid "You can now run the launch file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:93
#: 341feca9e6e8486aaa89e16a4f8b3e75
msgid ""
"You should notice that ``lookup_transform()`` will actually block until "
"the transform between the two turtles becomes available (this will "
"usually take a few milli-seconds). Once the timeout has been reached (one"
" second in this case), an exception will be raised only if the transform "
"is still not available."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.rst:99
#: 31c6653e460f454d975cdd481dd162e5
msgid ""
"In this tutorial you learned more about the ``lookup_transform`` function"
" and its timeout features. You also learned how to catch and handle "
"additional exceptions that can be thrown by tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:8
#: 3ad996809a2e4559b7faa34fcfc581c5
msgid "Quaternion fundamentals"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:10
#: 6066816cd3e64a54a056ded4b1f8bdd0
msgid "**Goal:** Learn the basics of quaternion usage in ROS 2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:23
#: 5d0ff844f1d14c8ea6ccaf6e3d7ad0f8
msgid ""
"A quaternion is a 4-tuple representation of orientation, which is more "
"concise than a rotation matrix. Quaternions are very efficient for "
"analyzing situations where rotations in three dimensions are involved. "
"Quaternions are used widely in robotics, quantum mechanics, computer "
"vision, and 3D animation."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:27
#: 3323f1fed81145a3857dea43f4a7e4da
msgid ""
"You can learn more about the underlying mathematical concept on "
"`Wikipedia <https://en.wikipedia.org/wiki/Quaternion>`_. You can also "
"take a look at an explorable video series `Visualizing quaternions "
"<https://eater.net/quaternions>`_ made by `3blue1brown "
"<https://www.youtube.com/3blue1brown>`_."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:30
#: 83dc523ce8f54c838d6cc39d6c284d3b
msgid ""
"In this tutorial, you will learn how quaternions and conversion methods "
"work in ROS 2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:35
#: 618d964e3b4a472a9833c2b9b4250727
msgid ""
"However, this is not a hard requirement and you can stick to any other "
"geometric transfromation library that suit you best. You can take a look "
"at libraries like `transforms3d <https://github.com/matthew-"
"brett/transforms3d>`_, `scipy.spatial.transform "
"<https://github.com/scipy/scipy/tree/master/scipy/spatial/transform>`_, "
"`pytransform3d <https://github.com/rock-learning/pytransform3d>`_, "
"`numpy-quaternion <https://github.com/moble/quaternion>`_ or "
"`blender.mathutils "
"<https://docs.blender.org/api/master/mathutils.html>`_."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:39
#: c9b6f1c9f4314a6d96141fb016f5a8dc
msgid "Components of a quaternion"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:41
#: ab9d5f0b8bbe45219e34bba6dfb7d13d
msgid ""
"ROS 2 uses quaternions to track and apply rotations. A quaternion has 4 "
"components ``(x, y, z, w)``. In ROS 2, ``w`` is last, but in some "
"libraries like Eigen, ``w`` can be placed at the first position. The "
"commonly-used unit quaternion that yields no rotation about the x/y/z "
"axes is ``(0, 0, 0, 1)``, and can be created in a following way:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:58
#: e38d16c6d378407bac2fa14f215f020e
msgid ""
"The magnitude of a quaternion should always be one. If numerical errors "
"cause a quaternion magnitude other than one, ROS 2 will print warnings. "
"To avoid these warnings, normalize the quaternion:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:67
#: e5f713011a5d4e83b2f3d2cf98b58b35
msgid "Quaternion types in ROS 2"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:69
#: 4de4097fdfd545b4af33c44d38cbe23c
msgid ""
"ROS 2 uses two quaternion datatypes: ``tf2::Quaternion`` and its "
"equivalent ``geometry_msgs::msg::Quaternion``. To convert between them in"
" C++, use the methods of ``tf2_geometry_msgs``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:105
#: 914da872b1cd4715860a18b8a7e96cb1
msgid "Quaternion operations"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:108
#: cb9ce70b81a447a5a58b0cf84fc3f3bf
msgid "1 Think in RPY then convert to quaternion"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:110
#: 985eed0d7c0042219f4daad3c111246f
msgid ""
"It's easy for us to think of rotations about axes, but hard to think in "
"terms of quaternions. A suggestion is to calculate target rotations in "
"terms of roll (about an X-axis), pitch (about the Y-axis), and yaw (about"
" the Z-axis), and then convert to a quaternion."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:121
#: a238339f0a254917a9a0ddd821c5e472
msgid "2 Applying a quaternion rotation"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:123
#: b304b07c50574a0da717d1ccdbaa4462
msgid ""
"To apply the rotation of one quaternion to a pose, simply multiply the "
"previous quaternion of the pose by the quaternion representing the "
"desired rotation. The order of this multiplication matters."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:152
#: c3cf05ff308e4145939b8a794a151b9e
msgid "3 Inverting a quaternion"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:154
#: 0dce8cc41c6d47268703f389506d37df
msgid "An easy way to invert a quaternion is to negate the w-component:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:161
#: 2d2fe752c6704344b7ae30170528d577
msgid "4 Relative rotations"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:163
#: cd389557cf004647b29df89274a332dc
msgid ""
"Say you have two quaternions from the same frame, ``q_1`` and ``q_2``. "
"You want to find the relative rotation, ``q_r``, that converts ``q_1`` to"
" ``q_2`` in a following manner:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:170
#: fb79d17c5b0f41bc921930b918ca31cf
msgid ""
"You can solve for ``q_r`` similarly to solving a matrix equation. Invert "
"``q_1`` and right-multiply both sides. Again, the order of multiplication"
" is important:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:177
#: 55943aad64fe4f54a2115a41bdcf2c63
msgid ""
"Here's an example to get the relative rotation from the previous robot "
"pose to the current robot pose in python:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.rst:232
#: 6f242e0971054393b1c2f18bee376526
msgid ""
"In this tutorial, you learned about the fundamental concepts of a "
"quaternion and its related mathematical operations, like inversion and "
"rotation. You also learned about its usage examples in ROS 2 and "
"conversion methods between two separate Quaternion classes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:8
#: 238ba72474924bc9b1ee345e44493b24
msgid "``tf2``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:10
#: 681a79537537439886a5f22eb573a31d
msgid ""
"Many of the tf2 tutorials are available for both C++ and Python. The "
"tutorials are streamlined to complete either the C++ track or the Python "
"track. If you want to learn both C++ and Python, you should go through "
"the tutorials once for C++ and once for Python."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:39
#: 92511780f33f40b897a69f8f31ad236b
msgid "Workspace setup"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:41
#: 2d86076706534a519d86b74ac7a8d98d
msgid ""
"If you have not yet created a workspace in which to complete the "
"tutorials, :doc:`follow this tutorial <../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:44
#: 9c530614e2ca46fd966637515a1423f1
msgid "Learning tf2"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:46
#: 461acbf1b14f4f53b021be9e2f8c97c5
msgid ":doc:`Introduction to tf2 <./Introduction-To-Tf2>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:48
#: b16682635c124caf9b77a9c257c83585
msgid ""
"This tutorial will give you a good idea of what tf2 can do for you. It "
"shows off some of the tf2 power in a multi-robot example using turtlesim."
" This also introduces using ``tf2_echo``, ``view_frames``, and ``rviz``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:52
#: 9dae2cb53e844746a5219fdfb5fe7143
msgid ""
"Writing a static broadcaster :doc:`(Python) <./Writing-A-Tf2-Static-"
"Broadcaster-Py>` :doc:`(C++) <./Writing-A-Tf2-Static-Broadcaster-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:54
#: 7047aa27d2874759a512cd686b243560
msgid ""
"This tutorial teaches you how to broadcast static coordinate frames to "
"tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:56
#: c8d0212294f34e6dba1eee2096b209a8
msgid ""
"Writing a broadcaster :doc:`(Python) <./Writing-A-Tf2-Broadcaster-Py>` "
":doc:`(C++) <Writing-A-Tf2-Broadcaster-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:58
#: aab9987c3b674945932b8e16cf440f1e
msgid "This tutorial teaches you how to broadcast the state of a robot to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:60
#: a55e818d27774655ac014d68dca210fc
msgid ""
"Writing a listener :doc:`(Python) <./Writing-A-Tf2-Listener-Py>` "
":doc:`(C++) <./Writing-A-Tf2-Listener-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:62
#: 043684c8222f4ba790fe1df849ace1b8
msgid ""
"This tutorial teaches you how to use tf2 to get access to frame "
"transformations."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:64
#: fc072c437b184f8e9a67fe96b83ec8e1
msgid ""
"Adding a frame :doc:`(Python) <./Adding-A-Frame-Py>` :doc:`(C++) "
"<Adding-A-Frame-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:66
#: b0400286605e49f9a47fa34efcde9119
msgid "This tutorial teaches you how to add an extra fixed frame to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:68
#: 50554d7e85364f9bae2198af1ac547c9
msgid ""
"Using time :doc:`(Python) <Learning-About-Tf2-And-Time-Py>` :doc:`(C++) "
"<Learning-About-Tf2-And-Time-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:70
#: 2b258be4d53d41359fd71ebb7b72c556
msgid ""
"This tutorial teaches you to use the timeout in ``lookup_transform`` "
"function to wait for a transform to be available on the tf2 tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:73
#: 7b8b29e863b54d798c6bd8caa06e6b39
msgid ""
"Traveling in time :doc:`(Python) <./Time-Travel-With-Tf2-Py>` :doc:`(C++)"
" <./Time-Travel-With-Tf2-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:75
#: b1dee2c8394c47aea5bbde56326e5e59
msgid "This tutorial teaches you about advanced time travel features of tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:78
#: c986dc7d03bd45c7a339a08a68ade0c7
msgid "Debugging tf2"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:80
#: bd646445dfc64b03b8ab3746cb5bc3a6
msgid ":doc:`Quaternion fundamentals <./Quaternion-Fundamentals>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:82
#: 8f1fb6c6b29d4ad892f5f35bad2fa004
msgid "This tutorial teaches you basics of quaternion usage in ROS 2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:84
#: 06eb6d35fcbc414ebdf5f0fcbd1bae8f
msgid ":doc:`Debugging tf2 problems <./Debugging-Tf2-Problems>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:86
#: a76e85a118c94bd6ae50ba4a8f5ed7e7
msgid ""
"This tutorial teaches you about a systematic approach for debugging tf2 "
"related problems."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:89
#: d42563d770ee4bfebf7611ebe0429b9a
msgid "Using sensor messages with tf2"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:91
#: e6172d3fd855495594e22633db75ac62
msgid ""
":doc:`Using stamped datatypes with tf2_ros::MessageFilter <./Using-"
"Stamped-Datatypes-With-Tf2-Ros-MessageFilter>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Tf2-Main.rst:93
#: 16f84b2b88034396b5040368bf1112ee
msgid ""
"This tutorial teaches you how to use ``tf2_ros::MessageFilter`` to "
"process stamped datatypes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:8
#: 593cdb2d9620418abfe31517879d5cdf
msgid "Traveling in time (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:10
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:10
#: 67c245c5d3a046f88931c9badf9d2c58 edc81ce3863446d9ac619425db182018
msgid "**Goal:** Learn about advanced time travel features of tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:23
#: 1b92d2e7100940aa81a84265989732e0
msgid ""
"In the previous tutorial, we discussed the :doc:`basics of tf2 and time "
"<./Learning-About-Tf2-And-Time-Cpp>`. This tutorial will take us one step"
" further and expose a powerful tf2 trick: the time travel. In short, one "
"of the key features of tf2 library is that it is able to transform data "
"in time as well as in space."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:27
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:27
#: 58f567b42e284b12b060f0a52a12935c 79a7f08a2e73463aaad9418a86a23bf1
msgid ""
"This tf2 time travel feature can be useful for various tasks, like "
"monitoring the pose of the robot for a long period of time or building a "
"follower robot that will follow the \"steps\" of the leader. We will use "
"that time travel feature to look up transforms back in time and program "
"``turtle2`` to follow 5 seconds behind ``carrot1``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:31
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:31
#: 0249e072ca9a46b0a0c65cb8ea273571 d493d9f214b54f3aa755b40e4b62faa2
msgid "Time travel"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:33
#: e54e51454df64be5b568d10bb1562b3a
msgid ""
"First, let's go back to where we ended in the previous tutorial "
":doc:`Using time <./Learning-About-Tf2-And-Time-Cpp>`. Go to your "
"``learning_tf2_cpp`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:36
#: 52e43f65f46f45c2947d467222ac2418
msgid ""
"Now, instead of making the second turtle go to where the carrot is now, "
"we will make the second turtle go to where the first carrot was 5 seconds"
" ago. Edit the ``lookupTransform()`` call in ``turtle_tf2_listener.cpp`` "
"file to"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:50
#: d24e651abfdf4167a3ce9d55d917f64a
msgid ""
"Now if you run this, during the first 5 seconds, the second turtle would "
"not know where to go because we do not yet have a 5-second history of "
"poses of the carrot. But what happens after these 5 seconds? Build the "
"package then let's just give it a try:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:59
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:59
#: 01f3252c4d234587b8ea669570ba800c 4ae0b455b5cf47c69f5d84ef4f071d39
msgid ""
"You should now notice that your turtle is driving around uncontrollably "
"like in this screenshot. Let's try to understand reason behind that "
"behavior."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:61
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:61
#: 278a6af102144944b234007d24b03669 8daa575eb598477e893246047c5b90ee
msgid ""
"In our code we asked tf2 the following question: \"What was the pose of "
"``carrot1`` 5 seconds ago, relative to ``turtle2`` 5 seconds ago?\". This"
" means we are controlling the second turtle based on where it was 5 "
"seconds ago as well as where the first carrot was 5 seconds ago."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:63
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:63
#: 19d90984cb5e4174867bdbc62356a8a0 75e70d7574e14450a62dcee9d49ff7ac
msgid ""
"However, what we really want to ask is: \"What was the pose of "
"``carrot1`` 5 seconds ago, relative to the current position of the "
"``turtle2``?\"."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:66
#: 7ebddc74a38544fabfc9a226a84e176d
msgid "Advanced API for lookupTransform()"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:68
#: 996c419ed0624fa488c717203f8b9d1d
msgid ""
"To ask the tf2 that particular question, we will use an advanced API that"
" gives us the power to say explicitly when to acquire the specified "
"transformations. This is done by calling the ``lookupTransform()`` method"
" with additional parameters. Your code now would look like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:86
#: e9e5dd796d5d4560aaeb85447106c260
msgid "The advanced API for ``lookupTransform()`` takes six arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:88
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:87
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:231
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:200
#: 7894ab44cec145f98883865b8c8b2680 d80d70268ebb49be9fadaf31dbcad9e5
#: da165c2070c44880bb9126a4b7986f50 fc62f621dfd14505b453d36e2da48b26
msgid "Target frame"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:90
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:89
#: 5a56dcdf191f4f70ae2399c8f2edff16 7dfb9bf90fa74b838a30b977581ef93c
msgid "The time to transform to"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:92
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:91
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:233
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:202
#: 1c802f5b3ae04504807fdfcf2100fadb 327d50a46f3843fe95f04e7c50cbbb51
#: b45ed6556ffb452baf9780fa9540f2e0 b4e195109a8a4d73b96748dc10ca6089
msgid "Source frame"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:94
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:93
#: 4860bf70e063469b912a194fda109062 ccb4afe1f5b44f09a53b619d37bb2870
msgid "The time at which source frame will be evaluated"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:96
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:95
#: 010eeaf04075496cb0707b26d26d1b74 502f4bacd6254c509dfb3c6b3b6fced7
msgid "Frame that does not change over time, in this case the ``world`` frame"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:98
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:97
#: 02371d8a9cc4470fb0ae384eab082b44 175085e9bfc348e8b8e9ffa7ac813f5f
msgid "Time to wait for the target frame to become available"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:100
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:99
#: 7fb21790d73b4cc3bee72ed3435a533c 99f1582c87ea429598da869d85b41c93
msgid ""
"To sum up, tf2 does the following in the background. In the past, it "
"computes the transform from the ``carrot1`` to the ``world``. In the "
"``world`` frame, tf2 time travels from the past to now. And at the "
"current time, tf2 computes the transform from the ``world`` to the "
"``turtle2``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:106
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:105
#: 4bc2441a3cb849dea6b0d35bce019bd1 9fc7dcd7073a43eb8072749d967ad4eb
msgid "Checking the results"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:108
#: b3806752bf494c52a6ef76310317de32
msgid ""
"Build the package then let's run the simulation again, this time with the"
" advanced time-travel API:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:116
#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:115
#: 0dcf25150cb247528e04bacff634e495 4713cf90186c4a0f950eb0c199fdc870
msgid ""
"And yes, the second turtle is directed to where the first carrot was 5 "
"seconds ago!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp.rst:121
#: 52f39cb3a62e4e6cb37d6410977f715f
msgid ""
"In this tutorial, you have seen one of the advanced features of tf2. You "
"learned that tf2 can transform data in time and learned how to do that "
"with turtlesim example. tf2 allowed you to go back in time and make frame"
" transformations between old and current poses of turtles by using the "
"advanced ``lookupTransform()`` API."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:8
#: c2716581a56d4b9f8e976488eff80063
msgid "Traveling in time (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:23
#: b732a7c2c73f4212b7448995ea6b4115
msgid ""
"In the previous tutorial, we discussed the :doc:`basics of tf2 and time "
"<./Learning-About-Tf2-And-Time-Py>`. This tutorial will take us one step "
"further and expose a powerful tf2 trick: the time travel. In short, one "
"of the key features of tf2 library is that it is able to transform data "
"in time as well as in space."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:33
#: 7843b2f2273a4bb5a22d58c64ca21d48
msgid ""
"First, let's go back to where we ended in the previous tutorial "
":doc:`Using time <./Learning-About-Tf2-And-Time-Py>`. Go to your "
"``learning_tf2_py`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:36
#: 2c9cfaaf5ea64b9da5c67fd0c6bb575f
msgid ""
"Now, instead of making the second turtle go to where the carrot is now, "
"we will make the second turtle go to where the first carrot was 5 seconds"
" ago. Edit the ``lookup_transform()`` call in ``turtle_tf2_listener.py`` "
"file to"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:50
#: bef13f9ecc694882aa18da7a8a65a5b0
msgid ""
"Now if you run this, during the first 5 seconds, the second turtle would "
"not know where to go because we do not yet have a 5-second history of "
"poses of the carrot. But what happens after these 5 seconds? Build the "
"package as usual then let's just give it a try:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:66
#: 5ac73c5acd43426682204a061acca244
msgid "Advanced API for lookup_transform()"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:68
#: abc1e1ddc9244c88b6e8f221399e3c10
msgid ""
"To ask the tf2 that particular question, we will use an advanced API that"
" gives us the power to say explicitly when to acquire the specified "
"transformations. This is done by calling the ``lookup_transform_full()`` "
"method with additional parameters. Your code now would look like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:85
#: cc303d4f0e70442e8a5ea2fe39153eab
msgid "The advanced API for ``lookup_transform_full()`` takes six arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:107
#: 559d642ffde94205991edf17c68db13b
msgid ""
"Build the package as usual then let's run the simulation again, this time"
" with the advanced time-travel API:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.rst:120
#: 01a07dccfc3d4e47ac539a7ee214ca4f
msgid ""
"In this tutorial, you have seen one of the advanced features of tf2. You "
"learned that tf2 can transform data in time and learned how to do that "
"with turtlesim example. tf2 allowed you to go back in time and make frame"
" transformations between old and current poses of turtles by using the "
"advanced ``lookup_transform_full()`` API."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:8
#: ef60072142c74eafa186088cffc55ac8
msgid "Using stamped datatypes with ``tf2_ros::MessageFilter``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:10
#: 9e5ab48f6c4e47699f2e1a26392ec215
msgid ""
"**Goal:** Learn how to use ``tf2_ros::MessageFilter`` to process stamped "
"datatypes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:23
#: d766441907bc4387a0d7d1a68a00c6c3
msgid ""
"This tutorial explains how to use sensor data with tf2. Some real-world "
"examples of sensor data are:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:26
#: fe7c1a2e0d184ab0b07c2f4aec307997
msgid "cameras, both mono and stereo"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:28
#: 553aa19b18154d929c17e395ce2846ac
msgid "laser scans"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:30
#: 6cee7de9e2a34557b8b72dde8b9a4bff
msgid ""
"Suppose that a new turtle named ``turtle3`` is created and it doesn't "
"have good odometry, but there is an overhead camera tracking its position"
" and publishing it as a ``PointStamped`` message in relation to the "
"``world`` frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:32
#: 94c1b5ffe4e54cad8787a2896871db5b
msgid "``turtle1`` wants to know where ``turtle3`` is compared to itself."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:34
#: 594f44c1bfb74c188d87d4a9ae43f2ce
msgid ""
"To do this ``turtle1`` must listen to the topic where ``turtle3``'s pose "
"is being published, wait until transforms into the desired frame are "
"ready, and then do its operations. To make this easier the "
"``tf2_ros::MessageFilter`` is very useful. The ``tf2_ros::MessageFilter``"
" will take a subscription to any ROS 2 message with a header and cache it"
" until it is possible to transform it into the target frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:42
#: b8f9b583e2594946bafcc3378b63bfff
msgid "1 Write the broadcaster node of PointStamped messages"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:44
#: a4e3accc45f84d819c6e94bd538f7d2b
msgid ""
"For this tutorial we will set up a demo application which has a node (in "
"Python) to broadcast the ``PointStamped`` position messages of "
"``turtle3``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:46
#: 2f04e550ab8d4d3ba7bbb30c3f8e0695
msgid "First, let's create the source file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:48
#: ec03eb36072f491693d43d1fa6405206
msgid ""
"Go to the ``learning_tf2_py`` :doc:`package <./Writing-A-Tf2-Static-"
"Broadcaster-Py>` we created in the previous tutorial. Inside the "
"``src/learning_tf2_py/learning_tf2_py`` directory download the example "
"sensor message broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:171
#: 3ad170cb6a1045d09b7f59b772786c1f
msgid ""
"Now let's take a look at the code. First, in the ``on_timer`` callback "
"function, we spawn the ``turtle3`` by asynchronously calling the "
"``Spawn`` service of ``turtlesim``, and initialize its position at (4, 2,"
" 0), when the turtle spawning service is ready."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:186
#: 5856c0e961e84bde849c5deb468ebad4
msgid ""
"Afterward, the node publishes the topic ``turtle3/cmd_vel``, topic "
"``turtle3/turtle_point_stamped``, and subscribes to topic "
"``turtle3/pose`` and runs callback function ``handle_turtle_pose`` on "
"every incoming message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:194
#: 072b57e5f2dc49359200c493cf50a3d0
msgid ""
"Finally, in the callback function ``handle_turtle_pose``, we initialize "
"the ``Twist`` messages of ``turtle3`` and publish them, which will make "
"the ``turtle3`` move along a circle. Then we fill up the ``PointStamped``"
" messages of ``turtle3`` with incoming ``Pose`` messages and publish "
"them."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:213
#: 8253f114edaa4bd5b9ee4040cef6a2c8
msgid "1.2 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:215
#: fd67a1586c9a4c08b40181c6ad72769b
msgid ""
"In order to run this demo, we need to create a launch file "
"``turtle_tf2_sensor_message_launch.py`` in the ``launch`` subdirectory of"
" package ``learning_tf2_py``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:261
#: a87cb4c87a5f41a7a0afdcd17ac75bbc
msgid "1.3 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:292
#: d4f414282d17449793a7f22a452a7d1d
msgid "And then we can build the package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:316
#: 24dc96288927407f8768080cb84b796b
msgid "2 Writing the message filter/listener node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:318
#: 7d69498911a54da09c3a6683b1b0b17e
msgid ""
"Now, to get the streaming ``PointStamped`` data of ``turtle3`` in the "
"frame of ``turtle1`` reliably, we will create the source file of the "
"message filter/listener node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:320
#: f39c12ec6b384ffe99485ddc6642cc26
msgid ""
"Go to the ``learning_tf2_cpp`` :doc:`package <./Writing-A-Tf2-Static-"
"Broadcaster-Cpp>` we created in the previous tutorial. Inside the "
"``src/learning_tf2_cpp/src`` directory download file "
"``turtle_tf2_message_filter.cpp`` by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:440
#: 0674f204af1f4f2a9e80d3a7ce4d6546
msgid ""
"First, you must include the ``tf2_ros::MessageFilter`` headers from the "
"``tf2_ros`` package, as well as the previously used ``tf2`` and ``ros2`` "
"related headers."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:458
#: 8bb79dade27545d8bbb5f5b5c21a1cea
msgid ""
"Second, there needs to be persistent instances of ``tf2_ros::Buffer``, "
"``tf2_ros::TransformListener`` and ``tf2_ros::MessageFilter``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:469
#: e3cf3d7f3ede4bc2b5959eca59a54216
msgid ""
"Third, the ROS 2 ``message_filters::Subscriber`` must be initialized with"
" the topic. And the ``tf2_ros::MessageFilter`` must be initialized with "
"that ``Subscriber`` object. The other arguments of note in the "
"``MessageFilter`` constructor are the ``target_frame`` and the callback "
"function. The target frame is the frame into which it will make sure "
"``canTransform`` will succeed. And the callback function is the function "
"that will be called when the data is ready."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:504
#: 0ef2f190fe154e05b6daa2af46828e83
msgid ""
"And last, the callback method will call ``tf2_buffer_->transform`` when "
"the data is ready and print output to the console."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:530
#: b25a88157fc64045aa6346a5b63f7924
msgid ""
"Before building the package ``learning_tf2_cpp``, please add two another "
"dependencies in the ``package.xml`` file of this package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:540
#: 89db171c4de742c4bbaa0bb5ff480692
msgid ""
"And in the ``CMakeLists.txt`` file, add two lines below the existing "
"dependencies:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:547
#: 708b03169a784e8fadb01c004724f968
msgid "The lines below will deal with differences between ROS distributions:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:564
#: 1ead5957b9a74cf7bb204805c8f22115
msgid ""
"After that, add the executable and name it ``turtle_tf2_message_filter``,"
" which you'll use later with ``ros2 run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:583
#: 61e941911b274886ba095029286691c1
msgid ""
"Finally, add the ``install(TARGETS…)`` section (below other existing "
"nodes) so ``ros2 run`` can find your executable:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:612
#: f158de07b4f94160bfccb051b98d0b23
msgid ""
"Now open a new terminal, navigate to the root of your workspace, and "
"rebuild the package with command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:661
#: e15a6e453bf54cb4899f696bf285435e
msgid "3 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:663
#: 636a33ca60314db59b566522e758bdda
msgid ""
"First we need to run several nodes (including the broadcaster node of "
"PointStamped messages) by launching the launch file "
"``turtle_tf2_sensor_message_launch.py``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:669
#: 1578a06fca66453194d6dd193ef4cbf1
msgid ""
"This will bring up the ``turtlesim`` window with two turtles, where "
"``turtle3`` is moving along a circle, while ``turtle1`` isn't moving at "
"first. But you can run the ``turtle_teleop_key`` node in another terminal"
" to drive ``turtle1`` to move:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:678
#: b7676c1584ec41f8a1c5c9efb43ad819
msgid "Now if you echo the topic ``turtle3/turtle_point_stamped``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:684
#: fea7fae0488440bd81f67cfce5eb91e1
msgid "Then there will be output like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:719
#: 1b2ff25ec2d2418e97b7db973e7ffc3a
msgid ""
"When the demo is running, open another terminal and run the message "
"filter/listener node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:725
#: fdf63ea03d654decb9f298a68c28c926
msgid "If it's running correctly you should see streaming data like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:741
#: f3a9cef810c34d909a3b76af3052cc16
msgid ""
"In this tutorial you learned how to use sensor data/messages in tf2. "
"Specifically speaking, you learned how to publish ``PointStamped`` "
"messages on a topic, and how to listen to the topic and transform the "
"frame of ``PointStamped`` messages with ``tf2_ros::MessageFilter``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:8
#: 71f3deb9acf9458c9f6dcfee415467e5
msgid "Writing a broadcaster (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:10
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:10
#: 64af9890e0304965838edccd9b721288 e25149d0a9fc4fe9ac7889e2336128aa
msgid "**Goal:** Learn how to broadcast the state of a robot to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:23
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:23
#: 5c17987b0b8743018ada4be01db04172 6af043c3acf64408b8d6e94943a4637f
msgid ""
"In the next two tutorials we will write the code to reproduce the demo "
"from the :doc:`Introduction to tf2 <./Introduction-To-Tf2>` tutorial. "
"After that, following tutorials focus on extending the demo with more "
"advanced tf2 features, including the usage of timeouts in transformation "
"lookups and time travel."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:29
#: 41882a61b352464d8d1b9e3b2c4b6664
msgid ""
"This tutorial assumes you have a working knowledge of ROS 2 and you have "
"completed the :doc:`Introduction to tf2 tutorial <./Introduction-To-Tf2>`"
" and :doc:`tf2 static broadcaster tutorial (C++) <./Writing-A-Tf2-Static-"
"Broadcaster-Cpp>`. In previous tutorials, you learned how to :doc:`create"
" a workspace <../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`. You also have created the ``learning_tf2_cpp`` "
":doc:`package <./Writing-A-Tf2-Static-Broadcaster-Cpp>`, which is where "
"we will continue working from."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:37
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:37
#: 18ba78cbfb5f48d0b0d3802fd707014d d6742a307c2c427ba9488bcd875176ce
msgid "1 Write the broadcaster node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:39
#: 3d77626aa52c415988380a5c39ca6c70
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_cpp`` "
"package we created in the previous tutorial. Inside the ``src`` directory"
" download the example broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:157
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:175
#: 24ea90c6fe184b0fa9a7d0bc0edf4c1a 95e0bd9cde1f43a693cfc725e067ae3a
msgid ""
"Now, let's take a look at the code that is relevant to publishing the "
"turtle pose to tf2. Firstly, we define and acquire a single parameter "
"``turtlename``, which specifies a turtle name, e.g. ``turtle1`` or "
"``turtle2``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:164
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:183
#: 892f792db4b543089cce878e56c25182 c9931043d4d644c79e95a54a4a505d36
msgid ""
"Afterward, the node subscribes to topic ``turtleX/pose`` and runs "
"function ``handle_turtle_pose`` on every incoming message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:172
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:193
#: 788a7fe13ffb448e9d9ff56c2e53a741 ab6de9c9aa8f4fadaa5983192c228bd6
msgid ""
"Now, we create a ``TransformStamped`` object and give it the appropriate "
"metadata."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:174
#: 70107184c8ac45028f21dfe76bfb448e
msgid ""
"We need to give the transform being published a timestamp, and we'll just"
" stamp it with the current time by calling ``this->get_clock()->now()``. "
"This will return the current time used by the ``Node``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:176
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:197
#: a2c560cf1b9e45ef89d546e9d11916c8 dbc226edd76c4ba8afff53f73066f0b0
msgid ""
"Then we need to set the name of the parent frame of the link we're "
"creating, in this case ``world``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:178
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:199
#: 0debc85068574515b3c406f812b0f2f1 2c630329af2e428bb80cd4d749b21033
msgid ""
"Finally, we need to set the name of the child node of the link we're "
"creating, in this case this is the name of the turtle itself."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:180
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:201
#: 532a0997bbef49d4bc20187776ee0650 6fc5734bc6244d24bcc3927e44d87f9a
msgid ""
"The handler function for the turtle pose message broadcasts this turtle's"
" translation and rotation, and publishes it as a transform from frame "
"``world`` to frame ``turtleX``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:192
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:213
#: 613a7e3032874bdea42f20c54adae52b 745609a844b74628bc526435c0c23e44
msgid ""
"Here we copy the information from the 3D turtle pose into the 3D "
"transform."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:212
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:232
#: 95816973f54c46ddb97c6cebb94d0367 a55a31070df64ea8bf98a8d7d96ab373
msgid ""
"Finally we take the transform that we constructed and pass it to the "
"``sendTransform`` method of the ``TransformBroadcaster`` that will take "
"care of broadcasting."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:224
#: f1231fb58495456ebc0493f64bbd4ecd
msgid ""
"Now open the ``CMakeLists.txt`` add the executable and name it "
"``turtle_tf2_broadcaster``, which you'll use later with ``ros2 run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:249
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:260
#: 0789f6ad8302456abd7b00267edf788e 95e1afdf7a7c4a73b270cde7947e0e5d
msgid ""
"Now create a launch file for this demo. With your text editor, create a "
"new file called ``turtle_tf2_demo_launch.py`` in the ``launch`` folder, "
"and add the following lines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:278
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:289
#: 24c39e86b16e489aa96d24463ff41b71 882fe0d0cb7f4a939f9e421c673d4fd6
msgid ""
"First we import required modules from the ``launch`` and ``launch_ros`` "
"packages. It should be noted that ``launch`` is a generic launching "
"framework (not ROS 2 specific) and ``launch_ros`` has ROS 2 specific "
"things, like nodes that we import here."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:286
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:297
#: 5f9b64e9b9b542348d85ad6f87954bc5 99e60eb149dd4d8e93ba3c388091529e
msgid ""
"Now we run our nodes that start the turtlesim simulation and broadcast "
"``turtle1`` state to the tf2 using our ``turtle_tf2_broadcaster`` node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:309
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:320
#: 2c87361d836d4c45881c84e52544d41c 4c0e783e29bc483cb2e228bf853b56bd
msgid ""
"Open ``package.xml`` with your text editor. Add the following "
"dependencies corresponding to your launch file's import statements:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:317
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:328
#: 8098570695a9475cba46fa133dbc4885 b5b9e8d91a734870ac517a78bd43cde5
msgid ""
"This declares the additional required ``launch`` and ``launch_ros`` "
"dependencies when its code is executed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:324
#: 7fdf9ac51a084731b2e98edf3640fa44
msgid ""
"Reopen ``CMakeLists.txt`` and add the line so that the launch files from "
"the ``launch/`` folder would be installed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:331
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:352
#: 83b66c6a8d7048b491e985b6ddb404e4 865be74c88bb4eb3974d21238b595831
msgid ""
"You can learn more about creating launch files in :doc:`this tutorial "
"<../Launch/Creating-Launch-Files>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:334
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:355
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:328
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:281
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:285
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:304
#: 090877501c8447e4a20821cbf6a3fa09 0abf4e8ab64546dea5619de08e3f86ea
#: 3cab20f7cff14fef8a79b9bb85949f19 668cd7a610ca4ad0b9b43abb268226e7
#: d6c286eda49b43b2ad475c37614020ee f4a5ecbea64b4d5a851fb82eae4adf82
msgid "3 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:403
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:424
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:397
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:350
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:354
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:373
#: 103a702bd61e4e50be48bdf3d3cd5654 10768e47b8584159996923381e32b8b2
#: 574491ab922846a4b2a47f0d379677b7 b98506c8ce6848918c06f40fc77997b3
#: c499fb7e53af46889f39c53c34b81c27 dca9302fc1064c59be4c4e17466f5677
msgid "4 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:405
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:426
#: 7ec651e2b2c24a209c1d37541c780263 aa870868ec664e39b805a58798c77801
msgid ""
"Now run the launch file that will start the turtlesim simulation node and"
" ``turtle_tf2_broadcaster`` node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:417
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:438
#: accdebcb1fea4f509383d602faa99f7f ae19602ad1c24702a635b43160ced71f
msgid ""
"You will now see that the turtlesim simulation have started with one "
"turtle that you can control."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:421
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:442
#: 1cf0fbdc15ad49a8bec1657fe5c42596 89a82f9da60e41a4a82eae6bf743c9e8
msgid ""
"Now, use the ``tf2_echo`` tool to check if the turtle pose is actually "
"getting broadcast to tf2:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:427
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:448
#: 6dc1592b291e46dc989e6abe66df0bd0 b86fa8a1559444e8bf20f33fbf06e5e6
msgid ""
"This should show you the pose of the first turtle. Drive around the "
"turtle using the arrow keys (make sure your ``turtle_teleop_key`` "
"terminal window is active, not your simulator window). In your console "
"output you will see something similar to this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:446
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:467
#: 656e542cb1d34c59a18d959268ac425c 9c58f8437d92421eaa5df66b6a9c6aa2
msgid ""
"If you run ``tf2_echo`` for the transform between the ``world`` and "
"``turtle2``, you should not see a transform, because the second turtle is"
" not there yet. However, as soon as we add the second turtle in the next "
"tutorial, the pose of ``turtle2`` will be broadcast to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:452
#: ac76e5c69f0f4fa38142ea3a372c4374
msgid ""
"In this tutorial you learned how to broadcast the pose of the robot "
"(position and orientation of the turtle) to tf2 and how to use the "
"``tf2_echo`` tool. To actually use the transforms broadcasted to tf2, you"
" should move on to the next tutorial about creating a :doc:`tf2 listener "
"<./Writing-A-Tf2-Listener-Cpp>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:8
#: 5716855f62bc4c329ee8aa153ad0ae8d
msgid "Writing a broadcaster (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:29
#: 7dd37b7e187e4b17a80c01fd2c74aced
msgid ""
"This tutorial assumes you have a working knowledge of ROS 2 and you have "
"completed the :doc:`Introduction to tf2 tutorial <./Introduction-To-"
"Tf2>`. In previous tutorials, you learned how to :doc:`create a workspace"
" <../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`. You also have created the ``learning_tf2_py`` "
":doc:`package <./Writing-A-Tf2-Static-Broadcaster-Py>`, which is where we"
" will continue working from."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:39
#: f8261475356548eba2bdf49dd1806d2e
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_py`` "
"package we created in the previous tutorial. Inside the "
"``src/learning_tf2_py/learning_tf2_py`` directory download the example "
"broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:195
#: 5aec2a2b76db4fbaa61893d3a3c39431
msgid ""
"We need to give the transform being published a timestamp, and we'll just"
" stamp it with the current time by calling ``self.get_clock().now()``. "
"This will return the current time used by the ``Node``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:241
#: 5d4b15a303b840909e48b693db5e0d33
msgid ""
"You can also publish static transforms with the same pattern by "
"instantiating a ``tf2_ros.StaticTransformBroadcaster`` instead of a "
"``tf2_ros.TransformBroadcaster``. The static transforms will be published"
" on the ``/tf_static`` topic and will be sent only when required, not "
"periodically. For more details see :doc:`here <./Writing-A-Tf2-Static-"
"Broadcaster-Py>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:318
#: 6053bfdb71de45c7bd763f484f279f65
msgid ""
"Navigate one level back to the ``src/learning_tf2_py`` directory, where "
"the ``setup.py``, ``setup.cfg``, and ``package.xml`` files are located."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:333
#: bfe57bbe1fe14ebabe5acd3bf03a7e24
msgid "2.3 Update setup.py"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:335
#: 18cd6f7d67934728a87ae687fecbe556
msgid ""
"Reopen ``setup.py`` and add the line so that the launch files from the "
"``launch/`` folder would be installed. The ``data_files`` field should "
"now look like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:345
#: e5d6d4f8aa5642f6a8c4ad045d6967f7
msgid "Also add the appropriate imports at the top of the file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.rst:473
#: 4733bde3925440af92e16336d36d551e
msgid ""
"In this tutorial you learned how to broadcast the pose of the robot "
"(position and orientation of the turtle) to tf2 and how to use the "
"``tf2_echo`` tool. To actually use the transforms broadcasted to tf2, you"
" should move on to the next tutorial about creating a :doc:`tf2 listener "
"<./Writing-A-Tf2-Listener-Py>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:8
#: 6694f35ebba14049a037b6248f12c194
msgid "Writing a listener (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:10
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:10
#: 33db8ad0139c41b18e0b9c9a26bc7df6 a3925d2bfa204bd6b8c992a2b99c5ab5
msgid "**Goal:** Learn how to use tf2 to get access to frame transformations."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:23
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:23
#: 6fcb6a9980424061ab3c85ea98fe2d04 7de9623881774c97bf62fde75133f385
msgid ""
"In previous tutorials we created a tf2 broadcaster to publish the pose of"
" a turtle to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:25
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:25
#: 32bfd5e95e9e47729900d284af67d792 c8e79b897cfc4b0b8d24e2ba331f96b3
msgid "In this tutorial we'll create a tf2 listener to start using tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:30
#: fbfef06e84a04de39bd30282bcffffdf
msgid ""
"This tutorial assumes you have completed the :doc:`tf2 static broadcaster"
" tutorial (C++) <./Writing-A-Tf2-Static-Broadcaster-Cpp>` and the "
":doc:`tf2 broadcaster tutorial (C++) <./Writing-A-Tf2-Broadcaster-Cpp>`. "
"In the previous tutorial, we created a ``learning_tf2_cpp`` package, "
"which is where we will continue working from."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:37
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:37
#: 5af9ebadb8a34bf8ae99508c1a66ad40 98a61b05b6634209b165f206a9ee19c4
msgid "1 Write the listener node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:39
#: 9047b20ea87c4ebd8f4136f3e8905c5c
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_cpp`` "
"package we created in the previous tutorial. Inside the ``src`` directory"
" download the example listener code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:213
#: 0c149e778a3b4251a6ea6d31fda1a70f
msgid ""
"To understand how the service behind spawning turtle works, please refer "
"to :doc:`writing a simple service and client (C++) <../../Beginner-"
"Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:215
#: b2fb76d64e5946d9b460e41aaf66c823
msgid ""
"Now, let's take a look at the code that is relevant to get access to "
"frame transformations. The ``tf2_ros`` contains a ``TransformListener`` "
"header file implementation that makes the task of receiving transforms "
"easier."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:222
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:192
#: 2def87051e5e47b0aab260ea04a3a495 812ad731e40044d18e07cab912f17490
msgid ""
"Here, we create a ``TransformListener`` object. Once the listener is "
"created, it starts receiving tf2 transformations over the wire, and "
"buffers them for up to 10 seconds."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:229
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:198
#: 20d2e5583ccc48c5a9ffa23a2feb9323 6201a6d1817d476aa1eae271de9a16a4
msgid ""
"Finally, we query the listener for a specific transformation. We call "
"``lookup_transform`` method with following arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:235
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:204
#: 31970f92252540729b5901e8ea0325dd 5325cf426f0d4daa9f71c98a57171338
msgid "The time at which we want to transform"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:237
#: b2febe16329f4ef1a784ba94c3698d91
msgid ""
"Providing ``tf2::TimePointZero()`` will just get us the latest available "
"transform. All this is wrapped in a try-catch block to handle possible "
"exceptions."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:251
#: 8d4f38d1baf54d8a9405546725366c83
msgid ""
"Now open the ``CMakeLists.txt`` add the executable and name it "
"``turtle_tf2_listener``, which you'll use later with ``ros2 run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:274
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:227
#: 0c7460f2a0b6427795b77c827cfe0e72 bdaebe59e76b4425979311c5fa493163
msgid "2 Update the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:276
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:229
#: 77f38c07f40f433f943f872c25bc6595 d202f82389614ff9a6922da143cc0bda
msgid ""
"Open the launch file called ``turtle_tf2_demo_launch.py`` with your text "
"editor, add two new nodes to the launch description, add a launch "
"argument, and add the imports. The resulting file should look like:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:325
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:277
#: 8a9eb81c43b04a8292d118aaf41a0155 ad13769090a84646a080b112b5fa7669
msgid ""
"This will declare a ``target_frame`` launch argument, start a broadcaster"
" for second turtle that we will spawn and listener that will subscribe to"
" those transformations."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:399
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:352
#: 0a45dfaca5cd488a94c4b739478f8a32 afae9b503da5486bbc6bd7911a1d9441
msgid "Now you're ready to start your full turtle demo:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:405
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:358
#: 714742234a9b48a6994c843792e2575c e62505bd801646b1a308f03fba244cee
msgid ""
"You should see the turtle sim with two turtles. In the second terminal "
"window type the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:412
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:365
#: 1c46f96517114c91a8a11c1f3a9cb6c6 d09c562719dd499080d74a3f02e6ff60
msgid ""
"To see if things work, simply drive around the first turtle using the "
"arrow keys (make sure your terminal window is active, not your simulator "
"window), and you'll see the second turtle following the first one!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp.rst:417
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:370
#: 05d9416db48d44dcbd0f189374271503 ba19e7b9d7f4410fbd0fee5af65dc249
msgid ""
"In this tutorial you learned how to use tf2 to get access to frame "
"transformations. You also have finished writing your own turtlesim demo "
"that you first tried in :doc:`Introduction to tf2 <./Introduction-To-"
"Tf2>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:8
#: 4b5192aa47ae4a78b9624a3c1416b500
msgid "Writing a listener (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:30
#: 1210c3b9a2844960a263781b9fc6e825
msgid ""
"This tutorial assumes you have completed the :doc:`tf2 broadcaster "
"tutorial (Python) <./Writing-A-Tf2-Broadcaster-Py>`. In the previous "
"tutorial, we created a ``learning_tf2_py`` package, which is where we "
"will continue working from."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:39
#: 66b391ecd4df41778c803e77db0f0190
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_py`` "
"package we created in the previous tutorial. Inside the "
"``src/learning_tf2_py/learning_tf2_py`` directory download the example "
"listener code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:183
#: 225a9f8921bc4edc831cb722f357b438
msgid ""
"To understand how the service behind spawning turtle works, please refer "
"to :doc:`writing a simple service and client (Python) <../../Beginner-"
"Client-Libraries/Writing-A-Simple-Py-Service-And-Client>` tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:185
#: 929424afa3bf42ca870d34b810c591e3
msgid ""
"Now, let's take a look at the code that is relevant to get access to "
"frame transformations. The ``tf2_ros`` package provides an implementation"
" of a ``TransformListener`` to help make the task of receiving transforms"
" easier."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.rst:206
#: 6f7bbd9649ec424880e110b924150239
msgid ""
"Providing ``rclpy.time.Time()`` will just get us the latest available "
"transform. All this is wrapped in a try-except block to handle possible "
"exceptions."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:8
#: 726cba81547642d28f215007862f3620
msgid "Writing a static broadcaster (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:10
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:10
#: 4312ed4057334a09961dbeb27dd0ace9 451a304f6fb8453eb929568f057ea646
msgid "**Goal:** Learn how to broadcast static coordinate frames to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:23
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:23
#: 9a6ca7a6658847f0801c42764741c40c 9bda4bc647c04db2a6ca7e57d6faef42
msgid ""
"Publishing static transforms is useful to define the relationship between"
" a robot base and its sensors or non-moving parts. For example, it is "
"easiest to reason about laser scan measurements in a frame at the center "
"of the laser scanner."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:26
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:26
#: 91580b25f0b24e289321b3f72edb959d ab87697bc18e4661ae52a841e64d21ed
msgid ""
"This is a standalone tutorial covering the basics of static transforms, "
"which consists of two parts. In the first part we will write code to "
"publish static transforms to tf2. In the second part we will explain how "
"to use the commandline ``static_transform_publisher`` executable tool in "
"``tf2_ros``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:30
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:30
#: 64d5d0dc43ff44cdb49e7c06e7b863b8 b762fdd3b98c455e80e132f0b1b86c24
msgid ""
"In the next two tutorials we will write the code to reproduce the demo "
"from the :doc:`Introduction to tf2 <./Introduction-To-Tf2>` tutorial. "
"After that, the following tutorials focus on extending the demo with more"
" advanced tf2 features."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:36
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:36
#: 4777a931faa943e496f8eaa31c8f6990 6fce1cf83f6546f68c3364d1bcea1cea
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:44
#: 30187830dbe34cabadc5c97c2bcb5872
msgid ""
"First we will create a package that will be used for this tutorial and "
"the following ones. The package called ``learning_tf2_cpp`` will depend "
"on ``geometry_msgs``, ``rclcpp``, ``tf2``, ``tf2_ros``, and "
"``turtlesim``. Code for this tutorial is stored `here "
"<https://raw.githubusercontent.com/ros/geometry_tutorials/ros2/turtle_tf2_cpp/src/static_turtle_tf2_broadcaster.cpp>`_."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:48
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:48
#: 1dc87392c7ce436db0127905bcf07749 98279671be15421f97ae98544581cfa2
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation "
"<../../Beginner-CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2``"
" commands will work. Navigate to workspace's ``src`` folder and create a "
"new package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:55
#: 3358bb9a09584fce9ad4ebcb283a1cc6
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``learning_tf2_cpp`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:58
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:58
#: 22a50fe27007461ead4b98b0ee7a5f0d b32e926803a84e47bf3b31b58a7b0ffc
msgid "2 Write the static broadcaster node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:60
#: 5fe55bf5af55468290afc5e504c10445
msgid ""
"Let's first create the source files. Inside the "
"``src/learning_tf2_cpp/src`` directory download the example static "
"broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:172
#: 5e178e82ba9249b7b9726a72fe186dde
msgid ""
"Now let's look at the code that is relevant to publishing the static "
"turtle pose to tf2. The first lines include the required header files. "
"First we include ``geometry_msgs/msg/transform_stamped.hpp`` to access "
"the ``TransformStamped`` message type, which we will publish to the "
"transformation tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:180
#: bf748ab5d5ed45e59846cbe1d694160a
msgid ""
"Afterward, ``rclcpp`` is included so its ``rclcpp::Node`` class can be "
"used."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:186
#: 59f834f2596e43e6aa8a5f3393ee9fc2
msgid ""
"``tf2::Quaternion`` is a class for a quaternion that provides convenient "
"functions for converting Euler angles to quaternions and vice versa. We "
"also include ``tf2_ros/static_transform_broadcaster.h`` to use the "
"``StaticTransformBroadcaster`` to make the publishing of static "
"transforms easy."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:194
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:218
#: 87c8d5159985443783344c9bd40fe098 bd919826c53941578e7d84ca79d6698e
msgid ""
"The ``StaticFramePublisher`` class constructor initializes the node with "
"the name ``static_turtle_tf2_broadcaster``. Then, "
"``StaticTransformBroadcaster`` is created, which will send one static "
"transformation upon the startup."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:203
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:226
#: 010010c23f254bcb9bedaa58af6fd283 3c7b6a3fbdf541ba8a4cf68e04a77b92
msgid ""
"Here we create a ``TransformStamped`` object, which will be the message "
"we will send over once populated. Before passing the actual transform "
"values we need to give it the appropriate metadata."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:206
#: fae84c1f718f4972a0bafe4610460d89
msgid ""
"We need to give the transform being published a timestamp and we'll just "
"stamp it with the current time, ``this->get_clock()->now()``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:208
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:231
#: 7c61e59507fe497fb353b273053d63d0 b324f3d4afd24ff185f28b106b826454
msgid ""
"Then we need to set the name of the parent frame of the link we're "
"creating, in this case ``world``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:210
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:233
#: 5952149effa94f95a53bdb91d2cffd34 c9d57eb931b14f60b1fc73ed71268a5f
msgid ""
"Finally, we need to set the name of the child frame of the link we're "
"creating"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:220
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:243
#: 838b2f47b59c4e07a530961024401af7 905ebecb671f47728eec856e882c782e
msgid "Here we populate the 6D pose (translation and rotation) of the turtle."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:237
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:257
#: 9972be67e0724a2d863275dbb14b3bc0 de73ff1f52a5447a944b94a215df3bf9
msgid ""
"Finally, we broadcast static transform using the ``sendTransform()`` "
"function."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:246
#: a13e0082d5f848f8bec5ca637d03102c
msgid ""
"Navigate one level back to the ``src/learning_tf2_cpp`` directory, where "
"the ``CMakeLists.txt`` and ``package.xml`` files have been created for "
"you."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:250
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:270
#: 18ee05af94ee4c47add76958b855ff77 9f8a185de9824ca0ab28b7883fc6eae1
msgid ""
"As mentioned in the :doc:`Create a package <../../Beginner-Client-"
"Libraries/Creating-Your-First-ROS2-Package>` tutorial, make sure to fill "
"in the ``<description>``, ``<maintainer>`` and ``<license>`` tags:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:263
#: 4ab4787157bf4e40a2c3be29468d524e
msgid ""
"Add the executable to the CMakeLists.txt and name it "
"``static_turtle_tf2_broadcaster``, which you'll use later with ``ros2 "
"run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:287
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:306
#: 0fb454a3356344a9afca747b1395097c 233afeff479c40a886f6bb6e1c80fa88
msgid ""
"It's good practice to run ``rosdep`` in the root of your workspace to "
"check for missing dependencies before building:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:305
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:324
#: 1328d04be98e41afa1f341c1d8d7d4b2 5e2d600294ec44b2aab6053185f75ca1
msgid "Still in the root of your workspace, build your new package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:356
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:375
#: 60c5d3e4bc0e4e4e8f602c949e4e6c81 9ff132819b494f328b835d2e28058850
msgid "Now run the ``static_turtle_tf2_broadcaster`` node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:362
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:381
#: 8bc82325cfee4c038bb8150c29acc2ed 9ff18841110341ae83adab4faa5bef29
msgid ""
"This sets a turtle pose broadcast for ``mystaticturtle`` to float 1 meter"
" above the ground."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:364
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:383
#: 5363dc2ebc75491bacd19332db69d38d a8247ccc8039441394811110af30b842
msgid ""
"We can now check that the static transform has been published by echoing "
"the ``tf_static`` topic"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:370
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:389
#: 33302ad220964c4c859297e7319a735a c9775235758740948c7e728ec7c88952
msgid "If everything went well you should see a single static transform"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:393
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:412
#: acfed97b228a4dc0af2bfb22ea4d78e7 fefdeebce8824e8e8d9cdde5a3ce9079
msgid "The proper way to publish static transforms"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:395
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:414
#: 40b86d630140421ea666514307c36355 a9584dc9884c45c8bb283bf15cef0b46
msgid ""
"This tutorial aimed to show how ``StaticTransformBroadcaster`` can be "
"used to publish static transforms. In your real development process you "
"shouldn't have to write this code yourself and should use the dedicated "
"``tf2_ros`` tool to do so. ``tf2_ros`` provides an executable named "
"``static_transform_publisher`` that can be used either as a commandline "
"tool or a node that you can add to your launchfiles."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:399
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:418
#: 3f0f052b80ad4d2a8f199fbaa5543a8f d4a82e8c41944b5789c0f76dfbfa01d8
msgid ""
"Publish a static coordinate transform to tf2 using an x/y/z offset in "
"meters and roll/pitch/yaw in radians. In our case, roll/pitch/yaw refers "
"to rotation about the x/y/z-axis, respectively."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:406
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:425
#: 5eb9fb2cdf8c409eabfed78c748fa229 f4c8c91d9f4f41fd8fb44ea3d60531a1
msgid ""
"Publish a static coordinate transform to tf2 using an x/y/z offset in "
"meters and quaternion."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:412
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:431
#: 8c2345464dd54ad1a7bec4c763ec8611 d1067debc25b42d0ba2de192ca097ce4
msgid ""
"``static_transform_publisher`` is designed both as a command-line tool "
"for manual use, as well as for use within ``launch`` files for setting "
"static transforms. For example:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:428
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:447
#: 10c900eafd8242009ffd3959fe90c7cf deba087e0884435da31f749129e98de3
msgid ""
"Note that all arguments except for ``--frame-id`` and ``--child-frame-"
"id`` are optional; if a particular option isn't specified, then the "
"identity will be assumed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Cpp.rst:433
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:452
#: 4cc8d3b924634f5197e770ea2287a6af d9fa13bcb30d4b68b275a4a904b28bfa
msgid ""
"In this tutorial you learned how static transforms are useful to define "
"static relationships between frames, like ``mystaticturtle`` in relation "
"to the ``world`` frame. In addition, you learned how static transforms "
"can be useful for understanding sensor data, such as from laser scanners,"
" by relating the data to a common coordinate frame. Finally, you wrote "
"your own node to publish static transforms to tf2 and learned how to "
"publish required static transformations using "
"``static_transform_publisher`` executable and launch files."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:8
#: 0c140ffc26bd4431ba4768e768b6fd2c
msgid "Writing a static broadcaster (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:44
#: 88a079c991054feea88ad53a469c5567
msgid ""
"First we will create a package that will be used for this tutorial and "
"the following ones. The package called ``learning_tf2_py`` will depend on"
" ``geometry_msgs``, ``python3-numpy``, ``rclpy``, ``tf2_ros_py``, and "
"``turtlesim``. Code for this tutorial is stored `here "
"<https://raw.githubusercontent.com/ros/geometry_tutorials/ros2/turtle_tf2_py/turtle_tf2_py/static_turtle_tf2_broadcaster.py>`_."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:55
#: 2bea037da2c645e7a9c383b2cf4cb2fe
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``learning_tf2_py`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:60
#: 4ad150b8557a470e9b2b9de536f95865
msgid ""
"Let's first create the source files. Inside the "
"``src/learning_tf2_py/learning_tf2_py`` directory download the example "
"static broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:196
#: ca189e6d976545e59f570305a6b95e7c
msgid ""
"Now let's look at the code that is relevant to publishing the static "
"turtle pose to tf2. The first lines import required packages. First we "
"import the ``TransformStamped`` from the ``geometry_msgs``, which "
"provides us a template for the message that we will publish to the "
"transformation tree."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:204
#: 30f0d73bef5a4c1aa550d1401dd4014f
msgid "Afterward, ``rclpy`` is imported so its ``Node`` class can be used."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:211
#: 54bc169ff27747f199ffb84a80f55051
msgid ""
"The ``tf2_ros`` package provides a ``StaticTransformBroadcaster`` to make"
" the publishing of static transforms easy. To use the "
"``StaticTransformBroadcaster``, we need to import it from the ``tf2_ros``"
" module."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:229
#: 3f471ded77c94515984377698d295907
msgid ""
"We need to give the transform being published a timestamp and we'll just "
"stamp it with the current time, ``self.get_clock().now()``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:266
#: c9eebbbb006247e3830f5ff7dbed8c35
msgid ""
"Navigate one level back to the ``src/learning_tf2_py`` directory, where "
"the ``setup.py``, ``setup.cfg``, and ``package.xml`` files have been "
"created for you."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:278
#: 51414d5e61c748b1891f0f47a78505cb
msgid ""
"After the lines above, add the following dependencies corresponding to "
"your node’s import statements:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.rst:288
#: a8c98c2d15804ec580fe5aaace60e961
msgid ""
"This declares the required ``geometry_msgs``, ``python3-numpy``, "
"``rclpy``, ``tf2_ros_py``, and ``turtlesim`` dependencies when its code "
"is executed."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:8
#: 94b17d8e4e8940839d2e23a727160b91
msgid "Adding physical and collision properties"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:10
#: e0eadd3646fc4ab2a9159512ec991e6a
msgid ""
"**Goal:** Learn how to add collision and inertial properties to links, "
"and how to add joint dynamics to joints."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:20
#: d00d3ed55c0f422cba3f5e3fbf9bf170
msgid ""
"In this tutorial, we’ll look at how to add some basic physical properties"
" to your URDF model and how to specify its collision properties."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:23
#: 524acf6965f04c7ab3b635732453a349
msgid "Collision"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:25
#: c8ce33ffc3e0421cb3f5c7e5de816be8
msgid ""
"So far, we’ve only specified our links with a single sub-element, "
"``visual``, which defines (not surprisingly) what the robot looks like. "
"However, in order to get collision detection to work or to simulate the "
"robot, we need to define a ``collision`` element as well. `Here is the "
"new urdf "
"<https://raw.githubusercontent.com/ros/urdf_tutorial/master/urdf/07-physics.urdf>`_"
" with collision and physical properties."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:29
#: 6ae78d53a96841d8b973dd62375c4d2c
msgid "Here is the code for our new base link."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:49
#: 4c0d536617e54175a312a3fb42db2f36
msgid ""
"The collision element is a direct subelement of the link object, at the "
"same level as the visual tag."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:50
#: cf4ddc290cd74ccaa42c14952eb77121
msgid ""
"The collision element defines its shape the same way the visual element "
"does, with a geometry tag. The format for the geometry tag is exactly the"
" same here as with the visual."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:52
#: c51d6a8fa8f74d958d158643e6201da2
msgid ""
"You can also specify an origin in the same way as a subelement of the "
"collision tag (as with the visual)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:54
#: 2ccfb6909d8e4b248b5ac859df93138f
msgid ""
"In many cases, you’ll want the collision geometry and origin to be "
"exactly the same as the visual geometry and origin. However, there are "
"two main cases where you wouldn’t:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:57
#: be6317526a274c1b91adeaf4c9b29230
msgid ""
"**Quicker Processing**. Doing collision detection for two meshes is a lot"
" more computational complex than for two simple geometries. Hence, you "
"may want to replace the meshes with simpler geometries in the collision "
"element."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:59
#: f060d09b53314943bf88150eee450735
msgid ""
"**Safe Zones**. You may want to restrict movement close to sensitive "
"equipment. For instance, if we didn’t want anything to collide with "
"R2D2’s head, we might define the collision geometry to be a cylinder "
"encasing his head to prevent anything from getting too close to his head."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:63
#: dfc102da93b04e51a8412eaf0d34dd13
msgid "Physical Properties"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:64
#: 02a5e7ebe031432e8eec93e36bd5b95d
msgid ""
"In order to get your model to simulate properly, you need to define "
"several physical properties of your robot, i.e. the properties that a "
"physics engine like Gazebo would need."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:68
#: b347e532b2ef43d8842178adfe1b1aad
msgid "Inertia"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:69
#: 3d05a24ba26648808666ab55964e00c9
msgid ""
"Every link element being simulated needs an inertial tag. Here is a "
"simple one."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:94
#: 46e9d39510274b7990cc0e30d22b4f7e
msgid "This element is also a subelement of the link object."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:95
#: c149bb34fbde428d91ac97da3dbfcfb8
msgid "The mass is defined in kilograms."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:96
#: 97308bc0e61047bcb04ceac2d2d3f29d
msgid ""
"The 3x3 rotational inertia matrix is specified with the inertia element. "
"Since this is symmetrical, it can be represented by only 6 elements, as "
"such."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:100
#: 41785e7ec8f644db9c36d97a9c5d03c3
msgid "**ixx**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:100
#: 326bb04b0a6f44ba8fea71f26ec55730
msgid "**ixy**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:100
#: fa4e0ff0127648b9bf86f56131b7d0ed
msgid "**ixz**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:102
#: f6f8e816a8d24485b023dedf6226c6c3
msgid "ixy"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:102
#: 767aa9edc1c14e18a944d645f24a4408
msgid "**iyy**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:102
#: df98a7e13015447c8788022b5e9aa2e8
msgid "**iyz**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:104
#: 5adda30ae83d42e683b10b50a74a39d0
msgid "ixz"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:104
#: ebf4d4d60d8c4a82889001e8acd18dd8
msgid "iyz"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:104
#: 81fcff6a6dbd4471a754b0b33235daa3
msgid "**izz**"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:107
#: b7c3691ec25042aabf08f982aaa0422f
msgid ""
"This information can be provided to you by modeling programs such as "
"MeshLab. The inertia of geometric primitives (cylinder, box, sphere) can "
"be computed using Wikipedia's `list of moment of inertia tensors "
"<https://en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors>`_"
" (and is used in the above example)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:109
#: b62e1103fb5d41128c410749c3fb18f9
msgid ""
"The inertia tensor depends on both the mass and the distribution of mass "
"of the object. A good first approximation is to assume equal distribution"
" of mass in the volume of the object and compute the inertia tensor based"
" on the object's shape, as outlined above."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:111
#: 135a646574cd471881d6d42a861237a0
msgid ""
"If unsure what to put, a matrix with ixx/iyy/izz=1e-3 or smaller is often"
" a reasonable default for a mid-sized link (it corresponds to a box of "
"0.1 m side length with a mass of 0.6 kg). The identity matrix is a "
"particularly bad choice, since it is often much too high (it corresponds "
"to a box of 0.1 m side length with a mass of 600 kg!)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:113
#: 38d90ad612f84fda90f16bb03e540770
msgid ""
"You can also specify an origin tag to specify the center of gravity and "
"the inertial reference frame (relative to the link's reference frame)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:114
#: 47ff3b1e58ac4134b9c9f5b5427e0aec
msgid ""
"When using realtime controllers, inertia elements of zero (or almost "
"zero) can cause the robot model to collapse without warning, and all "
"links will appear with their origins coinciding with the world origin."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:117
#: 0fa15e0111d5457c9ea2034f87546c91
msgid "Contact Coefficients"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:118
#: 21acc9a5c37a4faea5d155995c99acea
msgid ""
"You can also define how the links behave when they are in contact with "
"one another. This is done with a subelement of the collision tag called "
"contact_coefficients. There are three attributes to specify:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:122
#: 27fcbe79c7654d18ae1210830ce954f6
msgid ""
"mu - `Friction coefficient "
"<https://simple.wikipedia.org/wiki/Coefficient_of_friction>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:123
#: be5f6952c6e54a788070f8c8354b961b
msgid "kp - `Stiffness coefficient <https://en.wikipedia.org/wiki/Stiffness>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:124
#: e5aa278681ca4861ab28ee13295961dd
msgid ""
"kd - `Dampening coefficient "
"<https://en.wikipedia.org/wiki/Damping_ratio#Damping_ratio_definition>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:127
#: 5318fdfba0ca49748b6a2a81b878ebd5
msgid "Joint Dynamics"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:128
#: ff4308441c2a4136b8b544297c9399a6
msgid ""
"How the joint moves is defined by the dynamics tag for the joint. There "
"are two attributes here:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:131
#: 56fe393dc10e4d32afdb456afa13bff3
msgid ""
"``friction`` - The physical static friction. For prismatic joints, the "
"units are Newtons. For revolving joints, the units are Newton meters."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:134
#: 691272a5440a4257be39f13d63cca9d4
msgid ""
"``damping`` - The physical damping value. For prismatic joints, the units"
" are Newton seconds per meter. For revolving joints, Newton meter seconds"
" per radian."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:138
#: 9da27108a9724c01b9d7dea53b17c75e
msgid "If not specified, these coefficients default to zero."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:141
#: ed272d37c0354f9c895fec3f0ea44e94
msgid "Other Tags"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:142
#: 17e98050e2644b6fbdbb7cfd6bc7b2bd
msgid ""
"In the realm of pure URDF (i.e. excluding Gazebo-specific tags), there "
"are two remaining tags to help define the joints: calibration and safety "
"controller. Check out the `spec <https://wiki.ros.org/urdf/XML/joint>`_, "
"as they are not included in this tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:146
#: 9e27ceaf0e594133abff0a3d3b501621
msgid "Next Steps"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.rst:147
#: a82a95bdbd164fc4844ad25be964114e
msgid ""
"Reduce the amount of code and annoying math you have to do by :doc:`using"
" xacro <./Using-Xacro-to-Clean-Up-a-URDF-File>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:8
#: e860d479b5b34ce4b6abed3ceb651f4b
msgid "Building a movable robot model"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:10
#: 34e15624c18f45469b942a681d277e6c
msgid "**Goal:** Learn how to define movable joints in URDF."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:20
#: d5563f693bb04b639ea472b92fe87826
msgid ""
"In this tutorial, we’re going to revise the R2D2 model we made in the "
":doc:`previous tutorial <./Building-a-Visual-Robot-Model-with-URDF-from-"
"Scratch>` so that it has movable joints. In the previous model, all of "
"the joints were fixed. Now we’ll explore three other important types of "
"joints: continuous, revolute and prismatic."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:24
#: eb1e0f3dd2084e30aebb4a8a24afd3fa
msgid ""
"Make sure you have installed all prerequisites before continuing. See the"
" :doc:`previous tutorial <./Building-a-Visual-Robot-Model-with-URDF-from-"
"Scratch>` for information on what is required."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:27
#: afdc87b7a8bf4242b17bf4eeccf3f129
msgid ""
"Again, all of the robot models mentioned in this tutorial can be found in"
" the `urdf_tutorial <https://index.ros.org/p/urdf_tutorial>`_ package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:29
#: 7d88f5a3082145a5b94f52bf2410c2e0
msgid ""
"`Here is the new urdf "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/06-flexible.urdf>`_ "
"with flexible joints. You can compare it to the previous version to see "
"everything that has changed, but we’re just going to focus on three "
"example joints."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:32
#: 953d630e5f9d497781f2584dad29e0a9
msgid ""
"To visualize and control this model, run the same command as the last "
"tutorial:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:38
#: e302b5fa8c434f1d8ea3dbb390f9edde
msgid ""
"However now this will also pop up a GUI that allows you to control the "
"values of all the non-fixed joints. Play with the model some and see how "
"it moves. Then, we can take a look at how we accomplished this."
msgstr ""

#: 827fee84dfb04b7d964aeae3cd511f0a
msgid "Screenshot of Flexible Model"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:47
#: a3fabc1f962b413391a7261c77ef8eb2
msgid "The Head"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:58
#: 5b8774a790a742c6aebd056862ab62ef
msgid ""
"The connection between the body and the head is a continuous joint, "
"meaning that it can take on any angle from negative infinity to positive "
"infinity. The wheels are also modeled like this, so that they can roll in"
" both directions forever."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:61
#: b6b73941184f46fba40d690efa7d9f36
msgid ""
"The only additional information we have to add is the axis of rotation, "
"here specified by an xyz triplet, which specifies a vector around which "
"the head will rotate. Since we want it to go around the z axis, we "
"specify the vector \"0 0 1\"."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:65
#: 5a073adec32b46289922745e502ed70a
msgid "The Gripper"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:77
#: 02a036ac37a7460e9f03d8636b421e1b
msgid ""
"Both the right and the left gripper joints are modeled as revolute "
"joints. This means that they rotate in the same way that the continuous "
"joints do, but they have strict limits. Hence, we must include the limit "
"tag specifying the upper and lower limits of the joint (in radians). We "
"also must specify a maximum velocity and effort for this joint but the "
"actual values don't matter for our purposes here."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:83
#: d304b0dc08d44e57959595c0fd7d6b1a
msgid "The Gripper Arm"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:94
#: 383a90b5644746cebab69b7934f074f6
msgid ""
"The gripper arm is a different kind of joint, namely a prismatic joint. "
"This means that it moves along an axis, not around it. This translational"
" movement is what allows our robot model to extend and retract its "
"gripper arm."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:98
#: 9a83fc2db684464e99c897bfe3b9b55a
msgid ""
"The limits of the prismatic arm are specified in the same way as a "
"revolute joint, except that the units are meters, not radians."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:101
#: e350e6247ad5453785a5e08d094ff6c1
msgid "Other Types of Joints"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:103
#: 88c4820f79eb4d049cb3697b584a18d4
msgid ""
"There are two other kinds of joints that move around in space. Whereas "
"the prismatic joint can only move along one dimension, a planar joint can"
" move around in a plane, or two dimensions. Furthermore, a floating joint"
" is unconstrained, and can move around in any of the three dimensions. "
"These joints cannot be specified by just one number, and therefore aren’t"
" included in this tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:109
#: 1e98fe18359d4957a5ee341eeca15d5e
msgid "Specifying the Pose"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:111
#: ceabee1187eb4e0a809b9f72dcb48603
msgid ""
"As you move the sliders around in the GUI, the model moves in Rviz. How "
"is this done? First the `GUI "
"<https://index.ros.org/p/joint_state_publisher_gui>`_ parses the URDF and"
" finds all the non-fixed joints and their limits. Then, it uses the "
"values of the sliders to publish `sensor_msgs/msg/JointState "
"<https://github.com/ros2/common_interfaces/blob/eloquent/sensor_msgs/msg/JointState.msg>`_"
" messages. Those are then used by `robot_state_publisher "
"<https://index.ros.org/p/robot_state_publisher>`_ to calculate all of "
"transforms between the different parts. The resulting transform tree is "
"then used to display all of the shapes in Rviz."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.rst:120
#: 6075d647487b4dc29cec926994034f62
msgid ""
"Now that you have a visibly functional model, you can :doc:`add in some "
"physical properties <./Adding-Physical-and-Collision-Properties-to-a"
"-URDF-Model>`, or :doc:`start using xacro to simplify your code <./Using-"
"Xacro-to-Clean-Up-a-URDF-File>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:8
#: 7de5f73d41fb40168681eefb48efa22c
msgid "Building a visual robot model from scratch"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:10
#: b24c0a25abc345179a279d99f8d8101d
msgid ""
"**Goal:** Learn how to build a visual model of a robot that you can view "
"in Rviz"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:20
#: e6b6d21b6e5243879f54e3b1f70c4786
msgid "This tutorial assumes you know how to write well-formatted XML code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:22
#: 57b373d59f874619b2d4b27c5a31d544
msgid ""
"In this tutorial, we’re going to build a visual model of a robot that "
"vaguely looks like R2D2. In later tutorials, you’ll learn how to "
":doc:`articulate the model <./Building-a-Movable-Robot-Model-with-URDF>`,"
" :doc:`add in some physical properties <./Adding-Physical-and-Collision-"
"Properties-to-a-URDF-Model>`, and :doc:`generate neater code with xacro "
"<./Using-Xacro-to-Clean-Up-a-URDF-File>`, but for now, we’re going to "
"focus on getting the visual geometry correct."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:25
#: 308cd0db72494cf0a20616b0e728e2fb
msgid ""
"Before continuing, make sure you have the `joint_state_publisher "
"<https://index.ros.org/p/joint_state_publisher>`_ package installed. If "
"you installed `urdf_tutorial <https://index.ros.org/p/urdf_tutorial>`_ "
"binaries, this should already be the case. If not, please update your "
"installation to include that package (use ``rosdep`` to check)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:29
#: a711c383ef8541f2b6fee31bdca2864f
msgid ""
"All of the robot models mentioned in this tutorial (and the source files)"
" can be found in the `urdf_tutorial "
"<https://index.ros.org/p/urdf_tutorial>`_ package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:32
#: 49d142fc8a574aacb72e33f8bf296e20
msgid "One Shape"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:34
#: 90f384ab9ec14b8e8bdcd2044dfc3602
msgid ""
"First, we’re just going to explore one simple shape. Here’s about as "
"simple as a urdf as you can make. `[Source: 01-myfirst.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/01-myfirst.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:51
#: b0fb944da1ef47e88351fb27da1d7fb6
msgid ""
"To translate the XML into English, this is a robot with the name "
"``myfirst``, that contains only one link (a.k.a. part), whose visual "
"component is just a cylinder 0.6 meters long with a 0.2 meter radius. "
"This may seem like a lot of enclosing tags for a simple “hello world” "
"type example, but it will get more complicated, trust me."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:54
#: 596f483f848049839fee5f8cb1ed26e8
msgid "To examine the model, launch the ``display.launch.py`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:60
#: d1e64f9c86344b2b816b5a916b7ce924
msgid "This does three things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:62
#: 9462b1c8cf84440f95ff7e203b8bdc21
msgid "Loads the specified model and saves it as a parameter"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:63
#: 22004140ad164363bb46d96c1863a3f5
msgid ""
"Runs nodes to publish `sensor_msgs/msg/JointState "
"<https://github.com/ros2/common_interfaces/blob/eloquent/sensor_msgs/msg/JointState.msg>`_"
" and transforms (more on these later)"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:64
#: 399760f8ea87423795db2685bbc643b5
msgid "Starts Rviz with a configuration file"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:66
#: 168d5cbb37314b9196b0aa970caa51b5
msgid ""
"Note that the launch command above assumes that you are executing it from"
" the `urdf_tutorial <https://index.ros.org/p/urdf_tutorial>`_ package "
"directory (ie: the ``urdf`` directory is a direct child of the current "
"working directory). If that is not the case, the relative path to "
"``01-myfirst.urdf`` will not be valid, and you'll receive an error as "
"soon as the launcher tries to load the urdf as a parameter."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:69
#: dbb6cbfa98bc4e1da366dffd3a775d5d
msgid ""
"A slightly modified argument allows this to work regardless of the "
"current working directory:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:75
#: a0ac47273d2e4c538243af70165ba0d7
msgid ""
"You'll have to change all example launch commands given in these "
"tutorials if you are not running them from the ``urdf_tutorial`` package "
"location."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:77
#: 35a5eba938524020a76980f0b1698e8a
msgid ""
"After launching ``display.launch.py``, you should end up with RViz "
"showing you the following:"
msgstr ""

#: ecfa40ab0be246cc8ef3fbd52711a72c
msgid "my first image"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:87
#: d1899e47cd0d43a98cb24854be970a6c
msgid "Things to note:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:84
#: 77ec25f3be18407882e1f0c3ec878979
msgid ""
"The fixed frame is the transform frame where the center of the grid is "
"located. Here, it’s a frame defined by our one link, base_link."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:86
#: e3b85ef8db3c4d9487973ad91b65969d
msgid ""
"The visual element (the cylinder) has its origin at the center of its "
"geometry as a default. Hence, half the cylinder is below the grid."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:90
#: b36f07d3ad1f4c918657321aab33edfd ca623d7c1317406bbe5f4b8f9716f07c
msgid "Multiple Shapes"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:92
#: 616b509233bd4024aaddbe94f08a2977
msgid ""
"Now let’s look at how to add multiple shapes/links. If we just add more "
"link elements to the urdf, the parser won’t know where to put them. So, "
"we have to add joints. Joint elements can refer to both flexible and "
"inflexible joints. We’ll start with inflexible, or fixed joints. "
"`[Source: 02-multipleshapes.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/02-multipleshapes.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:126
#: 3e896a24ea0b4ad986af1868b6019b29
msgid "Note how we defined a 0.6m x 0.1m x 0.2m box"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:127
#: 0829100b9f9f455ca161b606ff4ee6dd
msgid ""
"The joint is defined in terms of a parent and a child. URDF is ultimately"
" a tree structure with one root link. This means that the leg’s position "
"is dependent on the base_link’s position."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:139
#: e2c159eb9b894aef84095bc51abdbede
msgid ""
"Both of the shapes overlap with each other, because they share the same "
"origin. If we want them not to overlap we must define more origins."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:143
#: 0fda5ae13d924ba9b3471cdb9cf235c7
msgid "Origins"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:145
#: 5b1706d439754ed98089a7139f05101b
msgid ""
"R2D2’s leg attaches to the top half of his torso, on the side. So that’s "
"where we specify the origin of the JOINT to be. Also, it doesn’t attach "
"to the middle of the leg, it attaches to the upper part, so we must "
"offset the origin for the leg as well. We also rotate the leg so it is "
"upright. `[Source: 03-origins.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/03-origins.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:180
#: 04814d78a12547a49d609dc80530a106
msgid ""
"Let’s start by examining the joint’s origin. It is defined in terms of "
"the parent’s reference frame. So we are -0.22 meters in the y direction "
"(to our left, but to the right relative to the axes) and 0.25 meters in "
"the z direction (up). This means that the origin for the child link will "
"be up and to the right, regardless of the child link’s visual origin tag."
" Since we didn’t specify a rpy (roll pitch yaw) attribute, the child "
"frame will be default have the same orientation as the parent frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:185
#: f26e4050da524f3db7b53a688d172988
msgid ""
"Now, looking at the leg’s visual origin, it has both a xyz and rpy "
"offset. This defines where the center of the visual element should be, "
"relative to its origin. Since we want the leg to attach at the top, we "
"offset the origin down by setting the z offset to be -0.3 meters. And "
"since we want the long part of the leg to be parallel to the z axis, we "
"rotate the visual part PI/2 around the Y axis."
msgstr ""

#: ad0c7ef1936a437994bcef44cfe435e2
msgid "Origins Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:198
#: a8a0564b62b14b489a68f9dcb975a2f0
msgid ""
"The launch file runs packages that will create TF frames for each link in"
" your model based on your URDF. Rviz uses this information to figure out "
"where to display each shape."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:200
#: 071e48d8dbc2481c9d698e4de8faba6d
msgid ""
"If a TF frame does not exist for a given URDF link, then it will be "
"placed at the origin in white (ref. `related question "
"<http://answers.ros.org/question/207947/how-do-you-use-externally-"
"defined-materials-in-a-urdfxacro-file/>`_)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:203
#: a8138ceb603c4191bf8a236c2a3a5870
msgid "Material Girl"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:205
#: 1660c95881954283a65abfa58fd7ee27
msgid ""
"“Alright,” I hear you say. “That’s very cute, but not everyone owns a "
"B21. My robot and R2D2 are not red!” That’s a good point. Let’s take a "
"look at the material tag. `[Source: 04-materials.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/04-materials.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:268
#: 17d8b717e8034a8eb86481006d1cf577
msgid ""
"The body is now blue. We’ve defined a new material called “blue”, with "
"the red, green, blue and alpha channels defined as 0,0,0.8 and 1 "
"respectively. All of the values can be in the range [0,1]. This material "
"is then referenced by the base_link's visual element. The white material "
"is defined similarly."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:273
#: fc77815f14c6400cbc7a8c90b21ad65e
msgid ""
"You could also define the material tag from within the visual element, "
"and even reference it in other links. No one will even complain if you "
"redefine it though."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:275
#: bd20bb93b83b4179bcfe7f0535fe1ee3
msgid ""
"You can also use a texture to specify an image file to be used for "
"coloring the object"
msgstr ""

#: 0a623c388baf4f5989d03ebdca5c37b1
msgid "Materials Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:286
#: d0c8fb1e3eac46bfacb8e60cf5303fc0
msgid "Finishing the Model"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:288
#: d13752326ee547a4bc0b3bcdac08d3cf
msgid ""
"Now we finish the model off with a few more shapes: feet, wheels, and "
"head. Most notably, we add a sphere and a some meshes. We’ll also add few"
" other pieces that we’ll use later. `[Source: 05-visual.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/05-visual.urdf>`_"
msgstr ""

#: 9295489415c743eb80b56399884dbb95
msgid "Visual Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:549
#: 2dc4d8e0ebfe49138a9241d59e58b3e3
msgid "How to add the sphere should be fairly self explanatory:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:562
#: 60ce56c519854842b6901efd510f7290
msgid ""
"The meshes here were borrowed from the PR2. They are separate files which"
" you have to specify the path for. You should use the "
"``package://NAME_OF_PACKAGE/path`` notation. The meshes for this tutorial"
" are located within the ``urdf_tutorial`` package, in a folder called "
"meshes."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:578
#: 58f09a6f474c47298ff6a5ca828749d7
msgid ""
"The meshes can be imported in a number of different formats. STL is "
"fairly common, but the engine also supports DAE, which can have its own "
"color data, meaning you don’t have to specify the color/material. Often "
"these are in separate files. These meshes reference the ``.tif`` files "
"also in the meshes folder."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:582
#: 1837533faf7e4c229c8e61c2d31997a7
msgid ""
"Meshes can also be sized using relative scaling parameters or a bounding "
"box size."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:583
#: f380cdc6d28a42f0a25d9b7eeb1126f4
msgid "We could have also referred to meshes in a completely different package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:585
#: 6617d998afea4e8f88514609435b2c32
msgid ""
"There you have it. A R2D2-like URDF model. Now you can continue on to the"
" next step, :doc:`making it move <./Building-a-Movable-Robot-Model-with-"
"URDF>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/URDF-Main.rst:8
#: 0ed9e759bb664474ac8404a1456f31e9
msgid "URDF"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/URDF-Main.rst:10
#: 03d109c9760047058f0027ce52920143
msgid ""
"URDF (Unified Robot Description Format) is a file format for specifying "
"the geometry and organization of robots in ROS."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:8
#: 311e589c7bea43b895967c51082d3fbe
msgid "Using URDF with ``robot_state_publisher``"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:10
#: 57c67aebcd294afa9ad5cc277ba44b11
msgid "**Goal:** Simulate a walking robot modeled in URDF and view it in Rviz."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:23
#: ec73de43893f48c1ae6e7b8a06178ba1
msgid ""
"This tutorial will show you how to model a walking robot, publish the "
"state as a `tf2 <https://wiki.ros.org/tf2>`__ message and view the "
"simulation in Rviz. First, we create the URDF model describing the robot "
"assembly. Next we write a node which simulates the motion and publishes "
"the JointState and transforms. We then use ``robot_state_publisher`` to "
"publish the entire robot state to ``/tf2``."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:33
#: 3b1cd7fe1cdb4ede882ea7cd25e40d94
msgid "`rviz2 <https://index.ros.org/p/rviz2/>`__"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:50
#: 1fa3a7a22cfa46f09b64687d24639ddc
msgid ""
"You should now see a ``urdf_tutorial_r2d2`` folder. Next you will make "
"several changes to it."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:54
#: f79293a6d8884faeae081449e1f37d37
msgid "2 Create the URDF File"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:56
#: 4aac81653b19430992c69b50683cfcaf
msgid "Create the directory where we will store some assets:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:62
#: 8b91f56028b34afb9164423374a26a1a
msgid ""
"Download the :download:`URDF file <documents/r2d2.urdf.xml>` and save it "
"as ``~/second_ros2_ws/src/urdf_tutorial_r2d2/urdf/r2d2.urdf.xml``. "
"Download the :download:`Rviz configuration file <documents/r2d2.rviz>` "
"and save it as "
"``~/second_ros2_ws/src/urdf_tutorial_r2d2/urdf/r2d2.rviz``."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:66
#: aaa4dbab252a4783a091253bbb7bd295
msgid "3 Publish the state"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:68
#: 6797dcc2537746e09148d024383bcaae
msgid ""
"Now we need a method for specifying what state the robot is in. To do "
"this, we must specify all three joints and the overall odometry."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:71
#: 993f86cf87ec4f3ab75676fcbc908caa
msgid ""
"Fire up your favorite editor and paste the following code into "
"``~/second_ros2_ws/src/urdf_tutorial_r2d2/urdf_tutorial_r2d2/state_publisher.py``"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:165
#: b9d2ae19428f404785e45b324fa234db
msgid "4 Create a launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:167
#: ae83c5e649e74825a22084ddc439a8c2
msgid ""
"Create a new ``~/second_ros2_ws/src/urdf_tutorial_r2d2/launch`` folder. "
"Open your editor and paste the following code, saving it as "
"``~/second_ros2_ws/src/urdf_tutorial_r2d2/launch/demo_launch.py``"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:211
#: 9ad29087e9f543e0bad3244609f6ffb6
msgid "5 Edit the setup.py file"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:213
#: 28d5d4a9b10f43b58d83c3b0f8786e98
msgid ""
"You must tell the **colcon** build tool how to install your Python "
"package. Edit the ``~/second_ros2_ws/src/urdf_tutorial_r2d2/setup.py`` "
"file as follows:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:216
#: 74fdfe660de545169e89d5b80c15442b
msgid "include these import statements"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:225
#: bafb5074bed24ff19a1ec90987dafdce
msgid "append these 2 lines inside ``data_files``"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:235
#: 50d411c54ee04797a3d4fb75835e458d
msgid ""
"modify the ``entry_points`` table so you can later run 'state_publisher' "
"from a console"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:243
#: 746640c9b8ad4d2484cd7e3135bd2062
msgid "Save the ``setup.py`` file with your changes."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:246
#: 49779874ccb643409bbf4f43bccdef60
msgid "6 Install the package"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:256
#: 6e8874e0595241b8bcc12f2ff4eee7c9
msgid "7 View the results"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:258
#: 3e2dd182b1144dc18ac7e8e61cf8b248
msgid "Launch the package"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:264
#: e118169eff814f93905de438558600f2
msgid "Open a new terminal, the run Rviz using"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:270
#: f793ae0d3ad74054899ca231ea5185bd
msgid ""
"See the `User Guide <http://wiki.ros.org/rviz/UserGuide>`__ for details "
"on how to use Rviz."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:275
#: 332c4f2d8fb941e28bef5fa920cfecf2
msgid ""
"You created a ``JointState`` publisher node and coupled it with "
"``robot_state_publisher`` to simulate a walking robot. The code used in "
"these examples is originally from `here "
"<https://github.com/benbongalon/ros2-migration/tree/master/urdf_tutorial>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-URDF-with-Robot-State-Publisher.rst:278
#: 49d79fc072c844499f959a882f10cade
#, python-format
msgid ""
"Credit is given to the authors of this `ROS 1 tutorial "
"<http://wiki.ros.org/urdf/Tutorials/Using%20urdf%20with%20robot_state_publisher>`__"
" from which some content was reused."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:8
#: 6f79dc7053d14db5abacbd1564c87740
msgid "Using Xacro to clean up your code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:10
#: 5f7f45748fb548759bb4d24696e57f92
msgid ""
"**Goal:** Learn some tricks to reduce the amount of code in a URDF file "
"using Xacro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:20
#: 1ba4aac6a2864525ac6c4e880a775a9f
msgid ""
"By now, if you’re following all these steps at home with your own robot "
"design, you might be sick of doing all sorts of math to get very simple "
"robot descriptions to parse correctly. Fortunately, you can use the "
"`xacro <https://index.ros.org/p/xacro>`_ package to make your life "
"simpler. It does three things that are very helpful."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:24
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:66
#: 3834ff108f8e4ceb8845331df69905e9 570434d383594c44b8a95fd8d5b27f7a
msgid "Constants"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:25
#: 92142c79e8584e2ca9117d3d83b9a202
msgid "Simple Math"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:26
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:145
#: 6f889291635e4a1d860f063968e12b11 72fba66309314ea58ae48f4704572e54
msgid "Macros"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:28
#: 6ca9173a88cd446384cf06bfcf231cfd
msgid ""
"In this tutorial, we take a look at all these shortcuts to help reduce "
"the overall size of the URDF file and make it easier to read and "
"maintain."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:31
#: 5824f932364947f697fbee1d806d5551
msgid "Using Xacro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:32
#: 6414960ebb3a4f628ca9d322ec436143
msgid ""
"As its name implies, `xacro <https://index.ros.org/p/xacro>`_ is a macro "
"language for XML. The xacro program runs all of the macros and outputs "
"the result. Typical usage looks something like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:40
#: 48cd845cb1ba4f469264afafdc811f69
msgid ""
"You can also automatically generate the urdf in a launch file. This is "
"convenient because it stays up to date and doesn’t use up hard drive "
"space. However, it does take time to generate, so be aware that your "
"launch file might take longer to start up."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:57
#: 9df3e2c9f9cf4137b6af259be73432bd
msgid ""
"At the top of the URDF file, you must specify a namespace in order for "
"the file to parse properly. For example, these are the first two lines of"
" a valid xacro file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:67
#: 737050b04a1d409798a7f15c22b92f0b
msgid "Let’s take a quick look at our base_link in R2D2."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:85
#: 62ce001597024956a690b332d0f2ce23
msgid ""
"The information here is a little redundant. We specify the length and "
"radius of the cylinder twice. Worse, if we want to change that, we need "
"to do so in two different places."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:89
#: 3692240323ab49fab1806ee1dc0919dd
msgid ""
"Fortunately, xacro allows you to specify properties which act as "
"constants. Instead, of the above code, we can write this."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:110
#: 92e369f608444f17bfb8a082c41498ad
msgid ""
"The two values are specified in the first two lines. They can be defined "
"just about anywhere (assuming valid XML), at any level, before or after "
"they are used. Usually they go at the top."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:113
#: 0a9a3a6aca4648728d01c215ed869be0
msgid ""
"Instead of specifying the actual radius in the geometry element, we use a"
" dollar sign and curly brackets to signify the value."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:114
#: ac3def5deb9e4a759e2ebdc427e621d9
msgid "This code will generate the same code shown above."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:116
#: 3f1baa7047514fd09a4b12785f1c888b
msgid ""
"The value of the contents of the ${} construct are then used to replace "
"the ${}. This means you can combine it with other text in the attribute."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:124
#: 294576b636834f68bea371cb5d508e60
msgid "This will generate"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:130
#: 851ead7d707c4c319aca368eac94c0e1
msgid ""
"However, the contents in the ${} don’t have to only be a property, which "
"brings us to our next point..."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:133
#: b7bc711773e14888bfa3cac805fc06ba
msgid "Math"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:134
#: eaeeb5ccf5b34420b717d29d5942fc80
msgid ""
"You can build up arbitrarily complex expressions in the ${} construct "
"using the four basic operations (+,-,*,/), the unary minus, and "
"parenthesis. Examples:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:142
#: 8fd6ba6d0715412c899658b926e5f24a
msgid ""
"You can also use more than the basic mathematical operations, like "
"``sin`` and ``cos``."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:146
#: 22dcfc8477fb4147a7e4b578facfb28b
msgid "Here’s the biggest and most useful component to the xacro package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:149
#: 4f19220a23c74bbd801c9d9fb19630a9
msgid "Simple Macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:150
#: 87ed67917f6f47949bcc2932ee8d76b6
msgid "Let’s take a look at a simple useless macro."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:159
#: 7e04223400f34306a3f5d06d394d49b8
msgid ""
"(This is useless, since if the origin is not specified, it has the same "
"value as this.) This code will generate the following."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:165
#: 40ec84fd2ee643258c110ed4036c149b
msgid ""
"The name is not technically a required element, but you need to specify "
"it to be able to use it."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:166
#: 7007983635b742e0a55292add7ae79ae
msgid ""
"Every instance of the ``<xacro:$NAME />`` is replaced with the contents "
"of the ``xacro:macro`` tag."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:167
#: 94886b7781ce474b9b2582e35cfffb43
msgid ""
"Note that even though its not exactly the same (the two attributes have "
"switched order), the generated XML is equivalent."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:168
#: b35f757f2fa245818d820b5d19aa66db
msgid ""
"If the xacro with a specified name is not found, it will not be expanded "
"and will NOT generate an error."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:171
#: 1be69a9877554211a92ea0ec277742ff
msgid "Parameterized Macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:172
#: f2e8cd9125354d53a1c6381bc376c15c
msgid ""
"You can also parameterize macros so that they don’t generate the same "
"exact text every time. When combined with the math functionality, this is"
" even more powerful."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:175
#: 823869e9ba854e06ab6b08aee408c2ba
msgid "First, let’s take an example of a simple macro used in R2D2."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:188
#: fde52b748d9440ccb9256cbf7f9ea505
msgid "This can be used with the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:194
#: 94fe1e86a13a45f9b070c838334d1162
msgid ""
"The parameters act just like properties, and you can use them in "
"expressions"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:196
#: 425cf1f3e6fd4c6b97e708cbd6ef1931
msgid "You can also use entire blocks as parameters too."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:220
#: 7a3ba2fc97d846eb9851d8eaefd086c8
msgid ""
"To specify a block parameter, include an asterisk before its parameter "
"name."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:221
#: 00efb43a873b4be095c86b01753fcab9
msgid "A block can be inserted using the insert_block command"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:222
#: d9fb8a1f615c44808172b3e435ded203
msgid "Insert the block as many times as you wish."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:225
#: ee40fa805a54458c96fdae1d9f62a7a3
msgid "Practical Usage"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:226
#: e8d6e35f4406419a81437c2dfea1c876
msgid ""
"The xacro language is rather flexible in what it allows you to do. Here "
"are a few useful ways that xacro is used in the `R2D2 model "
"<https://github.com/ros/urdf_tutorial/blob/master/urdf/08-macroed.urdf.xacro>`_,"
" in addition to the default inertial macro shown above."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:229
#: 7c1d009b1c0d486a8c4db2a922ed50c4
msgid ""
"To see the model generated by a xacro file, run the same command as with "
"previous tutorials:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:235
#: d7fba79eab714d4ca9890aa7de8145f0
msgid ""
"(The launch file has been running the xacro command this whole time, but "
"since there were no macros to expand, it didn't matter)"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:238
#: 8ab2091267ba4d02aad7718ca2cc93f4
msgid "Leg macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:239
#: 874c563629fe4728a90d8152f132cdd8
msgid ""
"Often you want to create multiple similar looking objects in different "
"locations. You can use a macro and some simple math to reduce the amount "
"of code you have to write, like we do with R2’s two legs."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:272
#: 8a9b7421f6d246ec9ed373f0efe7098d
msgid "Common Trick 1: Use a name prefix to get two similarly named objects."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:273
#: 6e1b72b1eb154c2493c7ed299ea45c13
msgid ""
"Common Trick 2: Use math to calculate joint origins. In the case that you"
" change the size of your robot, changing a property with some math to "
"calculate the joint offset will save a lot of trouble."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:275
#: 5dd8d78dcbfd4bc491fc3d120a4b8094
msgid ""
"Common Trick 3: Using a reflect parameter, and setting it to 1 or -1. See"
" how we use the reflect parameter to put the legs on either side of the "
"body in the base_to_${prefix}_leg origin."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:8
#: 495b813a33044ff8a6eca7f36f19d207
msgid "Writing an action server and client (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:10
#: d32551688f284049bc0bc8792b0e08ee
msgid "**Goal:** Implement an action server and client in C++."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:23
#: 39cb0af14a284168a5b436fbaccfde0b
msgid ""
"Actions are a form of asynchronous communication in ROS. *Action clients*"
" send goal requests to *action servers*. *Action servers* send goal "
"feedback and results to *action clients*."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:30
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:30
#: 582b250b5d0f4e59a37a64fa658a9296 d8bbb8da96394a37b2ff3b38b423bad6
msgid ""
"You will need the ``custom_action_interfaces`` package and the "
"``Fibonacci.action`` interface defined in the previous tutorial, :doc"
":`../Creating-an-Action`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:37
#: 71e1689f1fc9404db74b8af0ffb4234b
msgid "1 Creating the custom_action_cpp package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:39
#: dbdb0b04251046618ebb223a8e71d0d3
msgid ""
"As we saw in the :doc:`../../Beginner-Client-Libraries/Creating-Your-"
"First-ROS2-Package` tutorial, we need to create a new package to hold our"
" C++ and supporting code."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:42
#: 5c955115e8814b92b871b07f9a71d961
msgid "1.1 Creating the custom_action_cpp package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:44
#: 027ee008b8694ccd90a42d00f3e8726b
msgid ""
"Go into the action workspace you created in the :doc:`previous tutorial "
"<../Creating-an-Action>` (remember to source the workspace), and create a"
" new package for the C++ action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:71
#: 639b68af5b9b4e55a9290be01662b1e9
msgid "1.2 Adding in visibility control"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:73
#: 3cbb6ba2ff14439aa03aa0bd315de35c
msgid ""
"In order to make the package compile and work on Windows, we need to add "
"in some \"visibility control\". For more details, see :ref:`Windows "
"Symbol Visibility in the Windows Tips and Tricks document "
"<Windows_Symbol_Visibility>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:76
#: 184cc283a70541de8584d026e5c7a810
msgid ""
"Open up "
"``custom_action_cpp/include/custom_action_cpp/visibility_control.h``, and"
" put the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:126
#: 32a67db3ff1945f192ee2ad550c0b7ea
msgid "2 Writing an action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:128
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:39
#: 374c85a7d9d34e3eac353ae158b71d78 5f6037c5f6ee4437ab57c3660ca9513b
msgid ""
"Let's focus on writing an action server that computes the Fibonacci "
"sequence using the action we created in the :doc:`../Creating-an-Action` "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:131
#: 8891a493d3eb4c6b8524a2881094870f
msgid "2.1 Writing the action server code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:133
#: 90fbcffe8ff74045a1cc2a57cca4a952
msgid ""
"Open up ``custom_action_cpp/src/fibonacci_action_server.cpp``, and put "
"the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:138
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:264
#: 24d19391a16849d289b44cc290b47cbd 55079d0af53848b8af9894455d106be5
msgid "The first few lines include all of the headers we need to compile."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:140
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:266
#: 319a5016f6bb4d8e9b604048f4a5d471 34fd141e6c004d73a8c60bf8311efab2
msgid "Next we create a class that is a derived class of ``rclcpp::Node``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:146
#: 12bb020f868e4f039920b69384b7f6c3
msgid ""
"The constructor for the ``FibonacciActionServer`` class initializes the "
"node name as ``fibonacci_action_server``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:152
#: f1e97dd024da4518a50d86e40b5becc1
msgid "The constructor also instantiates a new action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:158
#: c9e7b0337f2e4a82b7447328da44b70d
msgid "An action server requires 6 things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:160
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:286
#: c144dc09d5c54dff83aaa4d1b949e768 c30ceee28430492ba476366988907611
msgid "The templated action type name: ``Fibonacci``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:161
#: 4df981c92d414aeab9d39621337e5e9e
msgid "A ROS 2 node to add the action to: ``this``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:162
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:288
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:70
#: c13efdc0341b4258b011d52a751ea86f d636be3adb88407cba1c71812806a894
#: db88849894774d069a81a585265311ed
msgid "The action name: ``'fibonacci'``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:163
#: e12e7dc7404541989430e6c008caacfc
msgid "A callback function for handling goals: ``handle_goal``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:164
#: ad29ac38f358468499fd782eecded01d
msgid "A callback function for handling cancellation: ``handle_cancel``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:165
#: aa317c90c43949ff8ebec45e61bfc083
msgid "A callback function for handling goal accept: ``handle_accept``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:167
#: 2d219159ff414a3fbc880dcc0a89c163
msgid ""
"The implementation of the various callbacks is next in the file. Note "
"that all of the callbacks need to return quickly, otherwise we risk "
"starving the executor."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:170
#: 5f8577bdde06499aabd1ff41a7312b65
msgid "We start with the callback for handling new goals:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:176
#: 2a5d4cbbeadc458a8ebc9d1294a2023a
msgid "This implementation just accepts all goals."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:178
#: 388636eb9bec439a9e4cecc9b92763c5
msgid "Next up is the callback for dealing with cancellation:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:184
#: 90c19cc02cb446fead53ed490a3a2a37
msgid ""
"This implementation just tells the client that it accepted the "
"cancellation."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:186
#: 8313c2d7145b4433a13ba3b41e89ffa5
msgid "The last of the callbacks accepts a new goal and starts processing it:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:192
#: e519d1d9f487464980a79453e4ed2fa1
msgid ""
"Since the execution is a long-running operation, we spawn off a thread to"
" do the actual work and return from ``handle_accepted`` quickly."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:194
#: debaa4eee8ae4bcca67cd74a4e1e6dd7
msgid ""
"All further processing and updates are done in the ``execute`` method in "
"the new thread:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:200
#: 19040eb9205040e4a0dd2063eaf96660
msgid ""
"This work thread processes one sequence number of the Fibonacci sequence "
"every second, publishing a feedback update for each step. When it has "
"finished processing, it marks the ``goal_handle`` as succeeded, and "
"quits."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:203
#: 831838a3735c41648d21622192d1ee9b
msgid ""
"We now have a fully functioning action server.  Let's get it built and "
"running."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:206
#: d1cf32dea40145039e2afaa4f6d27bfd
msgid "2.2 Compiling the action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:208
#: 26da0f5c3c1c4785973fac641ecc036e
msgid ""
"In the previous section we put the action server code into place. To get "
"it to compile and run, we need to do a couple of additional things."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:211
#: c54ba62d565040a6b8697d24e3b4b6cf
msgid ""
"First we need to setup the CMakeLists.txt so that the action server is "
"compiled. Open up ``custom_action_cpp/CMakeLists.txt``, and add the "
"following right after the ``find_package`` calls:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:235
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:363
#: 37c5a69cfa734aad930de09ed4403f8d cc23c8847e434c3ca97a00339725f4a6
msgid ""
"And now we can compile the package.  Go to the top-level of the "
"``ros2_ws``, and run:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:241
#: 8425c349dabc44c3932730e8f63e2794
msgid ""
"This should compile the entire workspace, including the "
"``fibonacci_action_server`` in the ``custom_action_cpp`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:244
#: efcbbd9b3d584df7a89ba56bed7f6178
msgid "2.3 Running the action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:246
#: c2fc754e38a4444ba9be025deb9735ef
msgid ""
"Now that we have the action server built, we can run it. Source the "
"workspace we just built (``ros2_ws``), and try to run the action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:254
#: 5b1643a2a7da48f3b48d716e5997c0ae
msgid "3 Writing an action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:257
#: 70b7767815044be2b6c24d4a590f81be
msgid "3.1 Writing the action client code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:259
#: b3aa87b4a22d4bdb8ba0c3e952530f4a
msgid ""
"Open up ``custom_action_cpp/src/fibonacci_action_client.cpp``, and put "
"the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:272
#: 687bfd6930784357bfbfc7f2273199f1
msgid ""
"The constructor for the ``FibonacciActionClient`` class initializes the "
"node name as ``fibonacci_action_client``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:278
#: f5edd6245ba945338accf5d12df29a89
msgid "The constructor also instantiates a new action client:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:284
#: 718b37fdedc94ce1b5b8d3e77766ab0f
msgid "An action client requires 3 things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:287
#: 07a3e3293fb54f608fd4b9f1eb744cc4
msgid "A ROS 2 node to add the action client to: ``this``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:290
#: a0f5a6635f3c453db128d3596751cb93
msgid ""
"We also instantiate a ROS timer that will kick off the one and only call "
"to ``send_goal``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:296
#: fb53d1d1f25b4b40a18228fb3c6141a0
msgid "When the timer expires, it will call ``send_goal``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:302
#: 6ae4182fc5124a51878be8777c904019
msgid "This function does the following:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:304
#: 50d210f846e848e0a288ef6e546f2d29
msgid "Cancels the timer (so it is only called once)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:305
#: b0e2d92c578e4fee8d7707f1331a449b
msgid "Waits for the action server to come up."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:306
#: 46cc00a9fbcd4e0a93e78302d05569b3
msgid "Instantiates a new ``Fibonacci::Goal``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:307
#: 9dbf169d0b9c4d54a84590a456990aac
msgid "Sets the response, feedback, and result callbacks."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:308
#: 9dfd81c5075244fc85b848cbb6233a51
msgid "Sends the goal to the server."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:310
#: 08f09b41ea324e26944747ac0d4d7370
msgid ""
"When the server receives and accepts the goal, it will send a response to"
" the client. That response is handled by ``goal_response_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:317
#: 6ba4e3d7c1314a18865ed9e549af44d5
msgid ""
"Assuming the goal was accepted by the server, it will start processing. "
"Any feedback to the client will be handled by the ``feedback_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:324
#: 3129f95ae1a84e0c90f27d480a7ee40c
msgid ""
"When the server is finished processing, it will return a result to the "
"client. The result is handled by the ``result_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:331
#: bc7069e7fdbb492184739ec56dea7b15
msgid ""
"We now have a fully functioning action client.  Let's get it built and "
"running."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:334
#: 29808c62ee104461aacacbb49cf74790
msgid "3.2 Compiling the action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:336
#: 182117d8842b4bf2a52a4f9938de1f76
msgid ""
"In the previous section we put the action client code into place. To get "
"it to compile and run, we need to do a couple of additional things."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:339
#: 62eba65195d54cdbb54096bb8f31e655
msgid ""
"First we need to setup the CMakeLists.txt so that the action client is "
"compiled. Open up ``custom_action_cpp/CMakeLists.txt``, and add the "
"following right after the ``find_package`` calls:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:369
#: 17637fd101b345d190c6142e75a2963b
msgid ""
"This should compile the entire workspace, including the "
"``fibonacci_action_client`` in the ``custom_action_cpp`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:372
#: a3f2160718a348e9b113b955f7ed47a4
msgid "3.3 Running the action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:374
#: b53ee936703546e88c0c0b05661fd140
msgid ""
"Now that we have the action client built, we can run it. First make sure "
"that an action server is running in a separate terminal. Now source the "
"workspace we just built (``ros2_ws``), and try to run the action client:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:382
#: 12bc7f8041a84735864f9d628ca67d8f
msgid ""
"You should see logged messages for the goal being accepted, feedback "
"being printed, and the final result."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:387
#: d2a574a448434acd83a41aeebe10de0b
msgid ""
"In this tutorial, you put together a C++ action server and action client "
"line by line, and configured them to exchange goals, feedback, and "
"results."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:392
#: 7bfed43c10334b2ea065b334b7f1f708
msgid ""
"There are several ways you could write an action server and client in "
"C++; check out the ``minimal_action_server`` and "
"``minimal_action_client`` packages in the `ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp>`_ "
"repo."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:8
#: 671132dbb956467e9d2c7a59699c54d6
msgid "Writing an action server and client (Python)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:10
#: cfe94d02e4194b10b0e1c27324b78d3c
msgid "**Goal:** Implement an action server and client in Python."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:23
#: 2f94d47113d34697bf4aa09b6cbe7074
msgid ""
"Actions are a form of asynchronous communication in ROS 2. *Action "
"clients* send goal requests to *action servers*. *Action servers* send "
"goal feedback and results to *action clients*."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:37
#: e424b8d5325f48abb01928a2a505e312
msgid "1 Writing an action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:42
#: 2fb3e2d28cc14c7fa16981542043b1b8
msgid ""
"Until now, you've created packages and used ``ros2 run`` to run your "
"nodes. To keep things simple in this tutorial, however, we’ll scope the "
"action server to a single file. If you'd like to see what a complete "
"package for the actions tutorials looks like, check out `action_tutorials"
" "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/action_tutorials>`__."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:47
#: 97160960b09c428db0c7e7e1be5b4305
msgid ""
"Open a new file in your home directory, let's call it "
"``fibonacci_action_server.py``, and add the following code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:53
#: 9829b225ddb24c10ab92fc3da7a1b80f
msgid ""
"Line 8 defines a class ``FibonacciActionServer`` that is a subclass of "
"``Node``. The class is initialized by calling the ``Node`` constructor, "
"naming our node ``fibonacci_action_server``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:60
#: ea827d514f1a47cd87efec3e8c4b4dd2
msgid "In the constructor we also instantiate a new action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:66
#: cc0268af6f7d42f99d0421ddb47b14d1
msgid "An action server requires four arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:68
#: e1d2d4ad83e746e69c33df9ffd4c1185
msgid "A ROS 2 node to add the action client to: ``self``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:69
#: 012616d29dc94ad3b19eced8492dc9ae
msgid "The type of the action: ``Fibonacci`` (imported in line 5)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:71
#: e8830f319ccc4d4f9074c25aed52c343
msgid ""
"A callback function for executing accepted goals: "
"``self.execute_callback``. This callback **must** return a result message"
" for the action type."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:74
#: 3d03e8d714854fb288ad7c2e477e7349
msgid "We also define an ``execute_callback`` method in our class:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:80
#: 3acec5a9e573455e90e9bbd42ca16750
msgid ""
"This is the method that will be called to execute a goal once it is "
"accepted."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:82
#: 78a28583575c43dfafe655aa73d2aa28
msgid "Let's try running our action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:104
#: 1d8f577e2faf494285497b7a413d6aa7
msgid "In another terminal, we can use the command line interface to send a goal:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:110
#: 14e5163d47b843a09d5eb25accbc2c9b
msgid ""
"In the terminal that is running the action server, you should see a "
"logged message \"Executing goal...\" followed by a warning that the goal "
"state was not set. By default, if the goal handle state is not set in the"
" execute callback it assumes the *aborted* state."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:113
#: 48bfb359993242b6b5fbbfc3ed8d1483
msgid ""
"We can use the method `succeed() "
"<http://docs.ros2.org/latest/api/rclpy/api/actions.html#rclpy.action.server.ServerGoalHandle.succeed>`_"
" on the goal handle to indicate that the goal was successful:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:120
#: 8e26470e84494e8eaa80eb405689e843
msgid ""
"Now if you restart the action server and send another goal, you should "
"see the goal finished with the status ``SUCCEEDED``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:122
#: fd4dc9c7d58247f4910f8cac40906976
msgid ""
"Now let's make our goal execution actually compute and return the "
"requested Fibonacci sequence:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:129
#: 0c1298f4e2264e678de8bae7f4a406e7
msgid ""
"After computing the sequence, we assign it to the result message field "
"before returning."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:131
#: c74a30a9215f40ca95ef5f2ef577abf0
msgid ""
"Again, restart the action server and send another goal. You should see "
"the goal finish with the proper result sequence."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:135
#: bf5655639c02443fa5c9cb4163d4b19c
msgid "1.2 Publishing feedback"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:137
#: 42799e1f47614f2a946c22605cde7270
msgid ""
"One of the nice things about actions is the ability to provide feedback "
"to an action client during goal execution. We can make our action server "
"publish feedback for action clients by calling the goal handle's "
"`publish_feedback() "
"<http://docs.ros2.org/latest/api/rclpy/api/actions.html#rclpy.action.server.ServerGoalHandle.publish_feedback>`_"
" method."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:140
#: e8eb6dcbc86f4fe193e0165eda3caecd
msgid ""
"We'll replace the ``sequence`` variable, and use a feedback message to "
"store the sequence instead. After every update of the feedback message in"
" the for-loop, we publish the feedback message and sleep for dramatic "
"effect:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:147
#: 5778bb631ee047f894b718b3ad9769cf
msgid ""
"After restarting the action server, we can confirm that feedback is now "
"published by using the command line tool with the ``--feedback`` option:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:154
#: f0a617cf6ed24f6da7d82125ebdba7bb
msgid "2 Writing an action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:156
#: 5232b455396c4676bdd68978f0ac1d91
msgid ""
"We'll also scope the action client to a single file. Open a new file, "
"let's call it ``fibonacci_action_client.py``, and add the following "
"boilerplate code:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:162
#: d61f573292744501aa45bebad94a6eb6
msgid ""
"We've defined a class ``FibonacciActionClient`` that is a subclass of "
"``Node``. The class is initialized by calling the ``Node`` constructor, "
"naming our node ``fibonacci_action_client``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:169
#: 449997a47d944f37aaa78eee816b4424
msgid ""
"Also in the class constructor, we create an action client using the "
"custom action definition from the previous tutorial on :doc:`../Creating-"
"an-Action`:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:175
#: 13ed52f164aa41dab565984fe08e2786
msgid "We create an ``ActionClient`` by passing it three arguments:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:177
#: 35209866fc8647f0b05a76283ef827b7
msgid "A ROS 2 node to add the action client to: ``self``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:178
#: 48ff36f363ac490085517ddfdac7849d
msgid "The type of the action: ``Fibonacci``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:179
#: 37f19c623716471e89570400488fccb7
msgid "The action name: ``'fibonacci'``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:181
#: e5384efb01da4f7da3791ea040bc548d
msgid ""
"Our action client will be able to communicate with action servers of the "
"same action name and type."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:183
#: 6a9a4384776241658eebc22aa4e434d0
msgid ""
"We also define a method ``send_goal`` in the ``FibonacciActionClient`` "
"class:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:189
#: a21156f00ac6422bacbbfeb12cf7c634
msgid ""
"This method waits for the action server to be available, then sends a "
"goal to the server. It returns a future that we can later wait on."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:192
#: 87ba678304474cc79ffd45b7e5e2ea3c
msgid ""
"After the class definition, we define a function ``main()`` that "
"initializes ROS 2 and creates an instance of our "
"``FibonacciActionClient`` node. It then sends a goal and waits until that"
" goal has been completed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:196
#: 887015cc191041fdaa78b88742d99de1
msgid "Finally, we call ``main()`` in the entry point of our Python program."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:198
#: 1e288b720f864f7294aaf6ac3cbfee81
msgid ""
"Let's test our action client by first running the action server built "
"earlier:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:220
#: fcc642aee4254f769cdb0fa53a2b1cd6
msgid "In another terminal, run the action client:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:242
#: 6949b01a3bfa452ab38cd4329666be24
msgid ""
"You should see messages printed by the action server as it successfully "
"executes the goal:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:253
#: 8f002699b48b4612aeab9d1faf8c34b4
msgid ""
"The action client should start up, and then quickly finish. At this "
"point, we have a functioning action client, but we don't see any results "
"or get any feedback."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:257
#: 37f7da1930fb46dcbd5776e88c3ed17d
msgid "2.1 Getting a result"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:259
#: 0b2751b17a4540ea98beeb30ddfefee4
msgid ""
"So we can send a goal, but how do we know when it is completed? We can "
"get the result information with a couple steps. First, we need to get a "
"goal handle for the goal we sent. Then, we can use the goal handle to "
"request the result."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:264
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:329
#: 876b597ee58d4999875405938f496c99 c87cbcd3707c402d84e022e9fc3544a1
msgid "Here's the complete code for this example:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:269
#: 702544572fdd4cf4b9a21e23759d4ba7
msgid ""
"The `ActionClient.send_goal_async() "
"<http://docs.ros2.org/latest/api/rclpy/api/actions.html#rclpy.action.client.ActionClient.send_goal_async>`_"
" method returns a future to a goal handle. First we register a callback "
"for when the future is complete:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:276
#: 551805ba4f2642ceb78af4628769ff4d
msgid ""
"Note that the future is completed when an action server accepts or "
"rejects the goal request. Let's look at the ``goal_response_callback`` in"
" more detail. We can check to see if the goal was rejected and return "
"early since we know there will be no result:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:284
#: ebb3861a7ec848e6be8284c2638a5d7f
msgid ""
"Now that we've got a goal handle, we can use it to request the result "
"with the method `get_result_async() "
"<http://docs.ros2.org/latest/api/rclpy/api/actions.html#rclpy.action.client.ClientGoalHandle.get_result_async>`_."
" Similar to sending the goal, we will get a future that will complete "
"when the result is ready. Let's register a callback just like we did for "
"the goal response:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:292
#: 25f67a3b94714c9bbda0af3b2b3c874f
msgid ""
"In the callback, we log the result sequence and shutdown ROS 2 for a "
"clean exit:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:298
#: 5dfe30ad473146758669c33ccb1be85d
msgid ""
"With an action server running in a separate terminal, go ahead and try "
"running our Fibonacci action client!"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:320
#: bb158d003106417e82a6a2d95c4d29a2
msgid ""
"You should see logged messages for the goal being accepted and the final "
"result."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:323
#: 8104c4d4f483489ea1b70e511ca4940f
msgid "2.2 Getting feedback"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:325
#: 5a6c047ad1904b8b9098752aad8baadb
msgid ""
"Our action client can send goals. Nice! But it would be great if we could"
" get some feedback about the goals we send from the action server."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:334
#: 8641844a59ae40dfb48ced0721e9e250
msgid "Here's the callback function for feedback messages:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:340
#: 95c37eb984af4757927ed93b1b858419
msgid ""
"In the callback we get the feedback portion of the message and print the "
"``partial_sequence`` field to the screen."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:342
#: 5b8b0ac9b2a94881b8a09b8c1a739c90
msgid ""
"We need to register the callback with the action client. This is achieved"
" by additionally passing the callback to the action client when we send a"
" goal:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:349
#: 9ca631b110684c52b9c129e6555fa69e
msgid ""
"We're all set. If we run our action client, you should see feedback being"
" printed to the screen."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:354
#: ac5edaa2eff64e159df6d9c9555f9672
msgid ""
"In this tutorial, you put together a Python action server and action "
"client line by line, and configured them to exchange goals, feedback, and"
" results."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.rst:359
#: 1043a83aa101417088ea6606d2782a33
msgid ""
"There are several ways you could write an action server and client in "
"Python; check out the ``minimal_action_server`` and "
"``minimal_action_client`` packages in the `ros2/examples "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclpy/actions>`_"
" repo."
msgstr ""

#: ../../source/Tutorials/Miscellaneous.rst:2 2e46b23a5a204e28a5ab346e38d13c6e
msgid "Miscellaneous"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:6
#: b2115de82b9d473d9c89addffc7fea84
msgid "Building a package with Eclipse 2021-06"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:12
#: cb45ce8d2ff54ab4a0b0d953774d4080
msgid ""
"You cannot create a ROS 2 package with eclipse, you need to create it "
"with commandline tools. Follow the :doc:`Create a package <../Beginner-"
"Client-Libraries/Creating-Your-First-ROS2-Package>` tutorial."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:15
#: de2e4850c09a4218b881a81de2de6aaf
msgid ""
"After you created your project, you can edit the source code and build it"
" with eclipse."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:17
#: 2862f900a88a46de903828e4e5165315
msgid "We start eclipse and select a eclipse-workspace."
msgstr ""

#: 42543bcce53341d1a825166e1c05a0e8
msgid "eclipse_work_dir"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:23
#: 7e05279378bb4daa93e49170e8fb2dd2
msgid "We create a C++ project"
msgstr ""

#: e4a7eacdd5824ab4892f3b19b3f32408
msgid "eclipse_create_c++_project"
msgstr ""

#: 2e009504bc1f43498967cf311548ac2b
msgid "eclipse_c++_project_select_type"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:34
#: 6c5837f99b314f85bab13b5e9cea626a
msgid "We see that we got C++ includes."
msgstr ""

#: cc7790aea31d4585a04c13fd70ee3a8a
msgid "eclipse_c++_project_includes"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:41
#: 89ed25af05bf4b409b5e82d66a1f9a22
msgid "We now import our ROS 2 project. The code is still in the old place."
msgstr ""

#: 96d4ce010fd8432aabde6b43e9db70a4
msgid "eclipse_import_project"
msgstr ""

#: 9203e280fc634d8e8c02a8494a12a115
msgid "eclipse_import_filesystem"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:51
#: 3d138c257e854c54bbad64e4026d0193
msgid ""
"Click the Advanced in the Options and check the **Create links in "
"worksapce**."
msgstr ""

#: e5d8466f1bb24133955457f7cb887c40
msgid "eclipse_import_select_my_package"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:59
#: a0a924d79f1241af8ad0849cf73a3a86
msgid ""
"We see in the source code that the C++ includes got resolved but not the "
"ROS 2 ones."
msgstr ""

#: ad6f46ee65644db182843a1afe24d34f
msgid "eclipse_c++_wo_ros_includes"
msgstr ""

#: 4935a9e9775340f592b1813d7787a7f1
msgid "eclipse_c++_path_and_symbols"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:70
#: 615d8830611c4fc2a7b07ac662fd65f7
msgid ""
"Add include paths of needed packages. (e.g. "
"**/opt/ros/iron/include/rclcpp**, **/opt/ros/iron/include/std_msgs**, "
"etc.)"
msgstr ""

#: 5139ac4e1cd44591b654f3546ded17c3
msgid "eclipse_c++_add_directory_path"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:78
#: 3bbfa411e2c34f94aec81f02e06452d2
msgid "We now see that the ROS 2 includes got resolved too."
msgstr ""

#: be56764187ab494c80f2eef0dd3c5bd5
msgid "eclipse_c++_indexer_ok"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:85
#: 589f86b982c04638a13bc9d98aa7f0f2
msgid ""
"Adding Builder colcon, so that we can build with right-click on project "
"and \"Build project\"."
msgstr ""

#: c54a1b3a8fa04bb28b0286b76e2389c4
msgid "eclipse_c++_properties_builders"
msgstr ""

#: 8c0195101a074e9185ba2d674871e3f4
msgid "eclipse_c++_builder_main"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:97
#: 5264d417f84d41558a7d4d25ed5b6d03
msgid "With PYTHONPATH you can also build python projects."
msgstr ""

#: a0ef9f2350834c439c75bbb2d3764ab9
msgid "eclipse_c++_builder_env"
msgstr ""

#: 541430e333bd4c03af6cb39690fc8085
msgid "eclipse_c++_properties_builders_with_colcon"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-ROS2-Package-with-eclipse-2021-06.rst:109
#: 1b6eeda35dd14b2a9adb6228aaa6a139
msgid "Right-click on the project and select \"Build Project\"."
msgstr ""

#: 6a2f481d112840a7be70169d66acdf50
msgid "eclipse_c++_build_project_with_colcon"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:7
#: c377220b9c6e403d8f1e2b0de5631bcd
msgid "Building a real-time Linux kernel [community-contributed]"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:9
#: 64a31482f2754f0fa6216e6679f271c9
msgid ""
"This tutorial begins with a clean Ubuntu 20.04.1 install on Intel x86_64."
" Actual kernel is 5.4.0-54-generic, but we will install the Latest Stable"
" RT_PREEMPT Version. To build the kernel you need at least 30GB free disk"
" space."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:11
#: 5bae3cee67614cb5b42a836ea83ba8e0
msgid ""
"Check https://wiki.linuxfoundation.org/realtime/start for the latest "
"stable version, at the time of writing this is \"Latest Stable Version "
"5.4-rt\". If we click on the `link "
"<http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.4/>`_, we get the "
"exact version. Currently it is patch-5.4.78-rt44.patch.gz."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:17
#: f356c273fcb548e98eacffa8b41c3e90
msgid "We create a directory in our home dir with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:23
#: 3fdf624433ad47498215a93a0aeed59f
msgid "and switch into it with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:29
#: a040ca6c42d646c6816df1477b720052
msgid ""
"We can go with a browser to "
"https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/ and see if the "
"version is there. You can download it from the site and move it manually "
"from /Downloads to the /kernel folder, or download it using wget by right"
" clicking the link using \"copy link location\". Example:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:35
#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:47
#: 558600d5038e435aaa5d0e86891e4b4b ed6aff1f3ab74db082625ddb0f693aa3
msgid "unpack it with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:41
#: 31894d0ac3064a8bb13492e4f3696f4c
msgid ""
"download rt_preempt patch matching the Kernel version we just downloaded "
"over at http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.4/"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:53
#: 85ee94750f1546cbab12fe5570e18bf0
msgid "Then switch into the linux directory with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:59
#: cac21691a2dd4c6d8b45b847d1290a03
msgid "and patch the kernel with the realtime patch"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:65
#: 7d8639c278ca48029a9d4cc20d22a94e
msgid ""
"We simply want to use the config of our Ubuntu installation, so we get "
"the Ubuntu config with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:71
#: 0d06563a199d472c958141582d10fe69
msgid ""
"Open Software & Updates. in the Ubuntu Software menu tick the 'Source "
"code' box"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:73
#: ae005c79224f4280a266181f2bd081a1
msgid "We need some tools to build kernel, install them with"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:80
#: be40707b90634f71a9f3787dd44fb753
msgid "To enable all Ubuntu configurations, we simply use"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:86
#: 412555cf20ac45c28427009221a18221
msgid "Then we need to enable rt_preempt in the kernel. We call"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:92
#: be6d71c008f84ae1897459031e62fbed
msgid "and set the following"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:124
#: d97ce96ceea049329ec4aadefc02a05c
msgid ""
"Save and exit menuconfig. Now we're going to build the kernel which will "
"take quite some time. (10-30min on a modern cpu)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:130
#: 6cf5bd97fe7d432b9ce7015412f1214a
msgid "After the build is finished check the debian packages"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:138
#: b0b201278c8c432e91d774362432da88
msgid "Then we install all kernel debian packages"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:144
#: b103c66babab4d52acf414226cf238ed
msgid ""
"Now the real time kernel should be installed. Reboot the system and check"
" the new kernel version"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:7
#: e0e123d098c24fb6ab641c7cd1517550
msgid "Deploying on IBM Cloud Kubernetes [community-contributed]"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:15
#: 44b7e62e6e9a43c793721f37081930a5
msgid "About"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:17
#: 468aeba38d854d14827bbfb89f547f66
msgid ""
"This article describes how to get ROS2 running on IBM Cloud using Docker "
"files. It first gives a brief overview of docker images and how they work"
" locally and then explores IBM Cloud and how the user can deploy their "
"containers on it. Afterwards, a short description of how the user can use"
" their own custom packages for ROS2 from github on IBM Cloud is provided."
" A walkthrough of how to create a cluster and utilize Kubernetes on IBM "
"Cloud is provided and finally the Docker image is deployed on the "
"cluster. Originally published `here <https://github.com/mm-"
"nasr/ros2_ibmcloud>`__ and `here <https://medium.com/@mahmoud-nasr"
"/running-ros2-on-ibm-cloud-1b1284cbd487>`__."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:23
#: f8777f7d616c465ba80bee0c546f0c4a
msgid "ROS2 on IBM Cloud"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:25
#: a8a424b37cad498598ce8e90235dd15b
msgid ""
"In this tutorial, we show how you can easily integrate and run ROS2 on "
"IBM Cloud with your custom packages."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:28
#: e1a929dcebac4ec0a1edbe8f221e1746
msgid ""
"ROS2 is the new generation of ROS which gives more control over multi-"
"robot formations. With the advancements of cloud computing, cloud "
"robotics are becoming more important in today's age. In this tutorial, we"
" will go through a short introduction on running ROS2 on IBM Cloud. By "
"the end of the tutorial, you will be able to create your own packages in "
"ROS2 and deploy them to the cloud using docker files."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:35
#: 176ecdb2eda74e338405ea36a3775593
msgid ""
"The following instructions assume you're using Linux and have been tested"
" with Ubuntu 18.04 (Bionic Beaver)."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:39
#: 247e0cb858384c0c88d3ec1f40114b5b
msgid "Step 1: Setting up your system"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:41
#: 729b8327f21c43b1aa7849df819e87b6
msgid ""
"Before we go into how the exact process works, lets first make sure all "
"the required software is properly installed. We'll point you towards the "
"appropriate sources to set up your system and only highlight the details "
"that pertain to our use-case."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:47
#: ca061d629e254754933f91bbecab38fa
msgid "a) Docker files?"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:49
#: d0681eff880844b187ed80eb9fd2b0b0
msgid ""
"Docker files are a form of containers that can run separate from your "
"system, this way, you can set-up potentially hundreds of different "
"projects without affecting one another. You can even set-up different "
"versions of Linux on one machine, without the need for virtual machine. "
"Docker files have an advantage of saving space and only utilizing your "
"system resources when running. In addition, dockers are versatile and "
"transferable. They contain all the required pre-requisites to run "
"separately, meaning that you can easily use a docker file for a specific "
"system or service without any cubersome steps!"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:59
#: e9eb478235b7409e8543e699e08b7947
msgid ""
"Excited yet? Let's start off by installing docker to your system by "
"following the following `link <https://docs.docker.com/get-docker/>`__. "
"From the tutorial, you should have done some sanity checks to make sure "
"docker is properly set-up. Just in case, however, let's run the following"
" command once again that uses the hello-world docker image:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:69
#: 6b744f927dcb47cf94d526b26085c853
msgid "You should obtain the following output:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:95
#: 54f4e4250899478aa93d21e955e4ac44
msgid "b) ROS2 Image"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:97
#: 03ea7770eadb45738cec2b92937b7085
msgid ""
"ROS `announced <https://discourse.ros.org/t/announcing-official-docker-"
"images-for-ros2/7381/2>`__ image containers for several ROS distributions"
" in January 2019. More detailed instructions on the use of ROS2 docker "
"images can be found `here <https://hub.docker.com/_/ros/>`__."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:103
#: 692fbd2abe004297aa3d62ce25d11f6f
msgid ""
"Let's skip through that and get to real-deal right away; creating a local"
" ROS2 docker. We'll create our own Dockerfile (instead of using a ready "
"Image) since we'll need this method for deployment on IBM Cloud. First, "
"we create a new directory which will hold our Dockerfile and any other "
"files we need later on and navigate to it. Using your favorite $EDITOR of"
" choice, open a new file named *Dockerfile* (make sure the file naming is"
" correct):"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:119
#: d16af6acd3f14622943d71fe141427a9
msgid ""
"Insert the following in the *Dockerfile*, and save it (also found `here "
"<https://github.com/mm-"
"nasr/ros2_ibmcloud/blob/main/dockers/ros2_basic/Dockerfile>`__):"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:137
#: e1a9e3f47d004315989465f0ceacbcd6
msgid "**FROM**: creates a layer from the ros:foxy Docker image"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:138
#: b9713f914fe94038bc04d9160180f00c
msgid ""
"**RUN**: builds your container by installing vim into it and creating a "
"directory called /ros2_home"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:140
#: 12713eddf3094605afbad3dc955e65c6
msgid ""
"**WORKDIR**: informs the container where the working directory should be "
"for it"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:143
#: 63613b66df18487597afe911cbac3646
#, python-format
msgid ""
"Of course, you are free to change the ROS distribution (*foxy* is used "
"here) or change the directory name. The above docker file sets up ROS-"
"foxy and installs the demo nodes for C++ and Python. Then it launches a "
"file which runs a talker and a listener node. We will see it in action in"
" just a few, but they act very similar to the publisher-subscriber "
"example found in the `ROS wiki "
"<https://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber%28c%2B%2B%29>`__"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:151
#: e4b754e8879f464c85ccb96efe11af24
msgid ""
"Now, we are ready to build the docker image to run ROS2 in it (yes, it is"
" THAT easy!)."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:154
#: c1e79c2481ab4428befbe63ce3563be9
msgid ""
"**Note**: if you have errors due to insufficient privileges or "
"*permission denied*, try running the command with *sudo* privileges:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:164
#: eef4d5840db34844b5d5e3b09da5a1e7
msgid ""
"*0dc6ce7cb487* will most probably be different for you, so keep note of "
"it and copy it somewhere for reference. You can always go back and check "
"the docker images you have on your system using:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:172
#: 87f2e64e217b4bc9b53bc3dc76841246
msgid "Now, run the docker file using:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:194
#: 65f50f4eb52b4d40937c2d98e65c7b7f
msgid ""
"If it works correctly, you should see something similar to what is shown "
"above. As can be seen, there are two ROS nodes (a publisher and a "
"subscriber) running and their output is provided to us through ROS INFO."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:199
#: a68a9be793784df19178be7476109b4e
msgid "Step 2: Running the image on IBM Cloud"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:201
#: df7d010a407d4586b73574080c133df3
msgid ""
"The following steps assume you have an IBM cloud account and have "
"ibmcloud CLI installed. If not, please check this `link "
"<https://cloud.ibm.com/docs/cli/reference/ibmcloud/download_cli.html>`__ "
"out to get that done first."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:206
#: 28bd9251c90e4b7881d5d8d64cbb7b73
msgid ""
"We also need to make sure that the CLI plug-in for the IBM Cloud "
"Container Registry is installed by running the command"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:213
#: 4d40f33f1259428db5044b98c1128af0
msgid "Afterwards, login to your ibmcloud account through the terminal:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:219
#: ae4bc1e477df4bf8970d414ed419aac5
msgid ""
"From here, let's create a container registry name-space. Make sure you "
"use a unique name that is also descriptive as to what it is. Here, I used"
" *ros2nasr*."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:227
#: 740693ffa48845209339b77ba7e941de
msgid ""
"IBM cloud has a lot of shortcuts that would help us get our container "
"onto the cloud right away. The command below builds the container and "
"tags it with the name **ros2foxy** and the version of **1**. Make sure "
"you use the correct registry name you created and you are free to change "
"the container name as you wish. The **.** at the end indicates that the "
"*Dockerfile* is in the current directory (and it is important), if not, "
"change it to point to the directory containing the Dockerfile."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:239
#: 65929166e0794e1e98c4835be430b8ef
msgid ""
"You can now make sure that the container has been pushed to the registry "
"you created by running the following command"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:252
#: 8d779d665ab448dc803e437796c1eeaf
msgid ""
"Next, it is important to log-in to your registry to run the docker image."
" Again, if you face a *permission denied* error, perform the command with"
" sudo privileges. Afterwards, run your docker file as shown below."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:269
#: 6ca1d3e2cdbc42efb9fd7c280cd2c8aa
msgid ""
"Where *ros2nasr* is the name of the registry you created and *ros2foxy:1*"
" is the tag of the docker container and the version as explained "
"previously."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:273
#: 593b243501d641f9a769d570b4919078
msgid ""
"You should now see your docker file running and providing similar output "
"to that you saw when you ran it locally on your machine."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:277
#: 101c8b415f5f4268add6ca222f340ae8
msgid "Step 3: Using Custom ROS2 Packages"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:279
#: 4ceff25facaa4f46b75b5f90980e705f
msgid ""
"So now we have the full pipeline working, from creating the Dockerfile, "
"all the way to deploying it and seeing it work on IBM Cloud. But, what if"
" we want to use a custom set of packages we (or someone else) created?"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:283
#: 3017fa2ef9914608afe8473c0771a669
msgid ""
"Well that all has to do with how you set-up your Dockerfile. Lets use the"
" example provided by ROS2 `here <https://hub.docker.com/_/ros/>`__. "
"Create a new directory with a new Dockerfile (or overwrite the existing "
"one) and add the following in it (or download the file `here "
"<https://github.com/mm-"
"nasr/ros2_ibmcloud/blob/main/dockers/git_pkgs_docker/Dockerfile>`__)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:351
#: b153d48d7b6848bc8d13d156b509baf2
msgid ""
"Going through the lines shown, we can see how we can add custom packages "
"from github in 4 steps:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:354
#: 385f2dba1333498898eaec5db71c494c
msgid "Create an overlay with custom packages cloned from Github:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:369
#: 1496a7818e1f41e391e3f4cfb54640d1
msgid "Install package dependencies using rosdep"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:385
#: 994970c0bd8842fda31495a5b538be20
msgid "Build the packages *you need*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:399
#: d5a18087824d462e9a886c25e2fc156b
msgid "Running the launch file"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:406
#: d50cd1615e474175ba60edecf509f404
msgid ""
"Likewise, we can change the packages used, install their dependencies, "
"and then run them."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:409
#: 6b269805eb8a45199ca13be14188f5a7
msgid "**Back to IBM Cloud**"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:411
#: 3bf45cfb30cb4f8dbdab95aac9fe0087
msgid ""
"With this Dockerfile, we can follow the same steps we did before to "
"deploy it on IBM Cloud. Since we already have our registry created, and "
"we're logged in to IBM Cloud, we directly build our new Dockerfile. "
"Notice how I kept the tag the same but changed the version, this way I "
"can update the docker image created previously. (You are free to create a"
" completely new one if you want)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:422
#: 6d9653b9c8b046489aefedd330c694f7
msgid ""
"Then, make sure you are logged in to the registry and run the new docker "
"image:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:437
#: a12e61b2c2d34e0eaae57a36b7da933f
msgid ""
"You should see, again, the same output. However, this time we did it "
"through custom packages from github, which allows us to utilize our "
"personally created packages for ROS2 on IBM Cloud."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:442
#: 00f8284e6e2e4e58b0c50c4ec5ff9fdb
msgid "Extra: Deleting Docker Images"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:444
#: c0ab29bb3122448eb8016f7931e6fbd4
msgid ""
"As you may find yourself in need of deleting a specific docker image(s) "
"from IBM Cloud, this is how you should go about it!"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:447
#: fdf4ee7a76844245893e1ae15b587212
msgid ""
"List all the images you have and find all the ones that share the *IMAGE*"
" name corresponding to *registry.ng.bluemix.net/ros2nasr/ros2foxy:2* (in "
"my case). Then delete them using their *NAMES*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:456
#: c5813dff6ac8479d9f066b27d85ee37e
msgid "Delete the docker image from IBM Cloud using its *IMAGE* name"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:463
#: a2cbaf83de0f4bb2a8d46b3812de2d2d
msgid "Step 4: Kubernetes"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:466
#: a43462479f9c421baf3a186a754d5ef4
msgid "a) Creating the Cluster"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:468
#: a8534bea8ae4494aa2948964b2bcc405
msgid ""
"Create a cluster using the Console. The instructions are found `here "
"<https://cloud.ibm.com/docs/containers?topic=containers-"
"clusters#clusters_ui>`__. The settings used are detailed below. These are"
" merely suggestions and can be changed if you need to. However, make sure"
" you understand the implications of your choices:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:474
#: d43dc5fce041493bafcb4afb4d53f854
msgid "Plan: *Standard*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:476
#: 29a86288c64449d9b59a66219e020184
msgid "Orchestration Service: *Kubernetes v1.18.10*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:478
#: 4d680973da5643c4a68f054bf832fe99
msgid "Infrastructure: *Classic*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:480
#: 8298118f935f4943a2baac7717b40621
msgid "Location:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:482
#: 348917f3bb414a119a46ade11b6c4dd7
msgid "Resource group: *Default*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:484
#: 20f386f1f9d94885a0eed6fcc82bf74b
msgid "Geography: *North America* (you are free to change this)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:486
#: 6d96a0d37676463b923fedadd28c297f
msgid ""
"Availability: *Single zone* (you are free to change this but make sure "
"you understand the impact of your choices by checking the IBM Cloud "
"documentation.)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:490
#: 571f13d3371e4b3fa6ca3e335da2df53
msgid ""
"Worker Zone: *Toronto 01* (choose the location that is physically closest"
" to you)"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:493
#: 1200ad97d50341d0b35f8b2b4e4c8095
msgid "Worker Pool:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:495
#: 1d7461c592cb4524a284247ba485c7a8
msgid "Virtual - shared, Ubuntu 18"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:497
#: dd2103437b43418ba90f976bad0b5522
msgid "Memory: 16 GB"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:499
#: f1d51bc16bb24d05a94d4f63ca9e2c5a
msgid "Worker nodes per zone: *1*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:501
#: 1a0d761382844f82906f8b21f7aa68bb
msgid "Master service endpoint: *Both private & public endpoints*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:503
#: 438fc996751a45dc83f622a7be7b0b57
msgid "Resource details (Totally flexible):"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:505
#: 82881e9b039e40f69500cf1a2329836a
msgid "Cluster name: *mycluster-tor01-rosibm*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:507
#: e4655503a8e446a990fce9151bd0e04c
msgid "Tags: *version:1*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:509
#: 9d952e71fd504eb997bccf525aa518f5
msgid ""
"After you create your cluster, you will be redirected to a page which "
"details how you can set up the CLI tools and access your cluster. Please "
"follow these instructions (or check the instructions `here "
"<https://github.com/mm-nasr/ros2_ibmcloud/blob/main/Kubernetes-Cluster-"
"Set-up.md>`__)and wait for the progress bar to show that the worker nodes"
" you created are ready by indicating *Normal* next to the cluster name. "
"You can also reach this screen from the IBM Cloud Console inside the "
"Kubernetes."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:518
#: 5da8d31e0fbf4de688cd682e584f230c
msgid "b) Deploying your Docker Image *Finally!*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:520
#: 60f78d8c715644a8a298ee07e463b44a
msgid ""
"Create a deployment configuration yaml file named *ros2-deployment.yaml* "
"using your favorite $EDITOR and insert the following in it:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:544
#: 380992cc7eba4c9283c273aa075b0399
msgid ""
"You should replace the tags shown between *\"<\" \">\"* as described "
"`here <https://cloud.ibm.com/docs/containers?topic=containers-"
"images#namespace>`__. The file in my case would look something like this:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:568
#: 8bc2f6371071415c8a4a3c5bb0100eba
msgid "Deploy the file using the following command"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:575
#: 28c019006503403386f640082f450721
msgid "Now your docker image is fully deployed on your cluster!"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:578
#: 56d9517a93a74c3c968d411ac965c527
msgid "Step 5: Using CLI for your Docker Image"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:580
#: e7342e391ce74e12969927e5bea5c0f9
msgid "Navigate to your cluster through the IBM Cloud console Kubernetes."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:582
#: 6b5c9d9ffa404084b71a38abf01f8833
msgid "Click on *Kubernetes dashboard* on the top right corner of the page."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:584
#: 3aec4a537b8c4b01acac46736d99e278
msgid ""
"You should now be able to see a full list of all the different parameters"
" of your cluster as well as its CPU and Memory Usage."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:587
#: 1d6e8da4111e46e4bbc8f509d3596219
msgid "Navigate to *Pods* and click on your deployment."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:589
#: b957db48558f4e90a15763eb2e7213ad
msgid "On the top right corner, click on *Exec into pod*"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:591
#: 44275c311f0b469199984797aec85d40
msgid ""
"Now you are inside your docker image! You can source your workspace (if "
"needed) and run ROS2! For example:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:600
#: 24a3693ec7ec4ffd86ca6f9628760b5a
msgid "Final Remarks"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Deploying-ROS-2-on-IBM-Cloud.rst:602
#: 1973e897a4e2477d960f2bbdbbf2152f
msgid ""
"At this point, you are capable of creating your own docker image using "
"ROS2 packages on github. It is also possible, with little changes to "
"utilize local ROS2 packages as well. This could be the topic of another "
"article. However, you are encouraged to check out the following "
"`Dockerfile <https://github.com/mm-"
"nasr/ros2_ibmcloud/tree/main/dockers/local_pkgs_docker>`__ which uses a "
"local copy of the demos repository. Similarly, you can use your own local"
" package."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:7
#: 69b53a5c92b7468b9b5c42e412029eb1
msgid "Using Eclipse Oxygen with ``rviz2`` [community-contributed]"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:14
#: 3359c59284a14dee9fe23cd22d6bd821
msgid "Setup"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:16
#: 0b79d91016c8411caf0ec659d7a313cb
msgid ""
"This tutorial assumes Eclipse Oxygen, git, and Egit "
"(http://www.eclipse.org/egit/download/) are already installed."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:18
#: e01d8a75645f4d259d644fb019522d50
msgid ""
"Throughout the tutorial we name the eclipse workspace the same name as "
"the ros2 package, but this is not required."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:20
#: be549dbf860a4126843782455d6babcf
msgid ""
"HINT: We use nested projects and one Eclipse Workspace for each ROS-2 "
"package."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:25
#: 3899d29b5b6040fcbe577c66e485450a
msgid "Create a C++ Project."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:34
#: 8f36000f25754880b2adae7a7866ac09
msgid ""
"Choose the ROS 2 package name as the Project Name. Choose a Makefile "
"Project and Other Toolchain."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:40
#: c6082dea79fc4a959adb2563c5d0bab0
msgid "Click on Finish"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:45
#: f1d3dd7dc3ba417f8a54003fd674b733
msgid "Our project should be shown in the \"Project Explorer\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:50
#: 60dd8f9090944d87999ac3b2c09aa625
msgid "Inside our Project create a folder called \"src\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:55
#: b07648effece47898856ad3403d7fed7
msgid "Import a git repository."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:60
#: c4a2f413bc40439785e5df388cd16fdf
msgid "Put in the repository URL."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:65
#: 2dbe3e03ff444965bc20d6f4748df68f
msgid ""
"IMPORTANT: Use the source folder of the project we created before as the "
"destination folder."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:67
#: ab27288a8fac4cdd8bb327b2220d8896
msgid ""
"HINT: If you ran into problems choosing the destination folder path, the "
"Eclipse Dialog needs a name in the name field."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:72
#: e3cb91ae417948fab278758b1e355761
msgid "Import using the new project wizard."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:77
#: 156a342ab9674afda6da8821774bd24e
msgid "Create a General->Project."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:82
#: 47290f6c9c094d49a831ce7b10b949fc
msgid ""
"Use the git repository name as the project name. IMPORTANT: Use the "
"folder we cloned the git repository in as the \"Location\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:88
#: 4ecd081192fc4dd09f1f2732ceb76cde
msgid ""
"The git project and the new project should be visible in the Project "
"Explorer view. The same files are listed multiple times, but only one "
"project is linked with Egit."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:94
#: 4943902cc03f4f0299ec6191fbadbed0
msgid "Repeat this procedure again. Import git repository pluginlib."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:100
#: bbb1c87618c747eea496cbc5fe8e31a6
msgid ""
"IMPORTANT: Use a folder inside the source folder as "
"\"Destination->Directory\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:105
#: 63142d458c6044d9844a12d8a43d3f70
msgid ""
"IMPORTANT: Use the folder we cloned the git repository in as the location"
" for the new project."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:110
#: cb14e4d9514e4cc996fbd337771bc899
msgid "Run the same procedure with the tinyxml2_vendor git repository."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:115
#: 23a267b8a30740d192cceb362b365c7b
msgid "IMPORTANT: Again use a folder inside the source folder."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:120
#: 01f637a11dfc4e45b86e8627937d397a
msgid ""
"IMPORTANT: Use the location of the folder we cloned as the new project "
"folder."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:125
#: 69ab55c0226c4b6d9b989fcc851d1e9b
msgid "Now all four Projects should be visible in the Project Explorer view."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:130
#: ad2e561e478c4bb1ab47715dd9ad045e
msgid ""
"Clicking in the top right cornder for the Project Explorer view allows us"
" to change the Project Presentation to Hierarchical view. Now it looks "
"like a ROS-2 project as it is on the hard drive. But this view loses the "
"linkage to Egit, so use the Flat Project Presentation. The Egit linkage "
"is good if you want to see e.g. which author wrote which code-line, etc."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:138
#: 6daadd7dd2cb4b1a9292438992351a53
msgid "Go to \"C/C++ build\"-section and put \"ament\" into \"Build command\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:143
#: 3215b719ea84446e9bc5a8836cdc5b37
msgid ""
"Go to \"Behavior\" tab and unselect \"clean\" and put \"build\" into "
"Build textbox."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:148
#: 6882dc155e6b4da1892f87c75c8d5cba
msgid ""
"Before \"Build project\" will work, we need to close Eclipse. Open a "
"shell and source the ROS-2 setup.bash file, then cd into the directory of"
" the eclipse project (here: /home/ubu/rviz2_ws/rviz2_ws) and start "
"Eclipse from inside this directory."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:154
#: 61bf0b0430634f0988ecc8634e5bb270
msgid ""
"Now code completion, egit annotations, eclipse C/C++ Tools, etc. should "
"all work."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:160
#: afc2dff87dd24ffda180dffb5ab8c689
msgid "Eclipse-indexer"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:162
#: e0f7226849354780ad1d68ef7d2aebc8
msgid ""
"Opening the main.cpp of rviz2 may show a lot of \"unresolved inclusion\" "
"warnings. To fix this, go to Project->Properties->C++ General->Path and "
"Symbols. Click on the \"References\" tab and select \"ros2_ws\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:170
#: de25886ba2f24e0a945b71679a338019
msgid ""
"Go to C/C++-General->Path-and-Symbols, click on the \"Source locations\" "
"tab and click on \"Link folder\". Choose the location of qt5 includes."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:177
#: 60bfd2c4b90749d69e402384c93c1cdb
msgid ""
"The next image should be shown. It is a good idea to add excludes to the "
"source locations, so that some directories (like \"Build\" and "
"\"Install\") don't get indexed."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:184
#: 8f6e7fce303d412a9e39f6fd11fde6c3
msgid ""
"Go to C++General->Preprocessor includes, select \"CDT GCC Built in "
"compiler settings [Shared]\" and enter in the \"command to get compiler "
"specs\" text box the following:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:194
#: d2ffab7ca61944e5956a2f5bf31f3dc1
msgid ""
"Go to \"C/C++-General->Indexer\" and select the following in the image. "
"E.g \"index unused headers as c files\" to resolve e.g. QApplication, "
"because the QApplication headers content is only \"#include "
"\"qapplication.h\"."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:201
#: 6a45d2c088a54d96a7278bbb92e18e7f
msgid ""
"After running the indexer (which happens later, so you will see this also"
" later), you can see what it added"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:207
#: 25f67008dce64e458b2d3e0670234065
msgid ""
"After that right-click on the rviz2 project and select "
"\"Indexer->Rebuild\", which will start rebuilding the index (there is an "
"icon in the lower right showing progress). Once the index is finished "
"rebuilding, it should be able to resolve all includes."
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:215
#: 1174101b55f84f2580de0c51110d1528
msgid "Debugging with eclipse"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:217
#: 2d88b29724b0404db9b4c309ab1a87c4
msgid "Go to \"C/C++-Build\" and add to the build command:"
msgstr ""

#: ../../source/Tutorials/Miscellaneous/Eclipse-Oxygen-with-ROS-2-and-rviz2.rst:227
#: f7e49a2cc39949dcb29308ec0a93a57d
msgid ""
"Then in eclipse go to \"Run->Debug Configurations\" and add the following"
" and click on \"Debug\"."
msgstr ""

