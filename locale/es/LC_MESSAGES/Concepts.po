# Archivo de traducción al español para la documentación de ROS 2.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# Cristian Chitiva <cychitivav@unal.edu.co>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-06 22:03+0000\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Concepts.rst:2 64c2a954d0314c57887a3d9a36730300
msgid "Concepts"
msgstr ""

#: ../../source/Concepts.rst:4 45a6d39e50dc4a3cbeaf22f1c68bac54
msgid ""
"Conceptual overviews provide relatively high-level, general background "
"information about key aspects of ROS 2."
msgstr ""

#: ../../source/Concepts.rst:15 c083c4eb483941e183dd38269e111bff
msgid "Related Content"
msgstr ""

#: ../../source/Concepts.rst:17 b57fe306a3c14e5f9c5fa443016c411d
msgid ""
":doc:`See the ROS 2 citations <Citations>` for more explanation of "
"concepts and citable resources."
msgstr ""

#: ../../source/Concepts.rst:19 cf17038242a3474388e7e525d35bd771
msgid ""
"For a brief video introduction to ROS 2, see this community contributed "
"content:"
msgstr ""

#: ../../source/Concepts.rst:21 1374cb7f42bc4e2782eab41986eb0bfb
msgid ""
"`Getting started with ROS Part 1: Nodes, Parameters and Topics "
"<https://youtu.be/46TPAKXBOF8>`_"
msgstr ""

#: ../../source/Concepts.rst:22 91b31d43af1249afa6afe3b682cde9af
msgid ""
"`Getting started with ROS Part 2: Services and Actions "
"<https://youtu.be/keZAJ83eEoM>`_"
msgstr ""

#: ../../source/Concepts/Advanced.rst:2 d23359d216c84e0bb2c2cd163f3cdd79
msgid "Advanced Concepts"
msgstr ""

#: ../../source/Concepts/Advanced.rst:4 ccfe5f151a564f408e45387078a3f0c3
msgid ""
"These conceptual documents are intended for developers who plan to modify"
" or contribute to the ROS 2 core."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:6
#: 0fb2f9344ecc4f80b15fa10e196c03d7
msgid "The build system"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:9
#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:9
#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:9
#: ../../source/Concepts/Basic/About-Actions.rst:5
#: ../../source/Concepts/Basic/About-Client-Libraries.rst:12
#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:11
#: ../../source/Concepts/Basic/About-Interfaces.rst:10
#: ../../source/Concepts/Basic/About-Parameters.rst:10
#: ../../source/Concepts/Basic/About-Services.rst:5
#: ../../source/Concepts/Basic/About-Topics.rst:5
#: ../../source/Concepts/Intermediate/About-Composition.rst:9
#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:9
#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:10
#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:9
#: ../../source/Concepts/Intermediate/About-Executors.rst:9
#: ../../source/Concepts/Intermediate/About-Logging.rst:10
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:10
#: ../../source/Concepts/Intermediate/About-RQt.rst:11
#: ../../source/Concepts/Intermediate/About-Security.rst:9
#: ../../source/Concepts/Intermediate/About-Tf2.rst:9
#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:10
#: 0059dba69e8741ca9e0de84d03b3424d 073efdb55f3847f8ab5095600ff26005
#: 125268621ea54cf3833670a93065eb68 1579bc90144e4b6ea4f734e6df7ece15
#: 261429d3305f44f1bc6df757726cebb3 3fdcd5a49bd14b54be70f2aacf8881ab
#: 61b4921cc32f43a99965cfd75fb1ba40 6ec66d5ef11a46c395c74d6f21747bae
#: 723297e132cc4e90b3989b015d8bf489 9092db32234541daa8c9de222672a783
#: 9b2fa6d330e247bfa3104539b29d137d 9f7850357c7a434ab05150a1d78210e7
#: a538d9fcb322421eae14f43da09bf106 b17a561d0824475a8a85f2b05c9bd62b
#: b258bd2f9db5458cb55b32c17a10adf5 b9ea8e413d3347399b29a9ab11812ac7
#: c2ffec6d27074adcaa67c900fcfa03ce c5af0f115c9e414eacae5eb59093e234
#: cd0bb5fd8a1b4cef92ba579ea6913ac5 e71bbdc0789a4b5eb8cd01d5de17cb23
#: fe4ff6b56aa34ea48a6f8c519ef05756
msgid "Table of Contents"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:13
#: 0b6c8359cf8f4ff5b74a23af72b4129f
msgid ""
"The build system is what allows developers to build their ROS 2 code as "
"needed. ROS 2 relies heavily on the division of code into packages, with "
"each package containing a manifest file (``package.xml``). This manifest "
"file contains essential metadata about the package, including its "
"dependencies on other packages. This manifest is required for the meta-"
"build tool to function."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:18
#: acfb0e64789241b2a393b277ebb6abed
msgid "The ROS 2 build system consists of 3 major concepts."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:21
#: fb10385be37f46818729c4a51fe110be
msgid "Build tool"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:23
#: 6420766fc9c64926b045b4ca28027f5b
msgid ""
"This is the software that controls the compilation and testing of a "
"single package. In ROS 2 this is usually CMake for C++, and setuptools "
"for Python, but other build tools are supported."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:27
#: 42e627b742e344278c8dcf6c6aa79d71
msgid "Build helpers"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:29
#: 9c0ab1915fdf419486d7dfb34a9ee4ae
msgid ""
"These are helper functions that hook into the build tool to developer "
"experience. ROS 2 packages typically rely on the ``ament`` series of "
"packages for this. ``ament`` consists of a few important repositories "
"which are all in the `GitHub organization <https://github.com/ament>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:34
#: 8b620eed3c9e4e15a8b737f383297dce
msgid "The ``ament_package`` package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:36
#: aded19fa94f64ab58a6f9527f9b2eef1
msgid ""
"Located on |GitHub|_ at `ament/ament_package "
"<https://github.com/ament/ament_package>`_, this repository contains a "
"single :term:`ament Python package` that provides various utilities for "
"|ament packages|, e.g. templates for environment hooks."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:38
#: d154f40376f54f7393599ab5cfe5181c
msgid ""
"All |ament packages| must contain a single :term:`package.xml` file at "
"the root of the package regardless of their underlying build system. The "
":term:`package.xml` \"manifest\" file contains information that is "
"required in order to process and operate on a |package|. This |package| "
"information includes things like the |package|'s name, which is globally "
"unique, and the package's dependencies. The :term:`package.xml` file also"
" serves as the marker file which indicates the location of the |package| "
"on the file system."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:43
#: 2458cc1b4fc34759a5e59bf8820bac5c
msgid ""
"Parsing of the :term:`package.xml` files is provided by ``catkin_pkg`` "
"(as in ROS 1), while functionality to locate |packages| by searching the "
"file system for these :term:`package.xml` files is provided by build "
"tools such as ``colcon``."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:46
#: 1697cd27fb5f44c18c8393f9d498113e
msgid "package.xml"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:48
#: 714e243b729549f49c3db7aecf57a7fa
msgid ""
"Package manifest file which marks the root of a :term:`package` and "
"contains meta information about the :term:`package` including its name, "
"version, description, maintainer, license, dependencies, and more. The "
"contents of the manifest are in machine readable XML format and the "
"contents are described in the |REPs| `127 "
"<http://www.ros.org/reps/rep-0127.html>`_ and `140 "
"<http://www.ros.org/reps/rep-0140.html>`_, with the possibility of "
"further modifications in future |REPs|."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:51
#: 2bc916f17dfe4fd4a960ae9895681aeb
msgid ""
"So anytime some |package| is referred to as an :term:`ament package`, it "
"means that it is a single unit of software (source code, build files, "
"tests, documentation, and other resources) which is described using a "
":term:`package.xml` manifest file."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:54
#: 2f70faab42714eb09ea8096d7e1f58df
msgid "ament package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:56
#: 027a5a77a7864a54be0d65eb27dbce99
msgid ""
"Any |package| which contains a :term:`package.xml` and follows the "
"packaging guidelines of ``ament``, regardless of the underlying build "
"system."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:58
#: 4b9e37f7af984d308e05600794be834d
msgid ""
"Since the term :term:`ament package` is build system agnostic, there can "
"be different kinds of |ament packages|, e.g. :term:`ament CMake package`,"
" :term:`ament Python package`, etc."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:60
#: 036a0cb480624e2f816a4e65f32d8c5b
msgid ""
"Here is a list of common package types that you might run into in this "
"software stack:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:63
#: 95c970e82a174cbb86895db68cfd539b
msgid "CMake package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:65
#: 1ac9bee350024d43bfc6c8e601e9f0e3
msgid ""
"Any |package| containing a plain CMake project and a :term:`package.xml` "
"manifest file."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:66
#: f6d83819459f41d4903a690d5323aebc
msgid "ament CMake package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:68
#: 270fabab88b04728ac2ec24a7ab19d97
msgid ""
"A :term:`CMake package` that also follows the ``ament`` packaging "
"guidelines."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:69
#: e28fe91f959945949b8fc262f4fd4822
msgid "Python package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:71
#: b76b2bd1b8a04306800f918b55b5927a
msgid ""
"Any |package| containing a `setuptools "
"<https://pypi.org/project/setuptools/>`_ based Python project and a "
":term:`package.xml` manifest file."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:72
#: 4842063e0b134485b59815f97ec16cfc
msgid "ament Python package"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:74
#: b3d6be8b4fc645faad3404a03a51685b
msgid ""
"A :term:`Python package` that also follows the ``ament`` packaging "
"guidelines."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:77
#: 8d652edcc49540e7ad0eac5fc8f01d36
msgid "The ``ament_cmake`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:79
#: 59c3d185ca634506a8d5055dffa4560b
msgid ""
"Located on |GitHub|_ at `ament/ament_cmake "
"<https://github.com/ament/ament_cmake>`_, this repository contains many "
"\"ament CMake\" and pure CMake packages which provide the infrastructure "
"in CMake that is required to create \"ament CMake\" packages. In this "
"context \"ament CMake\" packages means: ``ament`` packages that are built"
" using CMake. So the |packages| in this repository provide the necessary "
"CMake functions/macros and CMake Modules to facilitate creating more "
"\"ament CMake\" (or ``ament_cmake``) packages. Packages of this type are "
"identified with the ``<build_type>ament_cmake</build_type>`` tag in the "
"``<export>`` tag of the :term:`package.xml` file."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:84
#: 7f3d4f1fe5fb449abceafb6d0f2d88aa
msgid ""
"The |packages| in this repository are extremely modular, but there is a "
"single \"bottleneck\" |package| called ``ament_cmake``. Anyone can depend"
" on the ``ament_cmake`` |package| to get all of the aggregate "
"functionality of the |packages| in this repository. Here a list of the "
"|packages| in the repository along with a short description:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:88
#: 6f8f39d986f24bbcb407498da5bd156c
msgid "``ament_cmake``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:90
#: 4c11725d6f9c4072b4efc708c75134b9
msgid ""
"aggregates all other |packages| in this repository, users need only to "
"depend on this"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:92
#: 4d0df91036ab4434a8c83b89fa817137
msgid "``ament_cmake_auto``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:94
#: 9fcb07390c104b43a91334d853d86c62
msgid ""
"provides convenience CMake functions which automatically handle a lot of "
"the tedious parts of writing a |package|'s ``CMakeLists.txt`` file"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:96
#: da38267549384a9c97ee49fe437a3d6a
msgid "``ament_cmake_core``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:98
#: 8347e20d710f4f668404a7fef77347f8
msgid ""
"provides all built-in core concepts for ``ament``, e.g. environment "
"hooks, resource indexing, symbolic linking install and others"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:100
#: 809cfb5b547b469184af675835ea8393
msgid "``ament_cmake_gmock``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:102
#: fb11a2fca72a4f81aab0bbd23e784fa8
msgid "adds convenience functions for making gmock based unit tests"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:104
#: 012f7343693142e5a714d39c27e1d352
msgid "``ament_cmake_gtest``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:106
#: 5d5cc6a8958642d288dfd1498aa223f9
msgid "adds convenience functions for making gtest based automated tests"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:108
#: 39799a7ff8194e5aafef979341c01144
msgid "``ament_cmake_nose``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:110
#: f1171807236a444ea2594d59cf030817
msgid ""
"adds convenience functions for making nosetests based python automated "
"tests"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:112
#: ea99e62d609b4a3bbf926608c067256e
msgid "``ament_cmake_python``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:114
#: 0805420453ee43b3ab99ee9057504908
msgid "provides CMake functions for |packages| that contain Python code"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:115
#: 01878ad971384a988515c68667c4cc0a
msgid ""
"see the :doc:`ament_cmake_python user documentation <../../How-To-Guides"
"/Ament-CMake-Python-Documentation>`"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:117
#: 36fac41201f945de8db58bd81554b8d3
msgid "``ament_cmake_test``"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:119
#: 6910d93ed4cf43c8b62749f2c31227fc
msgid ""
"aggregates different kinds of tests, e.g. gtest and nosetests, under a "
"single target using `CTest "
"<https://cmake.org/Wiki/CMake/Testing_With_CTest>`_"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:121
#: ae5a56eed9524d8da744565eb1d24019
msgid ""
"The ``ament_cmake_core`` |package| contains a lot of the CMake "
"infrastructure that makes it possible to cleanly pass information between"
" |packages| using conventional interfaces. This makes the |packages| have"
" more decoupled build interfaces with other |packages|, promoting their "
"reuse and encouraging conventions in the build systems of different "
"|packages|. For instance, it provides a standard way to pass include "
"directories, libraries, definitions, and dependencies between |packages| "
"so that consumers of this information can access this information in a "
"conventional way."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:125
#: 54cb168e7ace474b9ca86007b9979cba
msgid ""
"The ``ament_cmake_core`` |package| also provides features of the "
"``ament`` build system like symbolic link installation, which allows you "
"to symbolically link files from either the source space or the build "
"space into the install space rather than copying them. This allows you to"
" install once and then edit non-generated resources like Python code and "
"configuration files without having to rerun the install step for them to "
"take effect. This feature essentially replaces the \"devel space\" from "
"``catkin`` because it has most of the advantages with few of the "
"complications or drawbacks."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:129
#: f43c4e36093f434c828248f684bff4a2
msgid ""
"Another feature provided by ``ament_cmake_core`` is the |package| "
"resource indexing which is a way for |packages| to indicate that they "
"contain a resource of some type. The design of this feature makes it much"
" more efficient to answer simple questions like what |packages| are in "
"this prefix (e.g. ``/usr/local``) because it only requires that you list "
"the files in a single possible location under that prefix. You can read "
"more about this feature in the `design docs "
"<https://github.com/ament/ament_cmake/blob/{REPOS_FILE_BRANCH}/ament_cmake_core/doc/resource_index.md>`_"
" for the resource index."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:133
#: d112f0c444f6498eac29c24d28b7e06f
msgid ""
"Like ``catkin``, ``ament_cmake_core`` also provides environment setup "
"files and |package| specific environment hooks. The environment setup "
"files, often named something like ``setup.bash``, are a place for "
"|package| developers to define changes to the environment that are needed"
" to utilize their |package|. The developers are able to do this using an "
"\"environment hook\" which is basically an arbitrary bit of shell code "
"that can set or modify environment variables, define shell functions, "
"setup auto-completion rules, etc... This feature is how, for example, ROS"
" 1 set the ``ROS_DISTRO`` environment variable without ``catkin`` knowing"
" anything about the ROS distribution."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:139
#: 46b2695cc1284cabb4dbcfb1217fcbcb
msgid "The ``ament_lint`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:141
#: d36ffbcdab1a424caf43fa252adbd5e9
msgid ""
"Located on |GitHub|_ at `ament/ament_lint "
"<https://github.com/ament/ament_lint>`_, this repository provides several"
" |packages| which provide linting and testing services in a convenient "
"and consistent manner. Currently there are |packages| to support C++ "
"style linting using ``uncrustify``, static C++ code checks using "
"``cppcheck``, checking for copyright in source code, Python style linting"
" using ``pep8``, and other things. The list of helper packages will "
"likely grow in the future."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:146
#: 2fdc4142be844c299e6a409cec188ca5
msgid "Meta-build tool"
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:148
#: 02fa21521ba74f64aa0ee3b54fdd58e2
msgid ""
"This is a piece of software that knows how to topologically order a group"
" of packages, and build or test them in the correct dependency order. "
"This software will call into the Build Tool to do the actual work of "
"compiling, testing, and installing the package."
msgstr ""

#: ../../source/Concepts/Advanced/About-Build-System.rst:151
#: 516746fdf58847d0a0765928620602c7
msgid ""
"In ROS 2, the tool named `colcon "
"<https://colcon.readthedocs.io/en/released/>`__ is used for this."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:6
#: ef375fed42784df4bd1b7d148d68a257
msgid "Internal ROS 2 interfaces"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:13
#: cc6fd844d59f4097ba93ec86b59a994d
msgid ""
"The internal ROS interfaces are public C |APIs| that are intended for use"
" by developers who are creating |client libraries| or adding a new "
"underlying middleware, but are not intended for use by typical ROS users."
" The ROS |client libraries| provide the user facing |APIs| that most ROS "
"users are familiar with, and may come in a variety of programming "
"languages."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:17
#: 93df1c0fef4c49c1abaee4c6c2f3aae8
msgid "Internal API Architecture Overview"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:19
#: 5289a0fa71094edea1860a3acc65c657
msgid "There are two main internal interfaces:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:21
#: ae83ee6435454f669785af95d0e219ae
msgid "the ROS middleware interface (``rmw`` |API|)"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:22
#: eb8bb8ce72284ed5b70fd519d40463cd
msgid "the ROS client library interface (``rcl`` |API|)"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:24
#: 812aa67bd611463c8b9ddc339f414a54
msgid ""
"The ``rmw`` |API| is the interface between the ROS 2 software stack and "
"the underlying middleware implementation. The underlying middleware used "
"for ROS 2 is either a DDS or RTPS implementation, and is responsible for "
"discovery, publish and subscribe mechanics, request-reply mechanics for "
"services, and serialization of message types."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:27
#: 678c4ce7da0744d88512352da35b58d9
msgid ""
"The ``rcl`` |API| is a slightly higher level |API| which is used to "
"implement the |client libraries| and does not touch the middleware "
"implementation directly, but rather does so through the ROS middleware "
"interface (``rmw`` |API|) abstraction."
msgstr ""

#: 0a8a23e5112f4a6f802c56ce0b770907
msgid "ros2 software stack"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:32
#: 696d8f1af9194859b6856be51fb1d40c
msgid ""
"As the diagram shows, these |APIs| are stacked such that the typical ROS "
"user will use the |client library| |API|, e.g. ``rclcpp``, to implement "
"their code (executable or library). The implementation of the |client "
"libraries|, e.g. ``rclcpp``, use the ``rcl`` interface which provides "
"access to the ROS graph and graph events. The ``rcl`` implementation in "
"turn uses the ``rmw`` |API| to access the ROS graph. The purpose of the "
"``rcl`` implementation is to provide a common implementation for more "
"complex ROS concepts and utilities that may be used by various |client "
"libraries|, while remaining agnostic to the underlying middleware being "
"used. The purpose of the ``rmw`` interface is to capture the absolute "
"minimum middleware functionality needed to support ROS's client "
"libraries. Finally, the implementation of the ``rmw`` |API| is provided "
"by a middleware implementation specific |package|, e.g. "
"``rmw_fastrtps_cpp``, the library of which is compiled against vendor "
"specific DDS interfaces and types."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:39
#: 6cff3cf0595448d48e22a2d57f09d465
msgid ""
"In the diagram above there is also a box labeled ``ros_to_dds``, and the "
"purpose of this box is to represent a category of possible packages which"
" allow the user to access DDS vendor specific objects and settings using "
"the ROS equivalents. One of the goals of this abstraction interface is to"
" completely insulate the ROS user space code from the middleware being "
"used, so that changing DDS vendors or even middleware technology has a "
"minimal impact on the users code. However, we recognize that on occasion "
"it is useful to reach into the implementation and manually adjust "
"settings despite the consequences that might have. By requiring the use "
"of one of these packages in order to access the underlying DDS vendor's "
"objects, we can avoid exposing vendor specific symbols and headers in the"
" normal interface. It also makes it easy to see what code is potentially "
"violating the vendor portability by inspecting the package's dependencies"
" to see if one of these ``ros_to_dds`` packages are being used."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:48
#: 1cf50142cfc6450ab6fdeeb561d855ad
msgid "Type Specific Interfaces"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:50
#: 9e0ec88ada524eef959170b0770c43ea
msgid ""
"All along the way there are some parts of the |APIs| that are necessarily"
" specific to the message types being exchanged, e.g. publishing a message"
" or subscribing to a topic, and therefore require generated code for each"
" message type. The following diagram layouts the path from user defined "
"``rosidl`` files, e.g. ``.msg`` files, to the type specific code used by "
"the user and system to perform type specific functions:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:56
#: 3f161990cedf41f59fd9ced969a322a2
msgid "ros2 idl static type support stack"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:56
#: 3b0ce7eec9ce44eab68c08a99c348a5e
msgid ""
"Figure: flow chart of \"static\" type support generation, from ``rosidl``"
" files to user facing code."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:58
#: 0e79b49b78914a4f89341225e6d82ef4
msgid ""
"The right hand side of the diagram shows how the ``.msg`` files are "
"passed directly to language specific code generators, e.g. "
"``rosidl_generator_cpp`` or ``rosidl_generator_py``. These generators are"
" responsible for creating the code that the user will include (or import)"
" and use as the in-memory representation of the messages that were "
"defined in the ``.msg`` files. For example, consider the message "
"``std_msgs/String``, a user might use this file in C++ with the statement"
" ``#include <std_msgs/msg/string.hpp>``, or they might use the statement "
"``from std_msgs.msg import String`` in Python. These statements work "
"because of the files generated by these language specific (but middleware"
" agnostic) generator packages."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:63
#: 11bab32cd5a24e569fb1f8164e5788c7
msgid ""
"Separately, the ``.msg`` files are used to generate type support code for"
" each type. In this context, type support means: meta data or functions "
"that are specific to a given type and that are used by the system to "
"perform particular tasks for the given type. The type support for a given"
" message might include things like a list of the names and types for each"
" field in the message. It might also contain a reference to code that can"
" perform particular tasks for that type, e.g. publish a message."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:69
#: 12d7d69e416b466296f7d0c7d42d2325
msgid "Static Type Support"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:71
#: e7b6e56065084621a1fc2c71f29c0923
msgid ""
"When the type support references code to do particular functions for a "
"specific message type, that code sometimes needs to do middleware "
"specific work. For example, consider the type specific publish function, "
"when using \"vendor A\" the function will need to call some of \"vendor "
"A\"'s |API|, but when using \"vendor B\" it will need to call \"vendor "
"B\"'s |API|. To allow for middleware vendor specific code, the user "
"defined ``.msg`` files may result in the generation of vendor specific "
"code. This vendor specific code is still hidden from the user through the"
" type support abstraction, which is similar to how the \"Private "
"Implementation\" (or Pimpl) pattern works."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:77
#: e1cfe36a30474167b22a144621caf562
msgid "Static Type Support with DDS"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:79
#: 20b7d191d3f04e0e8a4e518e907969da
msgid ""
"For middleware vendors based on DDS, and specifically those which "
"generate code based on the OMG IDL files (``.idl`` files), the user "
"defined ``rosidl`` files (``.msg`` files) are converted into equivalent "
"OMG IDL files (``.idl`` files). From these OMG IDL files, vendor specific"
" code is created and then used within the type specific functions which "
"are referenced by the type support for a given type. The above diagram "
"shows this on the left hand side, where the ``.msg`` files are consumed "
"by the ``rosidl_dds`` package to produce ``.idl`` files, and then those "
"``.idl`` files are given to language specific and DDS vendor specific "
"type support generation packages."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:83
#: 6119a29b894d46a0aae88475ee70108e
msgid ""
"For example, consider the Fast DDS implementation, which has a package "
"called ``rosidl_typesupport_fastrtps_cpp``. This package is responsible "
"for generating code to handle things like converting a C++ message object"
" into a serialized octet buffer to be written over the network. This "
"code, while specific to Fast DDS, is still not exposed to the user "
"because of the abstraction in the type support code."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:88
#: d18249a3ef2945a1aab2faec1d73d03f
msgid "Dynamic Type Support"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:90
#: 0e54bb773d1f4b3fad40101502ff83aa
msgid ""
"Another way to implement type support is to have generic functions for "
"things like publishing to a topic, rather than generating a version of "
"the function for each message type. In order to accomplish this, this "
"generic function needs some meta information about the message type being"
" published, things like a list of field names and types in the order in "
"which they appear in the message type. Then to publish a message, you "
"call a generic publish function and pass a message to be published along "
"with a structure which contains the necessary meta data about the message"
" type. This is referred to as \"dynamic\" type support, as opposed to "
"\"static\" type support which requires generated versions of a function "
"for each type."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:98
#: 553c087fa8ec45b3b071dd70c75423b0
msgid "ros2 idl dynamic type support stack"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:98
#: 6d620783bb7e412c80e630defca936c2
msgid ""
"Figure: flow chart of \"dynamic\" type support generation, from "
"``rosidl`` files to user facing code."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:100
#: a60a8864fc1b48be84d663ab4ed88336
msgid ""
"The above diagram shows the flow from user defined ``rosidl`` files to "
"generated user facing code. It is very similar to the diagram for static "
"type support, and differs only in how the type support is generated which"
" is represented by the left hand side of the diagram. In dynamic type "
"support the ``.msg`` files are converted directly into user facing code."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:104
#: 6071d8c7839e4dc6a463c0c2cab8b407
msgid ""
"This code is also middleware agnostic, because it only contains meta "
"information about the messages. The function to actually do the work, "
"e.g. publishing to a topic, is generic to the message type and will make "
"any necessary calls to the middleware specific |APIs|. Note that rather "
"than dds vendor specific packages providing the type support code, which "
"is the case in static type support, this method has middleware agnostic "
"package for each language, e.g. ``rosidl_typesupport_introspection_c`` "
"and ``rosidl_typesupport_introspection_cpp``. The ``introspection`` part "
"of the package name refers to the ability to introspect any message "
"instance with the generated meta data for the message type. This is the "
"fundamental capability that allows for generic implementations of "
"functions like \"publish to a topic\"."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:110
#: 073c7a7b7148451ba354788f0ea26de5
msgid ""
"This approach has the advantage that all generated code is middleware "
"agnostic, which means it can be reused for different middleware "
"implementations, so long as they allow for dynamic type support. It also "
"results in less generated code, which reduces compile time and code size."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:113
#: bd7b276ac9274dc4bf98df1b6df054bf
msgid ""
"However, dynamic type support requires that the underlying middleware "
"support a similar form of dynamic type support. In the case of DDS the "
"DDS-XTypes standard allows for publishing of messages using meta "
"information rather than generated code. DDS-XTypes, or something like it,"
" is required in the underlying middleware in order to support dynamic "
"type support. Also, this approach to type support is normally slower than"
" the static type support alternative. The type specific generated code in"
" static type support can be written to be more efficient as it does not "
"need to iterate over the message type's meta data to perform things like "
"serialization."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:120
#: 390abf5b54074b66b8525681b6e98b6e
msgid "The ``rcl`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:122
#: 5b63faac4b9349ca8e3a3c12b009fec2
msgid ""
"The ROS Client Library interface (``rcl`` |API|) can be used by |client "
"libraries| (e.g. ``rclc``, ``rclcpp``, ``rclpy``, etc.) in order to avoid"
" duplicating logic and features. By reusing the ``rcl`` |API|, client "
"libraries can be smaller and more consistent with each other. Some parts "
"of the client library are intentionally left out of the ``rcl`` |API| "
"because the language idiomatic method should be used to implement those "
"parts of the system. A good example of this is the execution model, which"
" ``rcl`` does not address at all. Instead the client library should "
"provide a language idiomatic solution like ``pthreads`` in C, "
"``std::thread`` in C++11, and ``threading.Thread`` in Python. Generally "
"the ``rcl`` interface provides functions that are not specific to a "
"language pattern and are not specific to a particular message type."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:129
#: 62acd2b6ce8d46a9a0d676b943b2c8d9
msgid ""
"The ``rcl`` |API| is located in the `ros2/rcl "
"<https://github.com/ros2/rcl>`_ repository on |GitHub|_ and contains the "
"interface as C headers. The ``rcl`` C implementation is provided by the "
"``rcl`` |package| in the same repository. This implementation avoids "
"direct contact with the middleware by instead using the ``rmw`` and "
"``rosidl`` |APIs|."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:133
#: 4464a71d6d6141f7a57aead4926ed334
msgid ""
"For a complete definition of the ``rcl`` |API|, see `the rcl docs "
"<http://docs.ros.org/en/{DISTRO}/p/rcl/>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:136
#: 603059b5ba174e3698aa5e5bd4417e84
msgid "The ``rmw`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:138
#: f7f2e4de4bd046df9ae2092cadac624c
msgid ""
"The ROS middleware interface (``rmw`` |API|) is the minimal set of "
"primitive middleware capabilities needed to build ROS on top. Providers "
"of different middleware implementations must implement this interface in "
"order to support the entire ROS stack on top. Currently all of the "
"middleware implementations are for different DDS vendors."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:142
#: a2f82ffcae134753a282bacd3e107171
msgid ""
"The ``rmw`` |API| is located in the `ros2/rmw "
"<https://github.com/ros2/rmw>`_ repository. The ``rmw`` |package| "
"contains the C headers which define the interface, the implementation of "
"which is provided by the various |packages| of rmw implementations for "
"different DDS vendors."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:145
#: 94cdca596c954d7fbacdc2a463aec2c0
msgid ""
"For a definition of the ``rmw`` |API|, see `the rmw docs "
"<http://docs.ros.org/en/{DISTRO}/p/rmw/>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:149
#: 312e53dbc65444438a064cfc74d854a2
msgid "The ``rosidl`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:151
#: 7aa7be972e064a2d9bf29b1826772c98
msgid ""
"The ``rosidl`` |API| consists of a few message related static functions "
"and types along with a definition of what code should be generated by "
"messages in different languages. The generated message code specified in "
"the |API| will be language specific, but may or may not reuse generated "
"code for other languages. The generated message code specified in the "
"|API| contains things like the message data structure, functions for "
"construction, destruction, etc. The |API| will also implement a way to "
"get the type support structure for the message type, which is used when "
"publishing or subscribing to a topic of that message type."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:156
#: d1f7cde87cd9426baeed65203039ade1
msgid ""
"There are several repositories that play a role in the ``rosidl`` |API| "
"and implementation."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:158
#: 3e8216d1b1e94da6b00a149ef32d01de
msgid ""
"The ``rosidl`` repository, located on |GitHub|_ at `ros2/rosidl "
"<https://github.com/ros2/rosidl>`_, defines the message IDL syntax, i.e. "
"syntax of ``.msg`` files, ``.srv`` files, etc., and contains |packages| "
"for parsing the files, for providing CMake infrastructure to generate "
"code from the messages, for generating implementation agnostic code "
"(headers and source files), and for establishing the default set of "
"generators. The repository contains these |packages|:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:161
#: 7030d8f5ab1a4ced9f45ac4c891fa07a
msgid ""
"``rosidl_cmake``: provides CMake functions and modules for generating "
"code from ``rosidl`` files, e.g. ``.msg`` files, ``.srv`` files, etc."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:162
#: f2b67259a5474ddab34d55e6e36427f7
msgid ""
"``rosidl_default_generators``: defines the list of default generators "
"which ensures that they are installed as dependencies, but other injected"
" generators can also be used."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:163
#: 9aefee32e5d249fa847e35e5707b7dfd
msgid ""
"``rosidl_generator_c``: provides tools to generate C header files "
"(``.h``) for ``rosidl`` files."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:164
#: a26cf69cada5448a837befc2854fcb3b
msgid ""
"``rosidl_generator_cpp``: provides tools to generate C++ header files "
"(``.hpp``) for ``rosidl`` files."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:165
#: 53d7908fd5284297b868f656bdee0f93
msgid ""
"``rosidl_generator_py``: provides tools to generate Python modules for "
"``rosidl`` files."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:166
#: 3f5bf65fdbdb45bcbb6ec5ab468cd895
msgid "``rosidl_parser``: provides Python |API| for parsing ``rosidl`` files."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:168
#: 2bcdbfcc90c942f58224361d3d013833
msgid ""
"Generators for other languages, e.g. ``rosidl_generator_java``, are "
"hosted externally (in different repositories) but would use the same "
"mechanism that the above generators use to \"register\" themselves as a "
"``rosidl`` generator."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:170
#: 7f29a9f626824b5fbb15386210c0e160
msgid ""
"In addition to the aforementioned |packages| for parsing and generating "
"headers for the ``rosidl`` files, the ``rosidl`` repository also contains"
" |packages| concerned with \"type support\" for the message types defined"
" in the files. Type support refers to the ability to interpret and "
"manipulate the information represented by ROS message instances of "
"particular types (publishing the messages, for example). Type support can"
" either be provided by code that is generated at compile time or it can "
"be done programmatically based on the contents of the ``rosidl`` file, "
"e.g. the ``.msg`` or ``.srv`` file, and the data received, by "
"introspecting the data. In the case of the latter, where type support is "
"done through runtime interpretation of the messages, the message code "
"generated by ROS 2 can be agnostic to the rmw implementation. The "
"packages that provide this type support through introspection of the data"
" are:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:176
#: d37797e5ac524c73adc592570954cf42
msgid ""
"``rosidl_typesupport_introspection_c``: provides tools for generating C "
"code for supporting ``rosidl`` message data types."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:177
#: e86dec0ae6164733be8a8c93a85e1c06
msgid ""
"``rosidl_typesupport_introspection_cpp``: provides tools for generating "
"C++ code for supporting ``rosidl`` message data types."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:179
#: 2b49f0475a794e7b8aa6fca814eff371
msgid ""
"In the case where type support is to be generated at compile time instead"
" of being generated programmatically, a package specific to the rmw "
"implementation will need to be used. This is because typically a "
"particular rmw implementation will require data to be stored and "
"manipulated in a manner that is specific to the DDS vendor in order for "
"the DDS implementation to make use of it. See the :ref:`Type Specific "
"Interfaces` section above for more details."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:183
#: ec7f53dcc44449c982bd6110bf22249e
msgid ""
"For more information on what exactly is in the ``rosidl`` |API| (static "
"and generated) see this page:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:186
#: 7c2718953ea44b5188de6621f4e351fe
msgid "The ``rcutils`` repository"
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:188
#: bb672c76cc594f0aaae845f9d43097f6
msgid ""
"ROS 2 C Utilities (``rcutils``) is a C |API| composed of macros, "
"functions, and data structures used throughout the ROS 2 codebase. These "
"are mainly used for error handling, commandline argument parsing, and "
"logging which are not specific to the client or middleware layers and can"
" be shared by both."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:191
#: 43f3fa76168c4a6390e048fb13a020ca
msgid ""
"The ``rcutils`` |API| and implementation are located in the `ros2/rcutils"
" <https://github.com/ros2/rcutils>`_ repository on |GitHub|_ which "
"contains the interface as C headers."
msgstr ""

#: ../../source/Concepts/Advanced/About-Internal-Interfaces.rst:193
#: c4579ad9a6d4418381ee87c531d3fdc9
msgid ""
"For a complete definition of the ``rcutils`` |API|, see `the rcutils docs"
" <https://docs.ros.org/en/{DISTRO}/p/rcutils/>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:6
#: 3333d59a6d99413da3213c847bd48a77
msgid "ROS 2 middleware implementations"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:13
#: bf70cfc18e26492fba2733d798f7bd48
msgid ""
"ROS middleware implementations are sets of |packages| that implement some"
" of the internal ROS interfaces, e.g. the ``rmw``, ``rcl``, and "
"``rosidl`` |APIs|."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:16
#: 6d748485872745659bee3022ea923a48
msgid "Common Packages for DDS Middleware Packages"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:18
#: 442600ef4e80414999a68d02849c089c
msgid ""
"All of the current ROS middleware implementations are based on full or "
"partial DDS implementations. For example, there is a middleware "
"implementation that uses RTI's Connext DDS and an implementation which "
"uses eProsima's Fast DDS. Because of this, there are some shared "
"|packages| amongst most DDS based middleware implementations."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:22
#: 26ef6a82e63441a0821afd79fadcd711
msgid ""
"In the `ros2/rosidl_dds <https://github.com/ros2/rosidl_dds>`_ repository"
" on |GitHub|_, there is the following |package|:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:24
#: 713711a06dcf428ba6ddb0e847a784e3
msgid ""
"``rosidl_generator_dds_idl``: provides tools to generate DDS ``.idl`` "
"files from ``rosidl`` files, e.g. ``.msg`` files, ``.srv`` files, etc."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:26
#: 823e13c10c464932b03b1c9f557a4ff7
msgid ""
"The ``rosidl_generator_dds_idl`` |package| generates a DDS ``.idl`` file "
"for each ``rosidl`` file, e.g. ``.msg`` file, defined by |packages| "
"containing messages. Currently DDS based ROS middleware implementations "
"make use of this generator's output ``.idl`` files to generate pre-"
"compiled type support that is vendor specific."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:30
#: 1ab2efb6f94d47058b9ecc973f5232d5
msgid "Structure of ROS Middleware Implementations"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:32
#: 0df0660c25f64820964ea758d35dde3c
msgid ""
"A ROS middleware implementation is typically made up of a few |packages| "
"in a single repository:"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:34
#: 79c510abc0b44b1f9c83a7c42c88f298
msgid ""
"``<implementation_name>_cmake_module``: contains CMake Module for "
"discovering and exposing required dependencies"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:35
#: 15c1b0d0b12d4a24a7d963bed9a6d34e
msgid ""
"``rmw_<implementation_name>_<language>``: contains the implementation of "
"the ``rmw`` |API| in a particular language, typically C++"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:36
#: 9f41cb19320346f6b8139ecf7085810d
msgid ""
"``rosidl_typesupport_<implementation_name>_<language>``: contains tools "
"to generate static type support code for ``rosidl`` files, tailored to "
"the implementation in a particular language, typically C or C++"
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:38
#: 542ab91546754094b0fb5d5d1bcb0f24
msgid ""
"The ``<implementation_name>_cmake_module`` |package| contains any CMake "
"Modules and functions needed to find the supporting dependencies for the "
"middleware implementation. For example, ``rti_connext_dds_cmake_module`` "
"provides wrapper logic around the CMake Module shipped with RTI Connext "
"DDS to make sure that all packages that depend on it will select the same"
" installation of RTI Connext DDS. Similarly, ``fastrtps_cmake_module`` "
"includes a CMake Module to find eProsima's Fast DDS and "
"``gurumdds_cmake_module`` includes a CMake Module to find GurumNetworks "
"GurumDDS. Not all implementations will have a package like this: for "
"example, Eclipe's Cyclone DDS already provides a CMake Module which is "
"used directly by its RMW implementation without the need of additional "
"wrappers."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:43
#: c0fb331dd9be4be1b29a872d1cacdf15
msgid ""
"The ``rmw_<implementation_name>_<language>`` |package| implements the "
"``rmw`` C |API| in a particular language. The implementation itself can "
"be C++, it just must expose the header's symbols as ``extern \"C\"`` so "
"that C applications can link against it."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:46
#: 14196facfe914e9d968b01ab8a5ae19a
msgid ""
"The ``rosidl_typesupport_<implementation_name>_<language>`` |package| "
"provides a generator which generates DDS code in a particular language. "
"This is done using the ``.idl`` files generated by the "
"``rosidl_generator_dds_idl`` |package| and the DDS IDL code generator "
"provided by the DDS vendor. It also generates code for converting ROS "
"message structures to and from DDS message structures. This generator is "
"also responsible for creating a shared library for the message package it"
" is being used in, which is specific to the messages in the message "
"package and to the DDS vendor being used."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:51
#: 112a06edfc004c9fa957d6bef2bd2cfb
msgid ""
"As mentioned above, the ``rosidl_typesupport_introspection_<language>`` "
"may be used instead of a vendor specific type support package if an rmw "
"implementation supports runtime interpretation of messages. This ability "
"to programmatically send and receive types over topics without generating"
" code beforehand is achieved by supporting the `DDS X-Types Dynamic Data "
"standard <http://www.omg.org/spec/DDS-XTypes>`_. As such, rmw "
"implementations may provide support for the X-Types standard, and/or "
"provide a package for type support generated at compile time specific to "
"their DDS implementation."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:55
#: 4e49cfbf1faf47959af965bda6760152
msgid ""
"As an example of an rmw implementation repository, the ``Eclipse Cyclone "
"DDS`` ROS middleware implementation is on |GitHub|_ at "
"`ros2/rmw_cyclonedds <https://github.com/ros2/rmw_cyclonedds>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:57
#: 37bbbec1ca9244a58552db543e750399
msgid ""
"The rmw implementation for ``Fast DDS`` is on |GitHub|_ at "
"`ros2/rmw_fastrtps_cpp <https://github.com/ros2/rmw_fastrtps_cpp>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:59
#: b0944ac517074d04887820fce1822757
msgid ""
"The rmw implementation for ``Connext DDS`` is on |GitHub|_ at "
"`ros2/rmw_connextdds <https://github.com/ros2/rmw_connextdds>`_."
msgstr ""

#: ../../source/Concepts/Advanced/About-Middleware-Implementations.rst:61
#: a46bc99f2b61439bb1fd31904b56429e
msgid ""
"The rmw implementation for ``GurumDDS`` is on |GitHub|_ at "
"`ros/rmw_gurumdds <https://github.com/ros2/rmw_gurumdds>`_."
msgstr ""

#: ../../source/Concepts/Basic.rst:2 6cf75a953946459cade8577a8306617e
msgid "Basic Concepts"
msgstr ""

#: ../../source/Concepts/Basic.rst:4 71e68d60d0e34307a53a3e5310b0b4fb
msgid ""
"ROS 2 is a middleware based on a strongly-typed, anonymous "
"publish/subscribe mechanism that allows for message passing between "
"different processes."
msgstr ""

#: ../../source/Concepts/Basic.rst:6 f260c8c16b504efba2edd72e3cf142e3
msgid ""
"At the heart of any ROS 2 system is the ROS graph. The ROS graph refers "
"to the network of nodes in a ROS system and the connections between them "
"by which they communicate."
msgstr ""

#: ../../source/Concepts/Basic.rst:9 84ca10f5570d4e5b990b9ba90addce79
msgid ""
"These are the concepts that will help you get started understanding the "
"basics of ROS 2."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:2
#: ../../source/Concepts/Basic/About-Interfaces.rst:269
#: 7e65805ee5cc445682d0a1b96e5bdb19 99910569321a4da8a4521214409febdd
msgid "Actions"
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:7
#: fca51a6bdfc14a32b7652086e1a35766
msgid ""
"In ROS 2, an action refers to a long-running remote procedure call with "
"feedback and the ability to cancel or preempt the goal. For instance, the"
" high-level state machine running a robot may call an action to tell the "
"navigation subsystem to travel to a waypoint, which may take several "
"seconds (or minutes) to do. Along the way, the navigation subsystem can "
"provide feedback on how far along it is, and the high-level state machine"
" has the option to cancel or preempty the travel to that waypoint."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:11
#: e231f76b2dd74a228cd28e8d775e32ce
msgid "This structure is reflected in how an action message definition loks:"
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:21
#: d4f09bb4536a43a592fecf12ae575ca7
msgid ""
"In ROS 2, actions are expected to be long running procedures, as there is"
" overhead in setting up and monitoring the connection. If you need a "
"short running remote procedure call, consider using a :doc:`service "
"<About-Services>` instead."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:24
#: a78d6b1d50274c048179f055056a9192
msgid ""
"Actions are identified by an action name, which looks much like a topic "
"name (but is in a different namespace)."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:26
#: ee82d8e30b6149aa91bb476e25ab8fb4
msgid "An action consists of two parts: the action server and the action client."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:29
#: f35f73f4c1d64ecc8fdd4d6a91179c88
msgid "Action server"
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:31
#: 9ca9f45889594fedbd1d07acd972ea22
msgid ""
"The action server is the entity that will accept the remote procedure "
"request and perform some procedure on it. It is also responsible for "
"sending out feedback as the action progresses, and should react to "
"cancellation/preemption requests. For instance, suppose the action is "
"supposed to calculate the Fibonacci sequence, and the message contains "
"the following:"
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:43
#: 7a93b50292a04abda00afe3290aa2672
msgid ""
"The action server is the entity that receives this message, starts "
"calculating the sequence up to ``order`` (providing feedback along the "
"way), and finally returning a full result in ``sequence``."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:47
#: abdb41e6382141098a324939a19bd1ca
msgid ""
"There should only ever be one action server per action name. It is "
"undefined which action server will receive client requests in the case of"
" multiple action servers on the same action name."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:51
#: fa37cb83ac904358bb6a930daebde496
msgid "Action client"
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:53
#: 001e24bbf7d940d592f2cd56de42180d
msgid ""
"An action client is an entity that will request a remote action server to"
" perform a procedure on its behalf. Following from the example above, the"
" action client is the entity that creates the initial message containing "
"the ``order``, and waits for the action server to compute the sequence "
"and return it (with feedback along the way)."
msgstr ""

#: ../../source/Concepts/Basic/About-Actions.rst:56
#: 46601ad31bb44c8c82421da189f7c729
msgid ""
"Unlike the action server, there can be arbitrary numbers of actions "
"clients using the same action name."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:9
#: 0cf0715d0fea48adba9d2926b50ef581
msgid "Client libraries"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:15
#: ../../source/Concepts/Basic/About-Parameters.rst:13
#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:12
#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:12
#: ../../source/Concepts/Intermediate/About-Executors.rst:12
#: ../../source/Concepts/Intermediate/About-Logging.rst:13
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:13
#: ../../source/Concepts/Intermediate/About-RQt.rst:14
#: ../../source/Concepts/Intermediate/About-Security.rst:12
#: ../../source/Concepts/Intermediate/About-Tf2.rst:12
#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:13
#: 13c0d76aae264c2fb0b2de1fc73a91f2 30fb47acca0e46e58f7445757e425410
#: 3b8aca1475f240c1b1ab47e1c1175e2a 5d9dfe1eb87f4b398d81e15fc869d8e3
#: 79ffd3d2a64448c4a412d9168b23bd08 7d742743fc8443c5b22140d30f1110db
#: 8221b817012743e1bcf71e4ba26edade 8a8e65a15c32441e93fb52c6b2318548
#: d5019fb9dbf4402e9c64cd7da0c532ad e4c59ee188514b84ae9a4ee126125f59
#: fcf8ae2b101d4ad98fbe0a669feb2d98
msgid "Overview"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:17
#: b7bddeda37f4405692b2c67f37d1b6a1
msgid ""
"Client libraries are the APIs that allow users to implement their ROS 2 "
"code. Using client libraries, users gain access to ROS 2 concepts such as"
" nodes, topics, services, etc. Client libraries come in a variety of "
"programming languages so that users may write ROS 2 code in the language "
"that is best-suited for their application. For example, you might prefer "
"to write visualization tools in Python because it makes prototyping "
"iterations faster, while for parts of your system that are concerned with"
" efficiency, the nodes might be better implemented in C++."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:22
#: 12bc39ec31f746fc9bec4f9536e91f43
msgid ""
"Nodes written using different client libraries are able to share messages"
" with each other because all client libraries implement code generators "
"that provide users with the capability to interact with ROS 2 interface "
"files in the respective language."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:24
#: a896c67d487f45e391c6920a533f50ec
msgid ""
"In addition to the language-specific communication tools, client "
"libraries expose to users the core functionality that makes ROS \"ROS\". "
"For example, here is a list of functionality that can typically be "
"accessed through a client library:"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:27
#: 8f364609451b40a8a66de60355e7cead
msgid "Names and namespaces"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:28
#: 9a336784d05c4b00b51b5a45a79870ca
msgid "Time (real or simulated)"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:29
#: ../../source/Concepts/Basic/About-Parameters.rst:7
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:110
#: 58eb41600667442b835e239b44a74488 b1aded3049ae4ed996cc2963e5a2b861
#: ce7f6eb283e34035a8afd2f417e3bb2a
msgid "Parameters"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:30
#: 62c3a37fa5a94c73a8160f6ffaef989a
msgid "Console logging"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:31
#: 691963246d764f809b6cd8cec9b0177f
msgid "Threading model"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:32
#: 13993ec5fdef45fead37232dd7147e4e
msgid "Intra-process communication"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:35
#: fcf52da48f1b4a46bfc76fac6df0ac37
msgid "Supported client libraries"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:37
#: c9964a5649da470ebc9606ec1f154040
msgid ""
"The C++ client library (``rclcpp``) and the Python client library "
"(``rclpy``) are both client libraries which utilize common functionality "
"in ``rcl``."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:40
#: 02ab9d9309d84b65909653af01a69c4a
msgid "The ``rclcpp`` package"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:42
#: ce4573b1652741c18e07bea8d976982a
msgid ""
"The ROS Client Library for C++ (``rclcpp``) is the user facing, C++ "
"idiomatic interface which provides all of the ROS client functionality "
"like creating nodes, publishers, and subscriptions. ``rclcpp`` builds on "
"top of ``rcl`` and the ``rosidl`` |API|, and it is designed to be used "
"with the C++ messages generated by ``rosidl_generator_cpp``."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:45
#: 70837e9640c741859464f8a162f1c93a
msgid ""
"``rclcpp`` makes use of all the features of C++ and C++17 to make the "
"interface as easy to use as possible, but since it reuses the "
"implementation in ``rcl`` it is able maintain a consistent behavior with "
"the other client libraries that use the ``rcl`` |API|."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:47
#: a2aabf87eb5748edbe83fd9583ccc2b1
msgid ""
"The ``rclcpp`` repository is located on GitHub at `ros2/rclcpp "
"<https://github.com/ros2/rclcpp>`_ and contains the |package| ``rclcpp``."
" The generated |API| documentation is here:"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:50
#: 030c0ea7016841da9cc3ef102b612f0c
msgid "`api/rclcpp/index.html <http://docs.ros.org/en/{DISTRO}/p/rclcpp>`_"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:53
#: 072e329713b24f6db4d48347f7df2e33
msgid "The ``rclpy`` package"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:55
#: 66adde0452d142c9b90e76efab9e50a1
msgid ""
"The ROS Client Library for Python (``rclpy``) is the Python counterpart "
"to the C++ client library. Like the C++ client library, ``rclpy`` also "
"builds on top of the ``rcl`` C API for its implementation. The interface "
"provides an idiomatic Python experience that uses native Python types and"
" patterns like lists and context objects. By using the ``rcl`` |API| in "
"the implementation, it stays consistent with the other client libraries "
"in terms of feature parity and behavior. In addition to providing Python "
"idiomatic bindings around the ``rcl`` |API| and Python classes for each "
"message, the Python client library takes care of the execution model, "
"using ``threading.Thread`` or similar to run the functions in the ``rcl``"
" |API|."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:61
#: 561a6c27ec7342d2bd543ee10ed5d19c
msgid ""
"Like C++ it generates custom Python code for each ROS message that the "
"user interacts with, but unlike C++ it eventually converts the native "
"Python message object into the C version of the message. All operations "
"happen on the Python version of the messages until they need to be passed"
" into the ``rcl`` layer, at which point they are converted into the plain"
" C version of the message so it can be passed into the ``rcl`` C |API|. "
"This is avoided if possible when communicating between publishers and "
"subscriptions in the same process to cut down on the conversion into and "
"out of Python."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:65
#: 8bc7d745353f49c0a871ae31b64f6073
msgid ""
"The ``rclpy`` repository is located on GitHub at `ros2/rclpy "
"<https://github.com/ros2/rclpy>`_ and contains the |package| ``rclpy``. "
"The generated |API| documentation is here:"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:68
#: 302215ecfc9f4e35bbc45c67844e794d
msgid "`api/rclpy/index.html <https://docs.ros.org/en/{DISTRO}/p/rclpy/>`_"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:72
#: b774725831df40328b0c130a3152767c
msgid "Community-maintained"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:74
#: 8461aa442e824d4193772b5417fc8d38
msgid ""
"While the C++ and Python client libraries are maintained by the core ROS "
"2 team, members of the ROS 2 community maintain additional client "
"libraries:"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:76
#: b9a97a049ab1447baa818e71667515fa
msgid ""
"`C <https://github.com/ros2/rclc>`__  ``rclc`` does not put a layer on "
"top of rcl but complements rcl to make rcl+rclc a feature-complete client"
" library in C. See `micro.ros.org <https://micro.ros.org/>`__ for "
"tutorials."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:77
#: 4dddcc84d21647cf82e99222474d00a7
msgid ""
"`JVM and Android <https://github.com/ros2-java>`__ Java and Android "
"bindings for ROS 2."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:78
#: fb3de0ade3644cd9bb4e5d9586f3fdd1
msgid ""
"`.NET Core, UWP and C# <https://github.com/esteve/ros2_dotnet>`__ This is"
" a collection of projects (bindings, code generator, examples and more) "
"for writing ROS 2 applications for .NET Core and .NET Standard."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:79
#: be2905c5b33745c2a454ecc4a14417c6
msgid ""
"`Node.js <https://www.npmjs.com/package/rclnodejs>`__ rclnodejs is a "
"Node.js client for ROS 2. It provides a simple and easy JavaScript API "
"for ROS 2 programming."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:80
#: 7d42ec947532410bbc0b949be626a51c
msgid ""
"`Rust <https://github.com/ros2-rust/ros2_rust>`__ This is a set of "
"projects (the rclrs client library, code generator, examples and more) "
"that enables developers to write ROS 2 applications in Rust."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:82
#: fde63b8909734029ab4a53a26dbf81e9
msgid "Older, unmaintained client libraries are:"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:84
#: 0f87b052965040868d52f77b2f6800d4
msgid "`Ada <https://github.com/ada-ros/ada4ros2>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:85
#: 7aefc5dcf3344445a96f778ed81dea2c
msgid "`C# <https://github.com/firesurfer/rclcs>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:86
#: 600b1981c93d446ba030c12a60683e20
msgid "`Objective C and iOS <https://github.com/esteve/ros2_objc>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:87
#: b7d1d8590ce7468a9e1d3eec16932358
msgid "`Zig <https://github.com/jacobperron/rclzig>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:91
#: b01b8f20b1864174810376172c8fe5e7
msgid "Common functionality: ``rcl``"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:93
#: 348f0643a34747138c15cc3330950419
msgid ""
"Most of the functionality found in a client library is not specific to "
"the programming language of the client library. For example, the behavior"
" of parameters and the logic of namespaces should ideally be the same "
"across all programming languages. Because of this, rather than "
"implementing the common functionality from scratch, client libraries make"
" use of a common core ROS Client Library (RCL) interface that implements "
"logic and behavior of ROS concepts that is not language-specific. As a "
"result, client libraries only need to wrap the common functionality in "
"the RCL with foreign function interfaces. This keeps client libraries "
"thinner and easier to develop. For this reason the common RCL "
"functionality is exposed with C interfaces as the C language is typically"
" the easiest language for client libraries to wrap."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:100
#: 7f8d2f7a3faa41cfb73327a34db2499b
msgid ""
"In addition to making the client libraries light-weight, an advantage of "
"having the common core is that the behavior between languages is more "
"consistent. If any changes are made to the logic/behavior of the "
"functionality in the core RCL -- namespaces, for example -- all client "
"libraries that use the RCL will have these changes reflected. "
"Furthermore, having the common core means that maintaining multiple "
"client libraries becomes less work when it comes to bug fixes."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:104
#: 6c517f2f44c0460ba9b86a49a6ebd459
msgid ""
"The API documentation for ``rcl`` can be found `here "
"<https://docs.ros.org/en/{DISTRO}/p/rcl/>`__."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:107
#: beb4255dca23494488a4f7b468c967dc
msgid "Language-specific functionality"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:109
#: 3e670933872048c7a176f6ab9c3eb6f4
msgid ""
"Client library concepts that require language-specific "
"features/properties are not implemented in the RCL but instead are "
"implemented in each client library. For example, threading models used by"
" “spin” functions will have implementations that are specific to the "
"language of the client library."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:113
#: b277a0a904f44621875236ffd9abaa42
msgid "Demo"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:115
#: c715039f6cbf4b548612ff4e48c03a57
#, python-format
msgid ""
"For a walkthrough of the message exchange between a publisher using "
"``rclpy`` and a subscription using ``rclcpp``\\ , we encourage you to "
"watch `this ROSCon talk <https://vimeo.com/187696091>`__ starting at "
"17:25 (`see the slides here "
"<https://roscon.ros.org/2016/presentations/ROSCon%202016%20-%20ROS%202%20Update.pdf>`__)."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:118
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:72
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:276
#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:61
#: 070984a877494c1fa2682314ccd947fe 7f346a9932a5494e8761dade98c818b9
#: b8cf82cb025245f2a35b1cc26b75e32e cd2c44ed3f6543b1a6759ca0819742af
msgid "Comparison to ROS 1"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:120
#: 548526725e804b33803aaec0ca84ca70
msgid ""
"In ROS 1, all client libraries are developed \"from the ground up\". This"
" allows for the ROS 1 Python client library to be implemented purely in "
"Python, for example, which brings benefits of such as not needing to "
"compile code. However, naming conventions and behaviors are not always "
"consistent between client libraries, bug fixes have to be done in "
"multiple places, and there is a lot of functionality that has only ever "
"been implemented in one client library (e.g. UDPROS)."
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:125
#: 82f3eea746194241938f2bbf74608e1f
msgid "Summary"
msgstr ""

#: ../../source/Concepts/Basic/About-Client-Libraries.rst:127
#: 5542b460a68b4505a57b22859038b5e8
msgid ""
"By utilizing the common core ROS client library, client libraries written"
" in a variety of programming languages are easier to write and have more "
"consistent behavior."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:8
#: 68837dbdcf5848fa93f8ba07de0d464b
msgid "Introspection with command line tools"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:13
#: 4834be3dee3e44eaa79049dbb075f262
msgid ""
"ROS 2 includes a suite of command-line tools for introspecting a ROS 2 "
"system."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:16
#: 61990b1a95a34bfb92be9148f94ee0cd
msgid "Usage"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:18
#: b8b64ca625944ed294459b06de1c82f9
msgid ""
"The main entry point for the tools is the command ``ros2``, which itself "
"has various sub-commands for introspecting and working with nodes, "
"topics, services, and more."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:20
#: fcb27b19c5784e1b8589391284a641d3
msgid "To see all available sub-commands run:"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:26
#: 7c236d4e4dae430d8b3bb25758b144ec
msgid "Examples of sub-commands that are available include:"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:28
#: 3901c15c9fc1409d9f23bf26e009736c
msgid "``action``: Introspect/interact with ROS actions"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:29
#: 0f5388edd635406a957e0e1ef7a736e6
msgid "``bag``: Record/play a rosbag"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:30
#: bd399f956ce8498fbe8d77224eae2d5f
msgid "``component``: Manage component containers"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:31
#: 275e4b55ac8d491d9902edbe8f6a126e
msgid "``daemon``: Introspect/configure the ROS 2 daemon"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:32
#: bfa2ab5d15c041afb689f8b3b5aa054e
msgid "``doctor``: Check ROS setup for potential issues"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:33
#: cdefb0dd1ddd4a3095129bfa12490133
msgid "``interface``: Show information about ROS interfaces"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:34
#: 2f3d10fb8bab4683b0e1e7ffce78eefa
msgid "``launch``: Run/introspect a launch file"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:35
#: 8b905829d7e847d19c3b1a04f2fbe668
msgid "``lifecycle``: Introspect/manage nodes with managed lifecycles"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:36
#: 6e82c455d8764019a5febc691ddcacf5
msgid "``multicast``: Multicast debugging commands"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:37
#: e62b38f6c52a44748d9e40518ad32252
msgid "``node``: Introspect ROS nodes"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:38
#: 5459d341ae114604bc21db81d1cb62ee
msgid "``param``: Introspect/configure parameters on a node"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:39
#: bf873bb015704a86a88b0006a3f18bff
msgid "``pkg``: Introspect ROS packages"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:40
#: 28bb96a4bcfc4f67ac1ad8936c8a0ea1
msgid "``run``: Run ROS nodes"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:41
#: 65fadd0c2a7b407e8ab4181393147257
msgid "``security``: Configure security settings"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:42
#: 5a1aa80722244d9da0806d512e28e2e0
msgid "``service``: Introspect/call ROS services"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:43
#: 044d7a9a14ca458d9a8fb47207a6272f
msgid "``test``: Run a ROS launch test"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:44
#: 81f2bf3ff90f4d6cb1c92f651a65f643
msgid "``topic``: Introspect/publish ROS topics"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:45
#: 3a65b34029ea4e128ff2b2b20483fb41
msgid ""
"``trace``: Tracing tools to get information on ROS nodes execution (only "
"available on Linux)"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:46
#: ef6c73cde18e41caa53421c6143390e9
msgid "``wtf``: An alias for ``doctor``"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:49
#: 1610146d14b842d79b3c55597f84333b
msgid "Example"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:51
#: e774b6099d194493b4ccfe4b19cc2f03
msgid ""
"To produce the typical talker-listener example using command-line tools, "
"the ``topic`` sub-command can be used to publish and echo messages on a "
"topic."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:53
#: 5a1e2928df6e42d18179ff46af0714d5
msgid "Publish messages in one terminal with:"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:63
#: 0424234977d24b728360d969b7effcf6
msgid "Echo messages received in another terminal with:"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:73
#: b8477b8bfaea47e2936204cdb1d7cdf1
msgid "Behind the scenes"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:75
#: 1b889567fe1946f591f11b5061b08ae8
msgid ""
"ROS 2 uses a distributed discovery process for nodes to connect to each "
"other. As this process purposefully does not use a centralized discovery "
"mechanism, it can take time for ROS nodes to discover all other "
"participants in the ROS graph. Because of this, there is a long-running "
"daemon in the background that stores information about the ROS graph to "
"provide faster responses to queries, e.g. the list of node names."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:79
#: 8e96e56c14e24d2289f734aa475757c9
msgid ""
"The daemon is automatically started when the relevant command-line tools "
"are used for the first time. You can run ``ros2 daemon --help`` for more "
"options for interacting with the daemon."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:83
#: 8108a591c7c9445f9ad0ffd09bf3a1aa
msgid "Implementation"
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:85
#: 3e20421a91c0490188c3c2d75c208ac9
msgid ""
"The source code for the ``ros2`` command is available at "
"https://github.com/ros2/ros2cli."
msgstr ""

#: ../../source/Concepts/Basic/About-Command-Line-Tools.rst:87
#: 216c11a03dbc42fb8bda01559feca05f
msgid ""
"The ``ros2`` tool has been implemented as a framework that can be "
"extended via plugins. For example, the `sros2 "
"<https://github.com/ros2/sros2>`__ package provides a ``security`` sub-"
"command that is automatically detected by the ``ros2`` tool if the "
"``sros2`` package is installed."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:2
#: 54e4a87f3a3c462b818b3b558486cd07
msgid "Discovery"
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:7
#: 5e546f14eb794e279ddb31abf71ac6ef
msgid ""
"Discovery of nodes happens automatically through the underlying "
"middleware of ROS 2. It can be summarized as follows:"
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:10
#: 00aff6945bba43a982da4be19df0d95b
msgid ""
"When a node is started, it advertises its presence to other nodes on the "
"network with the same ROS domain (set with the ROS_DOMAIN_ID environment "
"variable). Nodes respond to this advertisement with information about "
"themselves so that the appropriate connections can be made and the nodes "
"can communicate."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:12
#: 6cc1bebfe2ac4457a5b6414d7fefbca3
msgid ""
"Nodes periodically advertise their presence so that connections can be "
"made with new-found entities, even after the initial discovery period."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:13
#: 4d0be05d89e94e2594d3ab4883b23d4c
msgid "Nodes advertise to other nodes when they go offline."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:15
#: db7189bdb3644655a417aa715a329c46
msgid ""
"Nodes will only establish connections with other nodes if they have "
"compatible :doc:`Quality of Service <../../Tutorials/Demos/Quality-of-"
"Service>` settings."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:17
#: 90ea7a5717aa4030857e74389599fb49
msgid ""
"Take the :ref:`talker-listener demo <talker-listener>` for example. "
"Running the C++ talker node in one terminal will publish messages on a "
"topic, and the Python listener node running in another terminal  will "
"subscribe to messages on the same topic."
msgstr ""

#: ../../source/Concepts/Basic/About-Discovery.rst:21
#: 8d51afc7669b4baa810ea23e753ab887
msgid ""
"You should see that these nodes discover each other automatically, and "
"begin to exchange messages."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:7
#: d2c8e392bf8b4aecaee37eed80384403
msgid "Interfaces"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:13
#: a6b37895a0914121a21ac863ef8b7807
msgid "Background"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:15
#: ae0e1ff036cd45fc84e8f7c5cd2cba74
msgid ""
"ROS applications typically communicate through interfaces of one of three"
" types: :doc:`topics <About-Topics>`, :doc:`services <About-Services>`, "
"or :doc:`actions <About-Actions>`. ROS 2 uses a simplified description "
"language, the interface definition language (IDL), to describe these "
"interfaces. This description makes it easy for ROS tools to automatically"
" generate source code for the interface type in several target languages."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:19
#: f2868150d98046ea8dc4b3c2d4161a30
msgid "In this document we will describe the supported types:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:21
#: a8ea3f3b6714403c936fb32ec2bb7a7f
msgid ""
"msg: ``.msg`` files are simple text files that describe the fields of a "
"ROS message. They are used to generate source code for messages in "
"different languages."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:22
#: 615b5874744f4ee79e6e313167c31dfa
msgid ""
"srv: ``.srv`` files describe a service. They are composed of two parts: a"
" request and a response. The request and response are message "
"declarations."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:23
#: 13c3715822a84d3189a203e260f7a2c1
msgid ""
"action: ``.action`` files describe actions. They are composed of three "
"parts: a goal, a result, and feedback. Each part is a message declaration"
" itself."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:27
#: d9f992439a6547ad90a74d0025f6565d
msgid "Messages"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:29
#: d8c8bfba8d7f44db846d19a0f0dd216b
msgid ""
"Messages are a way for a ROS 2 node to send data on the network to other "
"ROS nodes, with no response expected. For instance, if a ROS 2 node reads"
" temperature data from a sensor, it can then publish that data on the ROS"
" 2 network using a ``Temperature`` message. Other nodes on the ROS 2 "
"network can subscribe to that data and receive the ``Temperature`` "
"message."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:33
#: c93158ee3a3b4aa892391d5c4b87fa12
msgid ""
"Messages are described and defined in ``.msg`` files in the ``msg/`` "
"directory of a ROS package. ``.msg`` files are composed of two parts: "
"fields and constants."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:37
#: 2dc57208a1a7424a9b9bb40a5b1d62b7
msgid "Fields"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:39
#: 3117d3fe3e4a4ea3967421265ad82833
msgid "Each field consists of a type and a name, separated by a space, i.e:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:47
#: ../../source/Concepts/Basic/About-Interfaces.rst:193
#: ../../source/Concepts/Basic/About-Interfaces.rst:217
#: 07fe5550870c4fd1a1bc92ca96a7c7e8 2b970f626f7b43d2a692aa64fcfdc6ed
#: d0b72bd2dc204ed9809f311b9c9000ff
msgid "For example:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:55
#: 720870f6fd15477dbfc224445f36b1d3
msgid "Field types"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:57
#: 189a75222d0147ce827b47765cf0688c
msgid "Field types can be:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:59
#: 8c48ebc953984de08fd396638a86a871
msgid "a built-in-type"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:60
#: e07fe4eda26a4427ab40069e9ed864b2
msgid ""
"names of Message descriptions defined on their own, such as "
"\"geometry_msgs/PoseStamped\""
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:62
#: f31d46cfb8904a18a20bc9c5242a8569
msgid "*Built-in-types currently supported:*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:67
#: ../../source/Concepts/Basic/About-Interfaces.rst:137
#: 1b12c9e2cc104c65bad2d71e57782642 9c71eece174d4c3a876af310606e8050
msgid "Type name"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:68
#: ../../source/Concepts/Basic/About-Interfaces.rst:138
#: 802af7887f98452ab84e414a2f81137a bc12ab7f05b34d0da239967d563471ef
msgid "`C++ <https://design.ros2.org/articles/generated_interfaces_cpp.html>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:69
#: ../../source/Concepts/Basic/About-Interfaces.rst:139
#: d8655f06c29c476cb1836c2ecd55811a f7ed720277ef422696b478faa4c9dae9
msgid ""
"`Python "
"<https://design.ros2.org/articles/generated_interfaces_python.html>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:70
#: ../../source/Concepts/Basic/About-Interfaces.rst:140
#: 5a23c9b67d9a4a37aa971e343c2b9e45 a935bb1c678042b89d937c3443e282d4
msgid "`DDS type <https://design.ros2.org/articles/mapping_dds_types.html>`__"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:71
#: ../../source/Concepts/Basic/About-Interfaces.rst:72
#: 2bfc8cdf9d824d31aebfabdeb46b98fa 45428ee87fe444a696e814e9691c799a
msgid "bool"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:73
#: 96b5069f53644437bf14970f233bc4f5
msgid "builtins.bool"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:74
#: 45f8d78a7836499680c05d3046bf3f23
msgid "boolean"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:75
#: da289fca7dca4abaa5d665916794b32b
msgid "byte"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:76
#: ../../source/Concepts/Basic/About-Interfaces.rst:96
#: 4dcb2a57e1c04d12a251d83a259ae3b1 dea8d7f0fa2f4f94ae87a1065d2c962a
msgid "uint8_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:77
#: cd2f0e90414a47df922fc01467bc7ffd
msgid "builtins.bytes*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:78
#: ../../source/Concepts/Basic/About-Interfaces.rst:94
#: ../../source/Concepts/Basic/About-Interfaces.rst:98
#: 3da7d02e65cc44c696af95fde330244a 3ec3d51158ba47f3b7d280a07fed150a
#: 9643cdb3423e4d9fa7c0f0f76d54f2ec
msgid "octet"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:79
#: ../../source/Concepts/Basic/About-Interfaces.rst:80
#: ../../source/Concepts/Basic/About-Interfaces.rst:82
#: 1edcf43591434eb8a31497ec868e3627 64e58d90e6664a3faac530a10d76a40f
#: 73855bac55f747089ab02fd2a31a7c8f
msgid "char"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:81
#: ../../source/Concepts/Basic/About-Interfaces.rst:155
#: 18c38a73db674f62beb14a962fdfc9cf 8731866882e34cf997cb521d0717a5b3
msgid "builtins.str*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:83
#: 3814d5b0d86c4b57989ac3f1a9c9a536
msgid "float32"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:84
#: ../../source/Concepts/Basic/About-Interfaces.rst:86
#: 067e47ab66b2482e95b5a754d64757a5 583edff9a7dd487981e01f5d6faedc52
msgid "float"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:85
#: ../../source/Concepts/Basic/About-Interfaces.rst:89
#: adb3d889fb3b44799a0d7eac4cf38da7 c61430ddd72145a2ac5d1b7ec8421e2d
msgid "builtins.float*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:87
#: e9fe68516eaa46b584276ef9bdd5fa44
msgid "float64"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:88
#: ../../source/Concepts/Basic/About-Interfaces.rst:90
#: 687c64da6e1b4267a57cd4e9151f4ab8 cb1b5d3c977f4d2da66f1d99888073da
msgid "double"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:91
#: 34edd8c175564fe1a701e2a74418fa35
msgid "int8"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:92
#: cacdaf9b5e4c411f9dceb28f6e3b49c3
msgid "int8_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:93
#: ../../source/Concepts/Basic/About-Interfaces.rst:97
#: ../../source/Concepts/Basic/About-Interfaces.rst:101
#: ../../source/Concepts/Basic/About-Interfaces.rst:105
#: ../../source/Concepts/Basic/About-Interfaces.rst:109
#: ../../source/Concepts/Basic/About-Interfaces.rst:113
#: ../../source/Concepts/Basic/About-Interfaces.rst:117
#: ../../source/Concepts/Basic/About-Interfaces.rst:121
#: 358ede18a8f34c008fb0e59f9369167a 3694813ce23c46f6a8f889ad5104ba7d
#: 7486a2c33de141a5bd07670604ea4790 99f302eac0d04aefa2298a26fe57abcd
#: 9a8a8df41f92408dbe66ef98f587d113 b2d1268b64ec4f7fa19be7055de59a59
#: da873c8a61f44e08ab485d72bc0e30b7 e5b1e5b701dd493eb7cec896417c4820
msgid "builtins.int*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:95
#: 603e6c347a6c4968ba7009fc12b739bf
msgid "uint8"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:99
#: 6ab60285941d4e11ac4c7690cb7a1282
msgid "int16"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:100
#: 05dd2a90c279400f8f7737df1064108d
msgid "int16_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:102
#: 2d700ffe7bab443cb30d9b804222b694
msgid "short"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:103
#: 230720fac6944ff899bd131cba64b84c
msgid "uint16"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:104
#: d6c458a730294a2cb3de997bebb82bdd
msgid "uint16_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:106
#: 3bb242cd5e774ed7b8d8287890f10164
msgid "unsigned short"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:107
#: 1d156f0abf0f46d8a925f8471cd74ce1
msgid "int32"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:108
#: ed7bff27f70c476089aad3f23f23619a
msgid "int32_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:110
#: d991dcaad3494cbca2d1870732695ad2
msgid "long"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:111
#: fc94196cafc4409c83dbfc56eab5a98d
msgid "uint32"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:112
#: e218fc3f14694913a1ef07e8cf672069
msgid "uint32_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:114
#: 3ebe8972a2974d7891c8969bca265a96
msgid "unsigned long"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:115
#: 2ca23491ad71426cb5c8ff5f4facb4fa
msgid "int64"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:116
#: c44370b7850040baa695de3045acc43d
msgid "int64_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:118
#: 4c8b24a6c20a48d6b2e11037a4b69b00
msgid "long long"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:119
#: 3d4f8d172a494b04ae16595fa0b74d46
msgid "uint64"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:120
#: fb121b4e993246c7b9e0619e5d0e4ad1
msgid "uint64_t"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:122
#: 7db406b8df08459482aa9cfcfb834ee5
msgid "unsigned long long"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:123
#: ../../source/Concepts/Basic/About-Interfaces.rst:126
#: ../../source/Concepts/Basic/About-Interfaces.rst:156
#: e7bf8ef7fa37477bb3e8f1fe7d8c1ff2 eee9b7bf42354394a31873fe5a67131d
#: fcac9b1825364407acbb7cef39145180
msgid "string"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:124
#: ../../source/Concepts/Basic/About-Interfaces.rst:154
#: 791ad61c39294ce0a8b523dbc5cd9527 9c98d3d380784b80bb66337cdc223196
msgid "std::string"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:125
#: ../../source/Concepts/Basic/About-Interfaces.rst:129
#: 0cf570a2122749088032be01594ebbf3 1821fde9ba6c4f97b7679230ff92df88
msgid "builtins.str"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:127
#: ../../source/Concepts/Basic/About-Interfaces.rst:130
#: 19495ed33ea847cdb02a321b703cc4da 945c1fa16cf54afbb3173e9c45afeb2f
msgid "wstring"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:128
#: e76083738cfd417d8016c119d27ed70b
msgid "std::u16string"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:132
#: c3c8869f80994281b43ef1a47f620d37
msgid "*Every built-in-type can be used to define arrays:*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:141
#: 81899eb99f4e4bf8bb58240d0f55e711
msgid "static array"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:142
#: 573bb67267354cc382f0cefefb774136
msgid "std::array<T, N>"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:143
#: ../../source/Concepts/Basic/About-Interfaces.rst:151
#: 6df7a32d677c42499760ec36723717b5 cbd57fdb9820439d87b9d0001705becb
msgid "builtins.list*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:144
#: b542c64af1db49d1baf2f44a28d29910
msgid "T[N]"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:145
#: 8f77c3255f154ed5a130b5a27df6ee2b
msgid "unbounded dynamic array"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:146
#: 040686ddea6b4861aeeaa8017056a797
msgid "std::vector"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:147
#: 305448e945d840ad886b36da2c5c0efc
msgid "builtins.list"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:148
#: 5caaa6ab0af542a19fc150dedb68ef86
msgid "sequence"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:149
#: 6d50cf45c5104619a0aba58c89e82535
msgid "bounded dynamic array"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:150
#: 3633faeeb3ff425299b1ddcaea6143f5
msgid "custom_class<T, N>"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:152
#: e1bcf99b57b6402e9fd6b87a1b0ac60a
msgid "sequence<T, N>"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:153
#: 465ee138370046cf842963b07dce284c
msgid "bounded string"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:158
#: f3f2d6624aae4650a0729b7563d000c4
msgid ""
"All types that are more permissive than their ROS definition enforce the "
"ROS constraints in range and length by software."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:160
#: 5393cb9433814477adeb7c7ba9962070
msgid "*Example of message definition using arrays and bounded types:*"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:176
#: 45509b027202465d9538c80f2670e2b4
msgid "Field names"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:178
#: 0dbf426dcd70412ebfd46c86fe19b94a
msgid ""
"Field names must be lowercase alphanumeric characters with underscores "
"for separating words. They must start with an alphabetic character, and "
"they must not end with an underscore or have two consecutive underscores."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:182
#: 905a013fc1c04ddbb8e7513dd64bbba5
msgid "Field default value"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:184
#: 7a0e8402071342b3ad5bf271f0e5a60d
msgid ""
"Default values can be set to any field in the message type. Currently "
"default values are not supported for string arrays and complex types "
"(i.e. types not present in the built-in-types table above; that applies "
"to all nested messages)."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:187
#: 3f2c25403bb44a4bb69eef8f0659944c
msgid ""
"Defining a default value is done by adding a third element to the field "
"definition line, i.e:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:204
#: 23d68fa2e9f544899274c5fc8bbfa5f7
msgid "string values must be defined in single ``'`` or double ``\"`` quotes"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:205
#: a318512fab564c09b996447909988c93
msgid "currently string values are not escaped"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:208
#: 95337eac0db94a1c95c1545b25a3c213
msgid "Constants"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:210
#: 086cbd08068f4412856e33aca09209d9
msgid ""
"Each constant definition is like a field description with a default "
"value, except that this value can never be changed programatically. This "
"value assignment is indicated by use of an equal '=' sign, e.g."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:228
#: 51d9ca744efc43468e854e8fe2f404f6
msgid "Constants names have to be UPPERCASE"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:231
#: ../../source/Concepts/Basic/About-Services.rst:2
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:98
#: 048f856fad5147c7a2323662b1c91ffe 5d5d83854e3d4c5e9b00be62cbe92093
#: b6170bf773e54d1bb352280f065376eb
msgid "Services"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:233
#: df7eb9b4b735471890d0942ac2bf059b
msgid ""
"Services are a request/response communication, where the client "
"(requester) is waiting for the server (responder) to make a short "
"computation and return a result."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:235
#: 901568424f6f4a89b09b9498811b725a
msgid ""
"Services are described and defined in ``.srv`` files in the ``srv/`` "
"directory of a ROS package."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:237
#: a986d3aeac514835b6f7e4734c7eaa37
msgid ""
"A service description file consists of a request and a response msg type,"
" separated by ``---``. Any two ``.msg`` files concatenated with a ``---``"
" are a legal service description."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:240
#: b6b7711f60274e6daa9990c2593dac94
msgid ""
"Here is a very simple example of a service that takes in a string and "
"returns a string:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:248
#: 7825f3959a454ec9a566e9d19015275b
msgid ""
"We can of course get much more complicated (if you want to refer to a "
"message from the same package you must not mention the package name):"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:266
#: 58114137fe914c7b9d033336f5bfe555
msgid "You cannot embed another service inside of a service."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:271
#: 9152f28de3214e8cb670ed585a6162b7
msgid ""
"Actions are a long-running request/response communication, where the "
"action client (requester) is waiting for the action server (the "
"responder) to take some action and return a result. In contrast to "
"services, actions can be long-running (many seconds or minutes), provide "
"feedback while they are happening, and can be interrupted."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:274
#: f72d4fdb87a14300ae1a3c018b2da227
msgid "Action definitions have the following form:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:284
#: fd5a68af84994f25867717c148dbcc3c
msgid ""
"Like services, the request fields are before and the response fields are "
"after the first triple-dash (``---``), respectively. There is also a "
"third set of fields after the second triple-dash, which is the fields to "
"be sent when sending feedback."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:287
#: 88ad4bb1b28f475da4f415b1ef1722df
msgid ""
"There can be arbitrary numbers of request fields (including zero), "
"arbitrary numbers of response fields (including zero), and arbitrary "
"numbers of feedback fields (including zero)."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:289
#: fee482682c364469ba581ca17c79ef35
msgid ""
"The ``<request_type>``, ``<response_type>``, and ``<feedback_type>`` "
"follow all of the same rules as the ``<type>`` for a message. The "
"``<request_fieldname>``, ``<response_fieldname>``, and "
"``<feedback_fieldname>`` follow all of the same rules as the "
"``<fieldname>`` for a message."
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:292
#: 657aabb9dcab479e9f53e61363a8d970
msgid "For instance, the ``Fibonacci`` action definition contains the following:"
msgstr ""

#: ../../source/Concepts/Basic/About-Interfaces.rst:302
#: 5f54166f252a445797ec44157c388b3c
msgid ""
"This is an action definition where the action client is sending a single "
"``int32`` field representing the number of Fibonacci steps to take, and "
"expecting the action server to produce an array of ``int32`` containing "
"the complete steps. Along the way, the action server may also provide an "
"intermediate array of ``int32`` contains the steps accomplished up until "
"a certain point."
msgstr ""

#: ../../source/Concepts/Basic/About-Launch.rst:2
#: 6c50d00f935744e7bd1998452fa54392
msgid "Launch"
msgstr ""

#: ../../source/Concepts/Basic/About-Launch.rst:7
#: 09b12afe4ed048a1bb5c41931fd5db41
msgid ""
"A ROS 2 system typically consists of many nodes running across many "
"different processes (and even different machines). While it is possible "
"to run each of these nodes separately, it gets cumbersome quite quickly."
msgstr ""

#: ../../source/Concepts/Basic/About-Launch.rst:10
#: 2331772207c84c4685820bdc0f1e5055
msgid ""
"The launch system in ROS 2 is meant to automate the running of many nodes"
" with a single command. It helps the user describe the configuration of "
"their system and then executes it as described. The configuration of the "
"system includes what programs to run, where to run them, what arguments "
"to pass them, and ROS-specific conventions which make it easy to reuse "
"components throughout the system by giving them each a different "
"configuration. It is also responsible for monitoring the state of the "
"processes launched, and reporting and/or reacting to changes in the state"
" of those processes."
msgstr ""

#: ../../source/Concepts/Basic/About-Launch.rst:15
#: 76be37a4180b4a089ca368b65b4d6f0d
msgid ""
"All of the above is specified in a launch file, which can be written in "
"Python, XML, or YAML. This launch file can then be run using the ``ros2 "
"launch`` command, and all of the nodes specified will be run."
msgstr ""

#: ../../source/Concepts/Basic/About-Launch.rst:18
#: c86e774a2eb74028812e3c68fc036f0d
msgid ""
"The `design document <https://design.ros2.org/articles/roslaunch.html>`__"
" details the goal of the design of ROS 2's launch system (not all "
"functionality is currently available)."
msgstr ""

#: ../../source/Concepts/Basic/About-Nodes.rst:2
#: a0b04d5f24214f5ba0a96bce82baeb2d
msgid "Nodes"
msgstr ""

#: ../../source/Concepts/Basic/About-Nodes.rst:7
#: ee4051a76d704fc28f692fa55dadca52
msgid ""
"A node is a participant in the ROS 2 graph, which uses a :doc:`client "
"library <About-Client-Libraries>` to communicate with other nodes. Nodes "
"can communicate with other nodes within the same process, in a different "
"process, or on a different machine. Nodes are typically the unit of "
"computation in a ROS graph; each node should do one logical thing."
msgstr ""

#: ../../source/Concepts/Basic/About-Nodes.rst:11
#: 62174a79061141a1bf544c6658d9a682
msgid ""
"Nodes can :doc:`publish <About-Topics>` to named topics to deliver data "
"to other nodes, or :doc:`subscribe <About-Topics>` to named topics to get"
" data from other nodes. They can also act as a :doc:`service client "
"<About-Services>` to have another node perform a computation on their "
"behalf, or as a :doc:`service server <About-Services>` to provide "
"functionality to other nodes. For long-running computations, a node can "
"act as an :doc:`action client <About-Actions>` to perform it, or as an "
":doc:`action server <About-Actions>` to have another node perform it. "
"Nodes can provide configurable :doc:`parameters <About-Parameters>` to "
"change behavior during run-time."
msgstr ""

#: ../../source/Concepts/Basic/About-Nodes.rst:16
#: fb057fe3af254cbeb271dd26b4fe07bc
msgid ""
"Connections between nodes are established through a distributed "
":doc:`discovery <About-Discovery>` process."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:15
#: 4bc7c36327844b64b74423d9604bd1e9
msgid ""
"Parameters in ROS 2 are associated with individual nodes. Parameters are "
"used to configure nodes at startup (and during runtime), without changing"
" the code. The lifetime of a parameter is tied to the lifetime of the "
"node (though the node could implement some sort of persistence to reload "
"values after restart)."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:19
#: 42bf0966b3484f5c9f43f416e0803a90
msgid ""
"Parameters are addressed by node name, node namespace, parameter name, "
"and parameter namespace. Providing a parameter namespace is optional."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:22
#: ffe09fd6d1eb45c79e666f0c03a1dcd6
msgid ""
"Each parameter consists of a key, a value, and a descriptor. The key is a"
" string and the value is one of the following types: ``bool``, ``int64``,"
" ``float64``, ``string``, ``byte[]``, ``bool[]``, ``int64[]``, "
"``float64[]`` or ``string[]``. By default all descriptors are empty, but "
"can contain parameter descriptions, value ranges, type information, and "
"additional constraints."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:26
#: 65a205df8cf64514881fc9e4f4ef783c
msgid ""
"For an hands-on tutorial with ROS parameters see :doc:`../../Tutorials"
"/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-"
"ROS2-Parameters`."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:29
#: 50901aca9c5e49c78ee026b58166c972
msgid "Parameters background"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:32
#: a152aa1964a0417bab15347b67efa64d
msgid "Declaring parameters"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:34
#: af2bd335cb9d42bdadf42d2ddf433da1
msgid ""
"By default, a node needs to *declare* all of the parameters that it will "
"accept during its lifetime. This is so that the type and name of the "
"parameters are well-defined at node startup time, which reduces the "
"chances of misconfiguration later on. See :doc:`../../Tutorials/Beginner-"
"Client-Libraries/Using-Parameters-In-A-Class-CPP` or "
":doc:`../../Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A"
"-Class-Python` for tutorials on declaring and using parameters from a "
"node."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:38
#: f17c0760de3f468f91e016d111a59c23
msgid ""
"For some types of nodes, not all of the parameters will be known ahead of"
" time. In these cases, the node can be instantiated with "
"``allow_undeclared_parameters`` set to ``true``, which will allow "
"parameters to be get and set on the node even if they haven't been "
"declared."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:42
#: 11ccb03f41b74ca6a6c835505ca2b0a3
msgid "Parameter types"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:44
#: 814204fb5b9c4ed9a27d72f312c4f93f
msgid ""
"Each parameter on a ROS 2 node has one of the pre-defined parameter types"
" as mentioned in the Overview. By default, attempts to change the type of"
" a declared parameter at runtime will fail. This prevents common "
"mistakes, such as putting a boolean value into an integer parameter."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:48
#: 2cb3d2e32acc4ff7a18e6a51cf58d64b
msgid ""
"If a parameter needs to be multiple different types, and the code using "
"the parameter can handle it, this default behavior can be changed. When "
"the parameter is declared, it should be declared using a "
"``ParameterDescriptor`` with the ``dynamic_typing`` member variable set "
"to ``true``."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:52
#: 8194fa53916b46778a693a447ca9ca61
msgid "Parameter callbacks"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:54
#: 8caf05b877564906972e3cd0ffd44e71
msgid ""
"A ROS 2 node can register three different types of callbacks to be "
"informed when changes are happening to parameters. All three of the "
"callbacks are optional."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:57
#: 6117450c52974779828f695a5b5e350f
msgid ""
"The first is known as a \"pre set parameter\" callback, and can be set by"
" calling ``add_pre_set_parameters_callback`` from the node API. This "
"callback is passed a list of the ``Parameter`` objects that are being "
"changed, and returns nothing. When it is called, it can modify the "
"``Parameter`` list to change, add, or remove entries. As an example, if "
"``parameter2`` should change anytime that ``parameter1`` changes, that "
"can be implemented with this callback."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:62
#: 7f1354924b554d7abfbfdef298c2e4a0
msgid ""
"The second is known as a \"set parameter\" callback, and can be set by "
"calling ``add_on_set_parameters_callback`` from the node API. The "
"callback is passed a list of immutable ``Parameter`` objects, and returns"
" an ``rcl_interfaces/msg/SetParametersResult``. The main purpose of this "
"callback is to give the user the ability to inspect the upcoming change "
"to the parameter and explicitly reject the change."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:67
#: b1400256ff5342fd98db78708e0bbcad
msgid ""
"It is important that \"set parameter\" callbacks have no side-effects. "
"Since multiple \"set parameter\" callbacks can be chained, there is no "
"way for an individual callback to know if a later callback will reject "
"the update. If the individual callback were to make changes to the class "
"it is in, for instance, it may get out-of-sync with the actual parameter."
" To get a callback *after* a parameter has been successfully changed, see"
" the next type of callback below."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:72
#: fdd2b4c8d8164c77ac824335197b6673
msgid ""
"The third type of callback is known as an \"post set parameter\" "
"callback, and can be set by calling ``add_post_set_parameters_callback`` "
"from the node API. The callback is passed a list of immutable "
"``Parameter`` objects, and returns nothing. The main purpose of this "
"callback is to give the user the ability to react to changes from "
"parameters that have successfully been accepted."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:76
#: 4dbfed332ca34f6fa26ecfe68c225336
msgid ""
"The ROS 2 demos have an `example "
"<https://github.com/ros2/demos/blob/{DISTRO}/demo_nodes_cpp/src/parameters/set_parameters_callback.cpp>`__"
" of all of these callbacks in use."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:79
#: f95346e8894844bcb5bb7ba33e5b52d4
msgid "Interacting with parameters"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:81
#: 774cb9ee5fe74636b9548d63e659e0e8
msgid ""
"ROS 2 nodes can perform parameter operations through node APIs as "
"described in :doc:`../../Tutorials/Beginner-Client-Libraries/Using-"
"Parameters-In-A-Class-CPP` or :doc:`../../Tutorials/Beginner-Client-"
"Libraries/Using-Parameters-In-A-Class-Python`. External processes can "
"perform parameter operations via parameter services that are created by "
"default when a node is instantiated. The services that are created by "
"default are:"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:85
#: 9242cbce68984e51b301e14b7ea727d3
msgid ""
"``/node_name/describe_parameters``: Uses a service type of "
"``rcl_interfaces/srv/DescribeParameters``. Given a list of parameter "
"names, returns a list of descriptors associated with the parameters."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:87
#: 3fddbbee7b2c4e6aad13f8fb9a900ff0
msgid ""
"``/node_name/get_parameter_types``: Uses a service type of "
"``rcl_interfaces/srv/GetParameterTypes``. Given a list of parameter "
"names, returns a list of parameter types associated with the parameters."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:89
#: 3dcb0eedc1284f009e053d7979eaa80c
msgid ""
"``/node_name/get_parameters``: Uses a service type of "
"``rcl_interfaces/srv/GetParameters``. Given a list of parameter names, "
"returns a list of parameter values associated with the parameters."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:91
#: 1e93bb6fb6a6481e95706613da68c109
msgid ""
"``/node_name/list_parameters``: Uses a service type of "
"``rcl_interfaces/srv/ListParameters``. Given an optional list of "
"parameter prefixes, returns a list of the available parameters with that "
"prefix.  If the prefixes are empty, returns all parameters."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:93
#: 30c7c6c42f1e4a34b7c509e5aaf0dede
msgid ""
"``/node_name/set_parameters``: Uses a service type of "
"``rcl_interfaces/srv/SetParameters``. Given a list of parameter names and"
" values, attempts to set the parameters on the node.  Returns a list of "
"results from trying to set each parameter; some of them may have "
"succeeded and some may have failed."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:95
#: d6b2eb6f47354f58b43df18ee7bf409f
msgid ""
"``/node_name/set_parameters_atomically``: Uses a service type of "
"``rcl_interfaces/srv/SetParametersAtomically``. Given a list of parameter"
" names and values, attempts to set the parameters on the node.  Returns a"
" single result from trying to set all parameters, so if one failed, all "
"of them failed."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:99
#: 9fe290d8f1774c38a5b6297d1feeb16c
msgid "Setting initial parameter values when running a node"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:101
#: 939a97af59a344a9b3f6749be1352167
msgid ""
"Initial parameter values can be set when running the node either through "
"individual command-line arguments, or through YAML files. See "
":ref:`NodeArgsParameters` for examples on how to set initial parameter "
"values."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:105
#: 8f80b7c40da3412393371d9c19d27723
msgid "Setting initial parameter values when launching nodes"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:107
#: acbbf306f0ba42868a142ad89af48935
msgid ""
"Initial parameter values can also be set when running the node through "
"the ROS 2 launch facility. See :doc:`this document "
"<../../Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-"
"Projects>` for information on how to specify parameters via launch."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:111
#: 9aa351d06eea49e48fccc23dd17fe2d3
msgid "Manipulating parameter values at runtime"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:113
#: 8ac74056f80a4a3493fbe7cf8df9d5fd
msgid ""
"The ``ros2 param`` command is the general way to interact with parameters"
" for nodes that are already running. ``ros2 param`` uses the parameter "
"service API as described above to perform the various operations. See "
":doc:`this how-to guide <../../How-To-Guides/Using-ros2-param>` for "
"details on how to use ``ros2 param``."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:118
#: 879ff4be47574011ae217ed366a4dd4a
msgid "Migrating from ROS 1"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:120
#: 2bc0ed2aaa974e54b2285807b93fd595
msgid ""
"The :doc:`Launch file migration guide <../../How-To-Guides/Launch-files-"
"migration-guide>` explains how to migrate ``param`` and ``rosparam`` "
"launch tags from ROS 1 to ROS 2."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:122
#: b6d1d90e861743daa86f10a86bddcc89
msgid ""
"The :doc:`YAML parameter file migration guide <../../How-To-Guides"
"/Parameters-YAML-files-migration-guide>` explains how to migrate "
"parameter files from ROS 1 to ROS 2."
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:124
#: 41fcba786cbb46a5804f9e5721c909e9
msgid ""
"In ROS 1, the ``roscore`` acted like a global parameter blackboard where "
"all nodes could get and set parameters. Since there is no central "
"``roscore`` in ROS 2, that functionality no longer exists. The "
"recommended approach in ROS 2 is to use per-node parameters that are "
"closely tied to the nodes that use them. If a global blackboard is still "
"needed, it is possible to create a dedicated node for this purpose. ROS 2"
" ships with one in the ``ros-{DISTRO}-demo-nodes-cpp`` package called "
"``parameter_blackboard``; it can be run with:"
msgstr ""

#: ../../source/Concepts/Basic/About-Parameters.rst:134
#: 344f8db62887437491f3212e19741eb5
msgid ""
"The code for the ``parameter_blackboard`` is `here "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/parameters/parameter_blackboard.cpp>`__."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:7
#: 5e5260ba68d04dd295c82c11ab389d01
msgid ""
"In ROS 2, a service refers to a remote procedure call. In other words, a "
"node can make a remote procedure call to another node which will do a "
"computation and return a result."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:10
#: 26e0428e1d574f39a5ddd7b64eab8ed8
msgid "This structure is reflected in how a service message definition looks:"
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:18
#: 11969da12c2b43e4a6b2f3c7b7187ad6
msgid ""
"In ROS 2, services are expected to return quickly, as the client is "
"generally waiting on the result. Services should never be used for longer"
" running processes, in particular processes that might need to be "
"preempted for exceptional situations. If you have a service that will be "
"doing a long-running computation, consider using an :doc:`action <About-"
"Actions>` instead."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:22
#: 3e8e1f393da54c0aa36cf2d1d9843c05
msgid ""
"Services are identified by a service name, which looks much like a topic "
"name (but is in a different namespace)."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:24
#: 1d3b7c2aac2349af8ec5362f56aaa788
msgid ""
"A service consists of two parts: the service server and the service "
"client."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:27
#: f360758f33c94ae3add30aaa1e8b2922
msgid "Service server"
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:29
#: 984f197620984f24a56c983ffba2d369
msgid ""
"A service server is the entity that will accept a remote procedure "
"request, and perform some computation on it. For instance, suppose the "
"ROS 2 message contains the following:"
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:39
#: f25b5c8817e04c08b4817f99a2e338ca
msgid ""
"The service server would be the entity that receives this message, adds "
"``a`` and ``b`` together, and returns the ``sum``."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:43
#: 23c87e92bc6f47c8b9519b6faf260fdd
msgid ""
"There should only ever be one service server per service name. It is "
"undefined which service server will receive client requests in the case "
"of multiple service servers on the same service name."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:47
#: 6d94a7c03ce346c38f986c5131afe6f5
msgid "Service client"
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:49
#: 3a5a5a037e8946029347b7cdd95f0218
msgid ""
"A service client is an entity that will request a remote service server "
"to perform a computation on its behalf. Following from the example above,"
" the service client is the entity that creates the initial message "
"containing ``a`` and ``b``, and waits for the service server to compute "
"the sum and return the result."
msgstr ""

#: ../../source/Concepts/Basic/About-Services.rst:52
#: dda7eb0651544d49ab537e55c2e6c79f
msgid ""
"Unlike the service server, there can be arbitrary numbers of service "
"clients using the same service name."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:2
#: b26fbfcd9312427c94b8662fa014ec8b
msgid "Topics"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:7
#: 27066859f5f14f23b958b49599de9c45
msgid ""
"Topics are one of the three primary styles of interfaces provided by ROS "
"2. Topics should be used for continuous data streams, like sensor data, "
"robot state, etc."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:10
#: 0957a7a2c7254c8590d4b64518ea84f0
msgid ""
"As stated earlier, ROS 2 is a strongly-typed, anonymous publish/subscribe"
" system. Let's break down that sentence and explain it a bit more."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:14
#: 17658b38fd37421ea1024d94ceeee715
msgid "Publish/Subscribe"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:16
#: 5bd93db6d61a4ee5aa9608353ef8bbc0
msgid ""
"A publish/subscribe system is one in which there are producers of data "
"(publishers) and consumers of data (subscribers). The publishers and "
"subscribers know how to contact each other through the concept of a "
"\"topic\", which is a common name so that the entites can find each "
"other. For instance, when you create a publisher, you must also give it a"
" string that is the name of the topic; the same goes for the subscriber. "
"Any publishers and subscribers that are on the same topic name can "
"directly communicate with each other. There may be zero or more "
"publishers and zero or more subscribers on any particular topic. When "
"data is published to the topic by any of the publishers, all subscribers "
"in the system will receive the data. This system is also known as a "
"\"bus\", since it somewhat resembles a device bus from electrical "
"engineering. This concept of a bus is part of what makes ROS 2 a powerful"
" and flexible system. Publishers and subscribers can come and go as "
"needed, meaning that debugging and introspection are natural extensions "
"to the system. For instance, if you want to record data, you can use the "
"``ros2 bag record`` command. Under the hood, ``ros2 bag record`` creates "
"a new subscriber to whatever topic you tell it, without interrupting the "
"flow of data to the other parts of the system."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:29
#: c5f065f79335428182416309387efe81
msgid "Anonymous"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:31
#: a96767ee8f624039809ae66590fc7a9a
msgid ""
"Another fact mentioned in the introduction is that ROS 2 is "
"\"anonymous\". This means that when a subscriber gets a piece of data, it"
" doesn't generally know or care which publisher originally sent it "
"(though it can find out if it wants). The benefit to this architecture is"
" that publishers and subscribers can be swapped out at will without "
"affecting the rest of the system."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:36
#: 98c8788526b34d39a534402d5db443a6
msgid "Strongly-typed"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:38
#: fcc4a9dc693c4fb1aa43a225294e12c1
msgid ""
"Finally, the introduction also mentioned that the publish/subscribe "
"system is \"strongly-typed\". That has two meanings in this context:"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:41
#: bf6436c86f8c493fa902b75cbd444697
msgid ""
"The types of each field in a ROS message are typed, and that type is "
"enforced at various levels. For instance, if the ROS message contains:"
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:49
#: d17aacd0e3ca4ab78b845ec8c2849f94
msgid ""
"Then the code will ensure that ``field`` is always an unsigned integer "
"and that ``field2`` is always a string."
msgstr ""

#: ../../source/Concepts/Basic/About-Topics.rst:51
#: 2da4acb46bcf46a6a50a11338efbfd2c
msgid ""
"The semantics of each field are well-defined.  There is no automated "
"mechanism to ensure this, but all of the core ROS types have strong "
"semantics associated with them.  For instance, the IMU message contains a"
" 3-dimensional vector for the measured angular velocity, and each of the "
"dimensions is specified to be in radians/second.  Other interpretations "
"should not be placed into the message."
msgstr ""

#: ../../source/Concepts/Intermediate.rst:2 2c5e281120aa41f6b52d1f795accf51d
msgid "Intermediate Concepts"
msgstr ""

#: ../../source/Concepts/Intermediate.rst:4 293b3760d66b4044bc6f64ffc6ee9cac
msgid ""
"These are the concepts that further your understanding of a basic ROS 2 "
"system."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:6
#: 3015dc71dfca4aba868ec3fc41f31542
msgid "Composition"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:12
#: 3637d98b6be146709ab191243e47abb2
msgid "ROS 1 - Nodes vs. Nodelets"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:14
#: 6e4ab072477b4434b9df6b68f110a3e3
msgid ""
"In ROS 1 you can write your code either as a `ROS node "
"<https://wiki.ros.org/Nodes>`__ or as a `ROS nodelet "
"<https://wiki.ros.org/nodelet>`__. ROS 1 nodes are compiled into "
"executables. ROS 1 nodelets on the other hand are compiled into a shared "
"library which is then loaded at runtime by a container process."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:19
#: b5999ac60ae44d4fa609e7e0bb8ad6f2
msgid "ROS 2 - Unified API"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:21
#: 64648ccc3acb4f21b2deeff7b801b41f
msgid ""
"In ROS 2 the recommended way of writing your code is similar to a nodelet"
" - we call it a ``Component``. This makes it easy to add common concepts "
"to existing code, like a `life cycle "
"<https://design.ros2.org/articles/node_lifecycle.html>`__. Having "
"different APIs, which was the biggest drawback in ROS 1, is avoided in "
"ROS 2 since both approaches use the same API."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:27
#: 7f9e02f298444364acb46789ee88ba44
msgid ""
"It is still possible to use the node-like style of \"writing your own "
"main\" but for the common case it is not recommended."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:29
#: be6a53e0bca343ef9883b60cbc1d1d85
msgid ""
"By making the process layout a deploy-time decision the user can choose "
"between:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:31
#: a4adec1e3d4d42c1b392f5f5bef2fc38
msgid ""
"running multiple nodes in separate processes with the benefits of "
"process/fault isolation as well as easier debugging of individual nodes "
"and"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:32
#: 79e27ab724754c5894d3172027351e0a
msgid ""
"running multiple nodes in a single process with the lower overhead and "
"optionally more efficient communication (see :doc:`Intra Process "
"Communication <../../Tutorials/Demos/Intra-Process-Communication>`)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:34
#: a58dfd46adf645c5abd66e3b49d90076
msgid ""
"Additionally ``ros2 launch`` can be used to automate these actions "
"through specialized launch actions."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:37
#: 2a26d55d708c4171990988215ce8737e
msgid "Writing a Component"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:39
#: de902fd11183436eb3807364cf76202b
msgid ""
"Since a component is only built into a shared library, it doesn't have a "
"``main`` function (see `Talker source code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/talker_component.cpp>`__)."
" A component is commonly a subclass of ``rclcpp::Node``. Since it is not "
"in control of the thread, it shouldn't perform any long running or "
"blocking tasks in its constructor. Instead, it can use timers to get "
"periodic notifications. Additionally, it can create publishers, "
"subscriptions, servers, and clients."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:45
#: 1a753d2d368c42aab1ddb4ca301ff1fe
msgid ""
"An important aspect of making such a class a component is that the class "
"registers itself using macros from the package ``rclcpp_components`` (see"
" the last line in the source code). This makes the component discoverable"
" when its library is being loaded into a running process - it acts as "
"kind of an entry point."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:48
#: 86ce537b02a6468fbce31e2397e8e309
msgid ""
"Additionally, once a component is created, it must be registered with the"
" index to be discoverable by the tooling."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:59
#: ebd5e8c3619a4820b74d83d8eb41fd46
msgid ""
"In order for the component_container to be able to find desired "
"components, it must be executed or launched from a shell that has sourced"
" the corresponding workspace."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:62
#: a936b1d427f745c8bd47f6d4e4d33997
msgid "Using Components"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:64
#: 882e8cbff6f846c98baec819bbc55f55
msgid ""
"The `composition "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/composition>`__ "
"package contains a couple of different approaches on how to use "
"components. The three most common ones are:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:67
#: 622dd6376a7b4e1bbae416b50391874a
msgid ""
"Start a (`generic container process "
"<https://github.com/ros2/rclcpp/blob/{REPOS_FILE_BRANCH}/rclcpp_components/src/component_container.cpp>`__)"
" and call the ROS service `load_node "
"<https://github.com/ros2/rcl_interfaces/blob/{REPOS_FILE_BRANCH}/composition_interfaces/srv/LoadNode.srv>`__"
" offered by the container. The ROS service will then load the component "
"specified by the passed package name and library name and start executing"
" it within the running process. Instead of calling the ROS service "
"programmatically you can also use a `command line tool "
"<https://github.com/ros2/ros2cli/tree/{REPOS_FILE_BRANCH}/ros2component>`__"
" to invoke the ROS service with the passed command line arguments"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:70
#: 57bfc83e94b14742bb7cb79b908de0a5
msgid ""
"Create a `custom executable "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/composition/src/manual_composition.cpp>`__"
" containing multiple nodes which are known at compile time. This approach"
" requires that each component has a header file (which is not strictly "
"needed for the first case)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:72
#: 8587618e46a047bf827ab0aab247ad8e
msgid ""
"Create a launch file and use ``ros2 launch`` to create a container "
"process with multiple components loaded."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:75
#: cc5b560e7b0d41c9b6efff1d16272e6a
msgid "Practical application"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Composition.rst:77
#: 5f61a8cc743045ca8dfc37f0dfcaa5e9
msgid ""
"Try the :doc:`Composition demos "
"<../../Tutorials/Intermediate/Composition>`."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:6
#: 2372f91ab26646c183acfd0d246c578c
msgid "Cross-compilation"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:17
#: badaa530ad9547f1a53ffa41fc420aa4
msgid ""
"Open Robotics provides pre-built ROS 2 packages for multiple platforms, "
"but a number of developers still rely on `cross-compilation "
"<https://en.wikipedia.org/wiki/Cross_compiler>`__ for different reasons "
"such as:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:15
#: 59faaa50848f4525a725685e3e506f3c
msgid "The development machine does not match the target system."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:16
#: 31fa5c44375a4f139f89ff8e358d03a4
msgid ""
"Tuning the build for specific core architecture (e.g. setting "
"-mcpu=cortex-a53 -mfpu=neon-fp-armv8 when building for Raspberry Pi3)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:17
#: 5cb22263f8f242cc87f3c9ddd444cce0
msgid ""
"Targeting a file system other than the ones supported by the pre-built "
"images released by Open Robotics."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:20
#: dfcfdecf1f6b4c08902c480bf86cd87f
msgid "How does it work ?"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:22
#: 645d7e9be68c428e9001fa250df44683
msgid ""
"Cross-compiling simple software (e.g. no dependencies on external "
"libraries) is relatively simple and only requiring a cross-compiler "
"toolchain to be used instead of the native toolchain."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:27
#: 51b0594c81894b4fad18bf8d63a30cd5
msgid "There are a number of factors which make this process more complex:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:25
#: e5084cc0cf9545b8a12c9a4a4ccd525d
msgid ""
"The software being built must support the target architecture. "
"Architecture specific code must be properly isolated and enabled during "
"the build according to the target architecture. Examples include assembly"
" code."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:26
#: 531a9520b03f4cafaa755b7112e5c332
msgid ""
"All dependencies (e.g. libraries) must be present, either as pre-built or"
" cross-compiled packages, before the target software using them is cross-"
"compiled."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:27
#: 94aca6bb24a94b1a847de938d5b324ca
msgid ""
"When building software stacks (as opposed to standalone software) using "
"build tools (e.g. colcon), it is expected that the build tool provides a "
"mechanism to allow the developer to enable cross-compilation on the "
"underlying build system used by each piece of software in the stack."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:30
#: 285d69dc5eef41a98f4c09d0ed98aa1b
msgid "Cross-compiling ROS 2"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:32
#: 37306828e1b04e6b96426d85e97bc706
msgid ""
"The ROS 2 cross-compile tool is under shared ownership of Open Robotics "
"and ROS Tooling Working Group. It is a Python script that compiles ROS 2 "
"source files for supported target architectures using an emulator in a "
"docker container. Detailed design of the tool can be found on `ROS 2 "
"design <https://design.ros2.org/articles/cc_build_tools.html>`__. "
"Instructions to use the tool are in the `cross_compile package "
"<https://github.com/ros-tooling/cross_compile>`__."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Cross-Compilation.rst:37
#: a4c8349035c94efab14a45cce3c510f8
msgid ""
"If you are using an older version, please follow the :doc:`cross-"
"compilation guide <../../How-To-Guides/Cross-compilation>`."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:7
#: 39243824605a4a4faca87fdf2bd73cbf
msgid "Different ROS 2 middleware vendors"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:12
#: 8b41787b3efa43e0b3b7b221b375155c
msgid ""
"ROS 2 is built on top of DDS/RTPS as its middleware, which provides "
"discovery, serialization and transportation. `This article "
"<https://design.ros2.org/articles/ros_on_dds.html>`__ explains the "
"motivation behind using DDS implementations, and/or the RTPS wire "
"protocol of DDS, in detail. In summary, DDS is an end-to-end middleware "
"that provides features which are relevant to ROS systems, such as "
"distributed discovery (not centralized like in ROS 1) and control over "
"different \"Quality of Service\" options for the transportation."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:16
#: c065ddc7f4fa46ee947f0f286c0d0eef
msgid ""
"`DDS <https://www.omg.org/omg-dds-portal>`__ is an industry standard "
"which is implemented by a range of vendors, such as RTI's `Connext DDS "
"<https://www.rti.com/products/>`__, eProsima's `Fast DDS <https://fast-"
"dds.docs.eprosima.com/>`__, Eclipse's `Cyclone DDS "
"<https://projects.eclipse.org/projects/iot.cyclonedds>`__, or "
"GurumNetworks's `GurumDDS <https://gurum.cc/index_eng>`__. RTPS (a.k.a. "
"`DDSI-RTPS <https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`__\\ ) "
"is the wire protocol used by DDS to communicate over the network."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:19
#: b5c6886f1c364d85a17334571819be53
msgid ""
"ROS 2 supports multiple DDS/RTPS implementations because it is not "
"necessarily \"one size fits all\" when it comes to choosing a "
"vendor/implementation. There are many factors you might consider while "
"choosing a middleware implementation: logistical considerations like the "
"license, or technical considerations like platform availability, or "
"computation footprint. Vendors may provide more than one DDS or RTPS "
"implementation targeted at meeting different needs. For example, RTI has "
"a few variations of their Connext implementation that vary in purpose, "
"like one that specifically targets microcontrollers and another which "
"targets applications requiring special safety certifications (we only "
"support their standard desktop version at this time)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:24
#: 8c894262a882447cbaa61fc4624fd3c2
msgid ""
"In order to use a DDS/RTPS implementation with ROS 2, a \"\\ **R**\\ OS "
"**M**\\ iddle\\ **w**\\ are interface\" (a.k.a. ``rmw`` interface or just"
" ``rmw``\\ ) package needs to be created that implements the abstract ROS"
" middleware interface using the DDS or RTPS implementation's API and "
"tools. It's a lot of work to implement and maintain RMW packages for "
"supporting DDS implementations, but supporting at least a few "
"implementations is important for ensuring that the ROS 2 codebase is not "
"tied to any one particular implementation, as users may wish to switch "
"out implementations depending on their project's needs."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:28
#: 1211a5d9f3b548e9a107f4821c074c66
msgid "Supported RMW implementations"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:33
#: 6a2b7efb9da043339c0934bc5b817b06
msgid "Product name"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:34
#: 3dfb0371adac4e188b6f199f4155930a
msgid "License"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:35
#: c0d38c12f2e1474aab95a38c4d09f519
msgid "RMW implementation"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:36
#: a7a40d6ccf30494cb4e221d994669d1a
msgid "Status"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:37
#: bee8c311a74742d099e15edda787f8a3
msgid "eProsima *Fast DDS*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:38
#: 9dfe64640645419a8c6586faecb18767
msgid "Apache 2"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:39
#: e564b9d51eca47dfae73f4af7a6d48d6
msgid "``rmw_fastrtps_cpp``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:40
#: ccf763bc560d4dc3963d7e53420a1f61
msgid "Full support. Default RMW. Packaged with binary releases."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:41
#: a8416eb786bf4fbcb0c50f5ce32dbee1
msgid "Eclipse *Cyclone DDS*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:42
#: 4d3a857018bb4bf38ea6dd067c9e8fbe
msgid "Eclipse Public License v2.0"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:43
#: 154bd66778f947c6ab96d8ebe5cd698e
msgid "``rmw_cyclonedds_cpp``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:44
#: b46032ce88644c3fa23cd8ff286b5e95
msgid "Full support. Packaged with binary releases."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:45
#: 780317bdc7e3414ebbc97d0f31c7efd8
msgid "RTI *Connext DDS*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:46
#: f661eba464444a2cadffb52e5b441691
msgid "commercial, research"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:47
#: fa1c4329ab964f0baaff9cd5c10d0b7a
msgid "``rmw_connextdds``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:48
#: 7f67ff9c1242472fa368640bb500e702
msgid ""
"Full support. Support included in binaries, but Connext installed "
"separately."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:49
#: 16ac02246c594b31a672aa3af106cd71
msgid "GurumNetworks *GurumDDS*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:50
#: cacff80f39be4bbe9d7c1f0e657aa427
msgid "commercial"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:51
#: fab94f069749497abc5ae0ec3c0164aa
msgid "``rmw_gurumdds_cpp``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:52
#: bff2aa7abd3f4f23b169a617c2080e28
msgid ""
"Community support. Support included in binaries, but GurumDDS installed "
"separately."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:54
#: d7139e2156324601b10f8b0f8b0b534b
msgid ""
"For practical information on working with multiple RMW implementations, "
"see the :doc:`\"Working with multiple RMW implementations\" <../../How-"
"To-Guides/Working-with-multiple-RMW-implementations>` tutorial."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:57
#: 08407280fe84455bbc7f236a940a8396
msgid "Multiple RMW implementations"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:59
#: 7b4b1cbb4cb644f098c9dbbe96c15e06
msgid ""
"The ROS 2 binary releases for currently active distros have built-in "
"support for several RMW implementations out of the box (Fast DDS, RTI "
"Connext Pro, Eclipse Cyclone DDS, GurumNetworks GurumDDS). The default is"
" Fast DDS, which works without any additional installation steps because "
"we distribute it with our binary packages."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:62
#: 010bb80c6ef742428adc9e8266c45ee5
msgid ""
"Other RMWs like Cyclone DDS, Connext or GurumDDS can be enabled by "
":doc:`installing additional packages <../../Installation/DDS-"
"Implementations>`, but without having to rebuild anything or replace any "
"existing packages."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:64
#: 586d2a5fc390476d84ee56e360a07524
msgid ""
"A ROS 2 workspace that has been built from source may build and install "
"multiple RMW implementations simultaneously. While the core ROS 2 code is"
" being compiled, any RMW implementation that is found will be built if "
"the relevant DDS/RTPS implementation has been installed properly and the "
"relevant environment variables have been configured. For example, if the "
"code for the `RMW package for RTI Connext DDS "
"<https://github.com/ros2/rmw_connextdds>`__ is in the workspace, it will "
"be built if an installation of RTI's Connext Pro can also be found."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:68
#: ad7bcbfb82e240c1b870f7d8dd026e30
msgid ""
"For many cases you will find that nodes using different RMW "
"implementations are able to communicate, however this is not true under "
"all circumstances. Here is a list of inter-vendor communication "
"configurations that are not supported:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:71
#: 51f30c09a0ca475495293b418d6bbdde
msgid "Fast DDS <-> Connext"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:72
#: e3bbc664df634102b447f25c84cab940
msgid ""
"``WString`` published by Fast DDS can't be received correctly by Connext "
"on macOS"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:74
#: 2011a0ad1f52478fa39feb176b3cb337
msgid "Connext <-> Cyclone DDS"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:74
#: d1130a32975144bf9e2cc0279cc0e435
msgid "does not support pub/sub communication for ``WString``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:77
#: bcd854ec0e534adeb88346335abff49e
msgid "Default RMW implementation"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:79
#: 308b634312394981bfe5e889746ceed2
msgid ""
"If a ROS 2 workspace has multiple RMW implementations, Fast DDS is "
"selected as the default RMW implementation if it is available. If the "
"Fast DDS RMW implementation is not installed, the RMW implementation with"
" the first RMW implementation identifier in alphabetical order will be "
"used. The implementation identifier is the name of the ROS package that "
"provides the RMW implementation, e.g. ``rmw_cyclonedds_cpp``. For "
"example, if both ``rmw_cyclonedds_cpp`` and ``rmw_connextdds`` ROS "
"packages are installed, ``rmw_connextdds`` would be the default. If "
"``rmw_fastrtps_cpp`` is ever installed, it would be the default."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Different-Middleware-Vendors.rst:85
#: 44e7b40a1d674d53bbd6951ad13f0999
msgid ""
"See the :doc:`guide <../../How-To-Guides/Working-with-multiple-RMW-"
"implementations>` for how to specify which RMW implementation is to be "
"used when running the ROS 2 examples."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:6
#: d76a868de2804781a1ef1dd9d8838109
msgid "The ROS_DOMAIN_ID"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:14
#: 74d1edda604243d0a182adfc6d837bc1
msgid ""
"As explained elsewhere, the default middleware that ROS 2 uses for "
"communication is DDS. In DDS, the primary mechanism for having different "
"logical networks share a physical network is known as the Domain ID. ROS "
"2 nodes on the same domain can freely discover and send messages to each "
"other, while ROS 2 nodes on different domains cannot. All ROS 2 nodes use"
" domain ID 0 by default. To avoid interference between different groups "
"of computers running ROS 2 on the same network, a different domain ID "
"should be set for each group."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:21
#: a06c1f4e609047678c528cef19dcf8f4
msgid "Choosing a domain ID (short version)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:23
#: e7f6dabd2758486a98df41aa1f4f1a19
msgid ""
"The text below explains the derivation of the range of domain IDs that "
"should be used in ROS 2. To skip that background and just choose a safe "
"number, simply choose a domain ID between 0 and 101, inclusive."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:28
#: bc47566e57d84517a0caacc72613b885
msgid "Choosing a domain ID (long version)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:30
#: 5f5167fac16d46f9a589af8c94b5e052
msgid ""
"The domain ID is used by DDS to compute the UDP ports that will be used "
"for discovery and communication. See `this article "
"<https://community.rti.com/content/forum-topic/statically-configure-"
"firewall-let-omg-dds-traffic-through>`__ for details on how the ports are"
" computed. Remembering our basic networking, the UDP port is an `unsigned"
" 16-bit integer "
"<https://en.wikipedia.org/wiki/User_Datagram_Protocol#Ports>`__. Thus, "
"the highest port number that can be allocated is 65535. Doing some math "
"with the formula in the article above, this means that the highest domain"
" ID that can possibly be assigned is 232, while the lowest that can be "
"assigned is 0."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:37
#: 7d7e1283136447ae83aec9c462ff76e3
msgid "Platform-specific constraints"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:39
#: 0a5028e0fdc4473fbaa83e6b88b2e73e
msgid ""
"For maximum compatibility, some additional platform-specific constraints "
"should be followed when choosing a domain ID. In particular, it is best "
"to avoid allocating domain IDs in the operating system's `ephemeral port "
"range <https://en.wikipedia.org/wiki/Ephemeral_port>`__. This avoids "
"possible conflicts between the ports used by the ROS 2 nodes and other "
"networking services on the computers."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:43
#: 752ed6b05efe43bab612c404c217abea
msgid "Here are some platform-specific notes about ephemeral ports."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:47
#: 6307b354b2544ee9b22e2635877331c6
msgid "Linux"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:49
#: ec3ac0b783ac460cb02034ef6aa374e0
msgid ""
"By default, the Linux kernel uses ports 32768-60999 for ephemeral ports. "
"This means that domain IDs 0-101 and 215-232 can be safely used without "
"colliding with ephemeral ports. The ephemeral port range is configurable "
"in Linux by setting custom values in "
"``/proc/sys/net/ipv4/ip_local_port_range``. If a custom ephemeral port "
"range is used, the above numbers may have to be adjusted accordingly."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:54
#: 56a151c9b0524324af9500b83ab981f8
msgid "macOS"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:56
#: d9e62bec3c3b4890a1ef9d2b18afc9d8
msgid ""
"By default, the ephemeral port range on macOS is 49152-65535. This means "
"that domain IDs 0-166 can be safely used without colliding with ephemeral"
" ports. The ephemeral port range is configurable in macOS by setting "
"custom sysctl values for ``net.inet.ip.portrange.first`` and "
"``net.inet.ip.portrange.last``. If a custom ephemeral port range is used,"
" the above numbers may have to be adjusted accordingly."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:61
#: 23b3d6776b9448eb8fc03fdde68c6c93
msgid "Windows"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:63
#: f2ac1f78db604c6cbd59138d976da9a8
msgid ""
"By default, the ephemeral port range on Windows is 49152-65535. This "
"means that domain IDs 0-166 can be safely used without colliding with "
"ephemeral ports. The ephemeral port range is configurable in Windows by "
"`using netsh <https://docs.microsoft.com/en-us/troubleshoot/windows-"
"server/networking/default-dynamic-port-range-tcpip-chang>`__. If a custom"
" ephemeral port range is used, the above numbers may have to be adjusted "
"accordingly."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:69
#: 2f330276916a4a979b3a84e0e5ac765c
msgid "Participant constraints"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:71
#: d1dfa7ee31694e6da58f37b5ebe590f6
msgid ""
"For each ROS 2 process running on a computer, one DDS \"participant\" is "
"created. Since each DDS participant takes up two ports on the computer, "
"running more than 120 ROS 2 processes on one computer may spill over into"
" other domain IDs or the ephemeral ports."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:74
#: c89da0438ecd459eb43a3cb24826a795
msgid "To see why, consider the domain IDs 1 and 2."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:76
#: 927006fba2b5455c8ffaa79bb3ba6c7b
msgid "Domain ID 1 uses port 7650 and 7651 for multicast."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:77
#: d99104318ea84d89a47801e933b1973f
msgid "Domain ID 2 uses port 7900 and 7901 for multicast."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:78
#: e991e8b5872f4c8c83eaa3a70a839f51
msgid ""
"When creating the 1st process (zeroth participant) in domain ID 1, the "
"ports 7660 and 7661 are used for unicast."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:79
#: 80f17dd933d4451eb535d9c39414b747
msgid ""
"When creating the 120th process (119th participant) in domain ID 1, the "
"ports 7898 and 7899 are used for unicast."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:80
#: f2f026482e4149b9979dad0d1bcd97ab
msgid ""
"When creating the 121st process (120th participant) in domain ID 1, the "
"ports 7900 and 7901 are used for unicast and overlap with domain ID 2."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:82
#: d5bd4ab534ad458dbf1d5b72c50ba42f
msgid ""
"If it is known that the computer will only ever be on a single domain ID "
"at a time, and the domain ID is low enough, it is safe to create more ROS"
" 2 processes than this."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:84
#: c7860b3430924b4691bebdfb38943711
msgid ""
"When choosing a domain ID that is near the top of the range of platform-"
"specific domain IDs, one additional constraint should be considered."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:86
#: ebbb7b02ad904044a08a6e32415c57a1
msgid "For instance, assume a Linux computer with a domain ID of 101:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:88
#: 59c83cd1f0004dbdbf7ff7c3a57793c7
msgid ""
"The zero'th ROS 2 process on the computer will connect to ports 32650, "
"32651, 32660, and 32661."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:89
#: c212018c832d4cb7b4dda2b27d308220
msgid ""
"The first ROS 2 process on the computer will connect to ports 32650, "
"32651, 32662, and 32663."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:90
#: 70ffcd91e49646c28dfe4ce4e2320c40
msgid ""
"The 53rd ROS 2 process on the computer will connect to ports 32650, "
"32651, 32766, and 32767."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:91
#: ed12d22d1ccb450988f733e026497193
msgid ""
"The 54th ROS 2 process on the computer will connect to ports 32650, "
"32651, 32768, and 32769, running into the ephemeral port range."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:93
#: 622159aec2294a63a5396727665dd681
msgid ""
"Thus the maximum number of processes that should be created when using "
"domain ID 101 on Linux is 54. Similarly, the maximum number of processes "
"that should be created when using domain ID 232 on Linux is 63, as the "
"maximum port number is 65535."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:96
#: 56284edace6d4c74b0864a1d90bc35f0
msgid ""
"The situation is similar on macOS and Windows, though the numbers are "
"different. On macOS and Windows, when choosing a domain ID of 166 (the "
"top of the range), the maximum number of ROS 2 processes that can be "
"created on a computer before running into the ephemeral port range is "
"120."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Domain-ID.rst:100
#: b2d82bf0dc1b4c84bd70bbd4f2cd99bd
msgid "Domain ID to UDP Port Calculator"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:6
#: 53232b619d604b6fbe09c2a140c42aba
msgid "Executors"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:14
#: 2cc44e1c1cef4b28af0fa7b1b378899d
msgid ""
"Execution management in ROS 2 is handled by Executors. An Executor uses "
"one or more threads of the underlying operating system to invoke the "
"callbacks of subscriptions, timers, service servers, action servers, etc."
" on incoming messages and events. The explicit Executor class (in "
"`executor.hpp "
"<https://github.com/ros2/rclcpp/blob/{REPOS_FILE_BRANCH}/rclcpp/include/rclcpp/executor.hpp>`_"
" in rclcpp, in `executors.py "
"<https://github.com/ros2/rclpy/blob/{REPOS_FILE_BRANCH}/rclpy/rclpy/executors.py>`_"
" in rclpy, or in `executor.h "
"<https://github.com/ros2/rclc/blob/master/rclc/include/rclc/executor.h>`_"
" in rclc) provides more control over execution management than the spin "
"mechanism in ROS 1, although the basic API is very similar."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:18
#: 8b0e8fd61f8246dc8d550212acf1ba9f
msgid "In the following, we focus on the C++ Client Library *rclcpp*."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:21
#: 54c34da6eace4fc793b9b6ac355cce47
msgid "Basic use"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:23
#: 2551ea12aa9b41839179a0295006de3f
msgid ""
"In the simplest case, the main thread is used for processing the incoming"
" messages and events of a Node by calling ``rclcpp::spin(..)`` as "
"follows:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:44
#: 1da96cb4204a47dcb8b28d87206c2ac5
msgid ""
"The call to ``spin(node)`` basically expands to an instantiation and "
"invocation of the Single-Threaded Executor, which is the simplest "
"Executor:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:52
#: ba81a1058e474726a9dc3bc4fb69f3e3
msgid ""
"By invoking ``spin()`` of the Executor instance, the current thread "
"starts querying the rcl and middleware layers for incoming messages and "
"other events and calls the corresponding callback functions until the "
"node shuts down. In order not to counteract the QoS settings of the "
"middleware, an incoming message is not stored in a queue on the Client "
"Library layer but kept in the middleware until it is taken for processing"
" by a callback function. (This is a crucial difference to ROS 1.) A *wait"
" set* is used to inform the Executor about available messages on the "
"middleware layer, with one binary flag per queue. The *wait set* is also "
"used to detect when timers expire."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:60
#: d22c951ec0ca4044ae2d0239820b6f35
msgid ""
"The Single-Threaded Executor is also used by the container process for "
":doc:`components <./About-Composition>`, i.e. in all cases where nodes "
"are created and executed without an explicit main function."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:63
#: 270767cb2c124baca547eba8895954b1
msgid "Types of Executors"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:65
#: 098f36e620b340cdae3976b525492812
msgid ""
"Currently, rclcpp provides three Executor types, derived from a shared "
"parent class:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:81
#: c890d094ccef402987d681737d76304d
msgid ""
"The *Multi-Threaded Executor* creates a configurable number of threads to"
" allow for processing multiple messages or events in parallel. The "
"*Static Single-Threaded Executor* optimizes the runtime costs for "
"scanning the structure of a node in terms of subscriptions, timers, "
"service servers, action servers, etc. It performs this scan only once "
"when the node is added, while the other two executors regularly scan for "
"such changes. Therefore, the Static Single-Threaded Executor should be "
"used only with nodes that create all subscriptions, timers, etc. during "
"initialization."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:86
#: 7b86c061ccf24cba94c857bed2f8a711
msgid ""
"All three executors can be used with multiple nodes by calling "
"``add_node(..)`` for each node."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:100
#: 71a4789df9bb48f0bd36f1cbcd20bf52
msgid ""
"In the above example, the one thread of a Static Single-Threaded Executor"
" is used to serve three nodes together. In case of a Multi-Threaded "
"Executor, the actual parallelism depends on the callback groups."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:104
#: abece74344634ed99176a411a4563f97
msgid "Callback groups"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:106
#: 9066d52948604b80b835ef917db56987
msgid ""
"ROS 2 allows organizing the callbacks of a node in groups. In rclcpp, "
"such a *callback group* can be created by the ``create_callback_group`` "
"function of the Node class. In rclpy, the same is done by calling the "
"constructor of the specific callback group type. The callback group must "
"be stored throughout execution of the node (eg. as a class member), or "
"otherwise the executor won't be able to trigger the callbacks. Then, this"
" callback group can be specified when creating a subscription, timer, "
"etc. - for example by the subscription options:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:114
#: ../../source/Concepts/Intermediate/About-Logging.rst:48
#: ../../source/Concepts/Intermediate/About-Logging.rst:184
#: 3d74e7c5724446828f7089f5bc8cc238 6652512f86d64b8fa33b6554b6cb400c
#: 73e07ab2c912411ba9ced12f90e77457
msgid "C++"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:125
#: ../../source/Concepts/Intermediate/About-Logging.rst:71
#: ../../source/Concepts/Intermediate/About-Logging.rst:190
#: 5e337ff90bac4f58aa0ff80bf20bcdee 79eb01e53f9a45248569743f43ea8647
#: c9c84a5fe118485bb9a2701aa6724588
msgid "Python"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:133
#: 353f3ad6cc48478282b4c9375cd28282
msgid ""
"All subscriptions, timers, etc. that are created without the indication "
"of a callback group are assigned to the *default callback group*. The "
"default callback group can be queried via "
"``NodeBaseInterface::get_default_callback_group()`` in rclcpp and by "
"``Node.default_callback_group`` in rclpy."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:137
#: 6134bd33af3c4631b9c74aa084ee881d
msgid ""
"There are two types of callback groups, where the type has to be "
"specified at instantiation time:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:139
#: 34e8cdd0f62f4fc087edf25a9fc87ceb
msgid ""
"*Mutually exclusive:* Callbacks of this group must not be executed in "
"parallel."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:140
#: eaeac77f25874adaab206399096b13eb
msgid "*Reentrant:* Callbacks of this group may be executed in parallel."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:142
#: 943e98f6b6df46bc921416b96d8395ef
msgid ""
"Callbacks of different callback groups may always be executed in "
"parallel. The Multi-Threaded Executor uses its threads as a pool to "
"process as many callbacks as possible in parallel according to these "
"conditions. For tips on how to use callback groups efficiently, see "
":doc:`Using Callback Groups <../../How-To-Guides/Using-callback-groups>`."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:146
#: 39b6bd320e1140b697e133d6a312acc2
msgid ""
"The Executor base class in rclcpp also has the function "
"``add_callback_group(..)``, which allows distributing callback groups to "
"different Executors. By configuring the underlying threads using the "
"operating system scheduler, specific callbacks can be prioritized over "
"other callbacks. For example, the subscriptions and timers of a control "
"loop can be prioritized over all other subscriptions and standard "
"services of a node. The `examples_rclcpp_cbg_executor package "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp/executors/cbg_executor>`_"
" provides a demo of this mechanism."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:152
#: 90bc1cf238fb4c8dbd3e2b8c8f4d6580
msgid "Scheduling semantics"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:154
#: 6daf85eb92814642ba6175bc92164133
msgid ""
"If the processing time of the callbacks is shorter than the period with "
"which messages and events occur, the Executor basically processes them in"
" FIFO order. However, if the processing time of some callbacks is longer,"
" messages and events will be queued on the lower layers of the stack. The"
" wait set mechanism reports only very little information about these "
"queues to the Executor. In detail, it only reports whether there are any "
"messages for a certain topic or not. The Executor uses this information "
"to process the messages (including services and actions) in a round-robin"
" fashion - but not in FIFO order. The following flow diagram visualizes "
"this scheduling semantics."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:163
#: d8e841ff83004a2a96948581360b2c3a
msgid ""
"This semantics was first described in a `paper by Casini et al. at ECRTS "
"2019 <https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf/LIPIcs-"
"ECRTS-2019-6.pdf>`_. (Note: The paper also explains that timer events are"
" prioritized over all other messages. `This prioritization was removed in"
" Eloquent. <https://github.com/ros2/rclcpp/pull/841>`_)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:168
#: 2dd51d9b16b0425dbb89d5c8c339bb17
msgid "Outlook"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:170
#: 61c8c016b0e1472a9a167e87d9b0c970
msgid ""
"While the three Executors of rclcpp work well for most applications, "
"there are some issues that make them not suitable for real-time "
"applications, which require well-defined execution times, determinism, "
"and custom control over the execution order. Here is a summary of some of"
" these issues:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:173
#: 90517e48f54546d3acf29152faf56446
msgid ""
"Complex and mixed scheduling semantics. Ideally you want well defined "
"scheduling semantics to perform a formal timing analysis."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:175
#: a40a76fa62a34636a2bd5f4369617e61
msgid ""
"Callbacks may suffer from priority inversion. Higher priority callbacks "
"may be blocked by lower priority callbacks."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:177
#: adaf6ac0bbf74af6aa259116b235649e
msgid "No explicit control over the callbacks execution order."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:178
#: ab7d2cbb8a0b435c938b02b4102c31b3
msgid "No built-in control over triggering for specific topics."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:180
#: 50d27a6392924ce4b8b633369e127d15
msgid ""
"Additionally, the executor overhead in terms of CPU and memory usage is "
"considerable. The Static Single-Threaded Executor reduces this overhead "
"greatly but it might not be enough for some applications."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:183
#: 123e78d935404b3ea3dea84750cf4a3b
msgid "These issues have been partially addressed by the following developments:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:185
#: dc901194dda846d6bab7a5483d6b0ec2
msgid ""
"`rclcpp WaitSet "
"<https://github.com/ros2/rclcpp/blob/{REPOS_FILE_BRANCH}/rclcpp/include/rclcpp/wait_set.hpp>`_:"
" The ``WaitSet`` class of rclcpp allows waiting directly on "
"subscriptions, timers, service servers, action servers, etc. instead of "
"using an Executor. It can be used to implement deterministic, user-"
"defined processing sequences, possibly processing multiple messages from "
"different subscriptions together. The `examples_rclcpp_wait_set package "
"<https://github.com/ros2/examples/tree/{REPOS_FILE_BRANCH}/rclcpp/wait_set>`_"
" provides several examples for the use of this user-level wait set "
"mechanism."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:188
#: b6a224f8ba694f52ad6bb055a278be62
msgid ""
"`rclc Executor "
"<https://github.com/ros2/rclc/blob/master/rclc/include/rclc/executor.h>`_:"
" This Executor from the C Client Library *rclc*, developed for micro-ROS,"
" gives the user fine-grained control over the execution order of "
"callbacks and allows for custom trigger conditions to activate callbacks."
" Furthermore, it implements ideas of the Logical Execution Time (LET) "
"semantics."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:192
#: b69667a17a94465f9ccabb136b25864b
msgid "Further information"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:194
#: 6466dfbb2fcd4050929d377f7e15924d
msgid ""
"Michael Pöhnl et al.: `\"ROS 2 Executor: How to make it efficient, real-"
"time and deterministic?\" <https://www.apex.ai/roscon-21>`_. Workshop at "
"ROS World 2021. Virtual event. 19 October 2021."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:195
#: 4fb2bad38c9a4006b4edb8bbb3c07740
msgid ""
"Ralph Lange: `\"Advanced Execution Management with ROS 2\" "
"<https://www.youtube.com/watch?v=Sz-nllmtcc8&t=109s>`_. ROS Industrial "
"Conference. Virtual event. 16 December 2020."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Executors.rst:196
#: 9b08be08a72a42d793cd33d9d547a5a8
msgid ""
"Daniel Casini, Tobias Blass, Ingo Lütkebohle, and Björn Brandenburg: "
"`“Response-Time Analysis of ROS 2 Processing Chains under Reservation-"
"Based Scheduling” "
"<https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf/LIPIcs-"
"ECRTS-2019-6.pdf>`_, Proc. of 31st ECRTS 2019, Stuttgart, Germany, July "
"2019."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:7
#: 4e060c71cf854115b5340513722170c0
msgid "Logging and logger configuration"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:15
#: 827840454cce42ac96d9faba5f737b9a
msgid ""
"The logging subsystem in ROS 2 aims to deliver logging messages to a "
"variety of targets, including:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:17
#: b6b8ba9c658a49cdbbf9a0b2e4a114fa
msgid "To the console (if one is attached)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:18
#: d2268b299dce4bbeae3f665b79894548
msgid "To log files on disk (if local storage is available)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:19
#: 82e9ad35d5904822989f44b3c25bf6c2
msgid "To the ``/rosout`` topic on the ROS 2 network"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:21
#: af6a539d82894feabaea7a0ec8d9d6ef
msgid ""
"By default, log messages in ROS 2 nodes will go out to the console (on "
"stderr), to log files on disk, and to the ``/rosout`` topic on the ROS 2 "
"network. All of the targets can be individually enabled or disabled on a "
"per-node basis."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:24
#: e79ca9ac22244943a6101e56d82c62be
msgid ""
"The rest of this document will go over some of the ideas behind the "
"logging subsystem."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:27
#: f701259f80aa4ac1a66c04e8b6f82db0
msgid "Severity level"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:29
#: ecc649b5d69942279846825b8ab744fb
msgid ""
"Log messages have a severity level associated with them: ``DEBUG``, "
"``INFO``, ``WARN``, ``ERROR`` or ``FATAL``, in ascending order."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:31
#: cdd3d0a531144e128028853d9a983847
msgid ""
"A logger will only process log messages with severity at or higher than a"
" specified level chosen for the logger."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:33
#: 81c0a5ce31ee4843917dfa0716910a17
msgid ""
"Each node has a logger associated with it that automatically includes the"
" node's name and namespace. If the node's name is externally remapped to "
"something other than what is defined in the source code, it will be "
"reflected in the logger name. Non-node loggers can also be created that "
"use a specific name."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:37
#: ee19b99d99f54fd8965f1dd17efb8d76
msgid ""
"Logger names represent a hierarchy. If the level of a logger named "
"\"abc.def\" is unset, it will defer to the level of its parent named "
"\"abc\", and if that level is also unset, the default logger level will "
"be used. When the level of logger \"abc\" is changed, all of its "
"descendants (e.g. \"abc.def\", \"abc.ghi.jkl\") will have their level "
"impacted unless their level has been explicitly set."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:42
#: d8afb313663c454990a38da0b99606f9
msgid "APIs"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:44
#: 4edd3779bac84dfabfa81ac159edb98b
msgid ""
"These are the APIs that end users of the ROS 2 logging infrastructure "
"should use, split up by client library."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:50
#: 6ca407908a634c28990d59661b257463
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}`` - output the given printf-style "
"message every time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:51
#: 0caec18b50f2493898f9c81feb9315ca
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_ONCE`` - output the given printf-"
"style message only the first time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:52
#: 3cc8115928ca4a40af0a20b6f4a55b03
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_EXPRESSION`` - output the given "
"printf-style message only if the given expression is true"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:53
#: 9e67e8315c27415a998ebcdbb5f05c16
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_FUNCTION`` - output the given "
"printf-style message only if the given function returns true"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:54
#: db591fd0f3f94c009389cbbd18037d30
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST`` - output the given "
"printf-style message all but the first time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:55
#: 74b0770d845f488bb82eb62bfe950d78
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_THROTTLE`` - output the given "
"printf-style message no more than the given rate in integer milliseconds"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:56
#: 27b0930590884da784ccfbc333ec9506
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST_THROTTLE`` - output the "
"given printf-style message no more than the given rate in integer "
"milliseconds, but skip the first"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:57
#: 1ae119563ea048989385c4cb13b1395a
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM`` - output the given C++ "
"stream-style message every time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:58
#: b536328451844fb9a464233feb737ca3
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_ONCE`` - output the given "
"C++ stream-style message only the first time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:59
#: 44657a1afba347a89461c5a4d81ecf09
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_EXPRESSION`` - output the "
"given C++ stream-style message only if the given expression is true"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:60
#: 1c16a90dc99647778e1a0a6379c31d6f
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_FUNCTION`` - output the "
"given C++ stream-style message only if the given function returns true"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:61
#: bf73dd36e37e4243a4e749144dac9522
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST`` - output the "
"given C++ stream-style message all but the first time this line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:62
#: 39560f2c55f74fc6b7e923827522689b
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_THROTTLE`` - output the "
"given C++ stream-style message no more than the given rate in integer "
"milliseconds"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:63
#: b4af9a278612463bb0f891e623541d66
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST_THROTTLE`` - "
"output the given C++ stream-style message no more than the given rate in "
"integer milliseconds, but skip the first"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:65
#: 9a40d1b7919e460b91ffa0b6a8e1d7f1
msgid ""
"Each of the above APIs takes an ``rclcpp::Logger`` object as the first "
"argument. This can be pulled from the node API by calling "
"``node->get_logger()`` (recommended), or by constructing a stand-alone "
"``rclcpp::Logger`` object."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:68
#: e87dd5121a2744999168583437dcd515
msgid ""
"``rcutils_logging_set_logger_level`` - Set the logging level for a "
"particular logger name to the given severity level"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:69
#: f0a83b1a6938482793b1526702063034
msgid ""
"``rcutils_logging_get_logger_effective_level`` - Given a logger name, "
"return the logger level (which may be unset)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:73
#: 776bad43e8a24da187f0c72141c7858d
msgid ""
"``logger.{debug,info,warning,error,fatal}`` - output the given Python "
"string to the logging infrastructure.  The calls accept the following "
"keyword args to control behavior:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:75
#: 00219206acc64f2ea58274cd66c84204
msgid ""
"``throttle_duration_sec`` - if not None, the duration of the throttle "
"interval in floating-point seconds"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:76
#: d9a9bb4bfa9d45b49825816cda7fb554
msgid ""
"``skip_first`` - if True, output the message all but the first time this "
"line is hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:77
#: a3659e08a0b544709dd418e0db3f8965
msgid ""
"``once`` - if True, only output the message the first time this line is "
"hit"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:79
#: 22caa7d21bb0437d938370632a4d6a83
msgid ""
"``rclpy.logging.set_logger_level`` - Set the logging level for a "
"particular logger name to the given severity level"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:80
#: 89f68d05cc3649c983a4116a9fed8383
msgid ""
"``rclpy.logging.get_logger_effective_level`` - Given a logger name, "
"return the logger level (which may be unset)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:83
#: 3dcda6b0b12a4e7880411f60d21bd6c0
msgid "Configuration"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:85
#: c88a488701a74b50b03017c6f3228ea2
msgid ""
"Since ``rclcpp`` and ``rclpy`` use the same underlying logging "
"infrastructure, the configuration options are the same."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:88
#: 9fd83f5f3cca4837abf0845a10fd4530
msgid "Environment variables"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:90
#: 2976868b73d84146b68f7ce53606abb0
msgid ""
"The following environment variables control some aspects of the ROS 2 "
"loggers. For each of the environment settings, note that this is a "
"process-wide setting, so it applies to all nodes in that process."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:93
#: 37d9327b3bb042d8bd65899b93a94ff7
msgid ""
"``ROS_LOG_DIR`` - Control the logging directory that is used for writing "
"logging messages to disk (if that is enabled).  If non-empty, use the "
"exact directory as specified in this variable.  If empty, use the "
"contents of the ``ROS_HOME`` environment variable to construct a path of "
"the form ``$ROS_HOME/.log``.  In all cases, the ``~`` character is "
"expanded to the user's HOME directory."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:94
#: 2874ab62b97b4961ab4132261f4a231c
msgid ""
"``ROS_HOME`` - Control the home directory that is used for various ROS "
"files, including logging and config files.  In the context of logging, "
"this variable is used to construct a path to a directory for log files.  "
"If non-empty, use the contents of this variable for the ROS_HOME path.  "
"In all cases, the ``~`` character is expanded to the users's HOME "
"directory."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:95
#: 6dd552d7e2c74dd4bae1ec68acb5969d
msgid ""
"``RCUTILS_LOGGING_USE_STDOUT`` - Control what stream output messages go "
"to.  If this is unset or 0, use stderr.  If this is 1, use stdout."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:96
#: b2d7a3249d794cfd858cc9b59104e4eb
msgid ""
"``RCUTILS_LOGGING_BUFFERED_STREAM`` - Control whether the logging stream "
"(as configured in ``RCUTILS_LOGGING_USE_STDOUT``) should be line buffered"
" or unbuffered.  If this is unset, use the default of the stream "
"(generally line buffered for stdout, and unbuffered for stderr).  If this"
" is 0, force the stream to be unbuffered.  If this is 1, force the stream"
" to be line buffered."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:97
#: 2353ba44c17040a489963fdee88896b0
msgid ""
"``RCUTILS_COLORIZED_OUTPUT`` - Control whether colors are used when "
"outputting messages.  If unset, automatically determine based on the "
"platform and whether the console is a TTY.  If 0, force disable using "
"colors for output.  If 1, force enable using colors for output."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:98
#: c49cfe80e4154f5eaa112b17fc5b6282
msgid ""
"``RCUTILS_CONSOLE_OUTPUT_FORMAT`` - Control the fields that are output "
"for each log message.  The available fields are:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:100
#: 8266ac50ea874958aea3024e22abe0a4
msgid "``{severity}`` - The severity level."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:101
#: 9256fd349572400cbb108b14bd91d655
msgid "``{name}`` - The name of the logger (may be empty)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:102
#: a957b808ccf041208b9b84f732677bd4
msgid "``{message}`` - The log message (may be empty)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:103
#: 35e90d4d6f4b489597da762eb36e6a7c
msgid ""
"``{function_name}`` - The function name this was called from (may be "
"empty)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:104
#: 78438e60185343f68be62389ac4b8df5
msgid "``{file_name}`` - The file name this was called from (may be empty)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:105
#: 413c5636d68944f399a07d3cd95a4a42
msgid "``{time}`` - The time in seconds since the epoch."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:106
#: af3d1df09ee646dbab647764659f41c1
msgid "``{time_as_nanoseconds}`` - The time in nanoseconds since the epoch."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:107
#: a251f66bc08249c98ae5cbd4093b3cc0
msgid "``{line_number}`` - The line number this was called from (may be empty)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:109
#: 821b120ac5dc429e9cb9ae451cdf1e92
msgid ""
"If no format is given, a default of ``[{severity}] [{time}] [{name}]: "
"{message}`` is used."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:113
#: af27911716c04cbc9b62613b4ebddd30
msgid "Node creation"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:115
#: 734753bae29b4237ae9eb440f0889eff
msgid ""
"When initializing a ROS 2 node, it is possible to control some aspects of"
" the behavior via node options. Since these are per-node options, they "
"can be set differently for different nodes even when the nodes are "
"composed into a single process."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:118
#: 7b1293c85e7847d5858a59eba993b7d1
msgid ""
"``log_levels`` - The log level to use for a component within this "
"particular node.  This can be set with the following: ``ros2 run "
"demo_nodes_cpp talker --ros-args --log-level talker:=DEBUG``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:119
#: 1935f0e8feb0423d9d8c6a7a79f6dde1
msgid ""
"``external_log_config_file`` - The external file to use to configure the "
"backend logger.  If it is NULL, the default configuration will be used.  "
"Note that the format of this file is backend-specific (and is currently "
"unimplemented for the default backend logger of spdlog).  This can be set"
" with the following: ``ros2 run demo_nodes_cpp talker --ros-args --log-"
"config-file log-config.txt``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:120
#: ee86be6c1d654b5592b2665fd25e1fb8
msgid ""
"``log_stdout_disabled`` - Whether to disable writing log messages to the "
"console.  This can be done with the following: ``ros2 run demo_nodes_cpp "
"talker --ros-args --disable-stdout-logs``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:121
#: 677ac864c3674bc8a8b67a3bf3372b0f
msgid ""
"``log_rosout_disabled`` - Whether to disable writing log messages out to "
"``/rosout``.  This can significantly save on network bandwidth, but "
"external observers will not be able to monitor logging.  This can be done"
" with the following: ``ros2 run demo_nodes_cpp talker --ros-args "
"--disable-rosout-logs``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:122
#: 5edee5b43eb544c88c1bc2b28d538a2c
msgid ""
"``log_ext_lib_disabled`` - Whether to completely disable the use of an "
"external logger.  This may be faster in some cases, but means that logs "
"will not be written to disk.  This can be done with the following: ``ros2"
" run demo_nodes_cpp talker --ros-args --disable-external-lib-logs``"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:125
#: dfbbabee1dc54547b0faeb2edb8e1073
msgid "Logging subsystem design"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:127
#: 13495fd4ceb5492984787ac92b70bff4
msgid ""
"The image below shows the five main pieces to the logging subsystem and "
"how they interact."
msgstr ""

#: 9031291cc8264f329e74aaa97033e9a0
msgid "ROS 2 logging architecture"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:135
#: 2caa71572f934aa99bbdfed4a1cd3449
msgid "rcutils"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:137
#: c20db7f388d04e3792199220631e0cd2
msgid ""
"``rcutils`` has a logging implementation that can format log messages "
"according to a certain format (see ``Configuration`` above), and output "
"those log messages to a console. ``rcutils`` implements a complete "
"logging solution, but allows higher-level components to insert themselves"
" into the logging infrastructure in a dependency-injection model. This "
"will become more evident when we talk about the ``rcl`` layer below."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:141
#: 27b5d844c14d4c87ada84eb271db2e46
msgid ""
"Note that this is a *per-process* logging implementation, so anything "
"that is configured at this level will affect the entire process, not just"
" individual nodes."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:144
#: 7734828c1ba541f2ba467dcd9ea71a95
msgid "rcl_logging_spdlog"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:146
#: 3811d54300cd475ba49da77d5b12a63c
msgid ""
"``rcl_logging_spdlog`` implements the ``rcl_logging_interface`` API, and "
"thus provides external logging services to the ``rcl`` layer. In "
"particular, the ``rcl_logging_spdlog`` implementation takes formatted log"
" messages and writes them out to log files on disk using the ``spdlog`` "
"library, typically within ``~/.ros/log`` (though this is configurable; "
"see ``Configuration`` above)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:150
#: d7a3c480720b4594b7bfb2e141a31090
msgid "rcl"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:152
#: 3aba6b9934e945cb847539df87f1f2fd
msgid ""
"The logging subsystem in ``rcl`` uses ``rcutils`` and "
"``rcl_logging_spdlog`` to provide the bulk of the ROS 2 logging services."
" When log messages come in, ``rcl`` decides where to send them. There are"
" 3 main places that logging messages can be delivered; an individual node"
" may have any combination of them enabled:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:156
#: 6b70c36a910a4a33ade3df913a6bfc83
msgid "To the console via the ``rcutils`` layer"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:157
#: 38e4ad01131a4dba81eb9edd21b83c91
msgid "To disk via the ``rcl_logging_spdlog`` layer"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:158
#: 8cc4775a450741088fc7f229b05d2695
msgid "To the ``/rosout`` topic on the ROS 2 network via the RMW layer"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:161
#: 58db2dbc94a14bee82a817953ddc3bb2
msgid "rclcpp"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:163
#: c64f4778b54b480b912791aa3466684c
msgid ""
"This is the main ROS 2 C++ API which sits atop the ``rcl`` API. In the "
"context of logging, ``rclcpp`` provides the ``RCLCPP_`` logging macros; "
"see ``APIs`` above for a complete list. When one of the ``RCLCPP_`` "
"macros runs, it checks the current severity level of the node against the"
" severity level of the macro. If the severity level of the macro is "
"greater than or equal to the node severity level, the message will be "
"formatted and output to all of the places that are currently configured. "
"Note that ``rclcpp`` uses a global mutex for log calls, so all logging "
"calls within the same process end up being single-threaded."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:171
#: 21ce1eeac06d4727860f6b0eca938963
msgid "rclpy"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:173
#: 40bba934a0c14438a5ac44cc93ebd7b5
msgid ""
"This is the main ROS 2 Python API which sits atop the ``rcl`` API. In the"
" context of logging, ``rclpy`` provides the ``logger.debug``-style "
"functions; see ``APIs`` above for a complete list. When one of the "
"``logger.debug`` functions runs, it checks the current severity level of "
"the node against the severity level of the macro. If the severity level "
"of the macro is greater than or equal to the node severity level, the "
"message will be formatted and output to all of the places that are "
"currently configured."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:180
#: 00f8678c059c4f26a3d581a0fde0e3be
msgid "Logging usage"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:186
#: 965f1bbdff0140c191b5af473e35f0d4
msgid ""
"See the `rclcpp logging demo "
"<https://github.com/ros2/demos/tree/{REPOS_FILE_BRANCH}/logging_demo>`_ "
"for some simple examples."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:187
#: 0a219c250400415b9f1a0cb8dc84c451
msgid ""
"See the :doc:`logging demo <../../Tutorials/Demos/Logging-and-logger-"
"configuration>` for example usage."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:188
#: 0400a30ba6094d3d9444755cabd1b625
msgid ""
"See the `rclcpp documentation "
"<https://docs.ros2.org/latest/api/rclcpp/logging_8hpp.html>`__ for an "
"extensive list of functionality."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:192
#: 95ee899c2089455a877d4420b43a4967
msgid ""
"See the `rclpy examples "
"<https://github.com/ros2/examples/blob/{REPOS_FILE_BRANCH}/rclpy/services/minimal_client/examples_rclpy_minimal_client/client.py>`__"
" for example usage of a node's logger."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Logging.rst:193
#: 396de805fd8544308009409f91ca8cc4
msgid ""
"See the `rclpy tests "
"<https://github.com/ros2/rclpy/blob/{REPOS_FILE_BRANCH}/rclpy/test/test_logging.py>`__"
" for example usage of keyword arguments (e.g. ``skip_first``, ``once``)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:7
#: 726dfbd7fe1147d38e0b1f36336f8ec6
msgid "Quality of Service settings"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:15
#: f2847ce78d94439997c3cea0b2fe8c03
msgid ""
"ROS 2 offers a rich variety of Quality of Service (QoS) policies that "
"allow you to tune communication between nodes. With the right set of "
"Quality of Service policies, ROS 2 can be as reliable as TCP or as best-"
"effort as UDP, with many, many possible states in between. Unlike ROS 1, "
"which primarily only supported TCP, ROS 2 benefits from the flexibility "
"of the underlying DDS transport in environments with lossy wireless "
"networks where a \"best effort\" policy would be more suitable, or in "
"real-time computing systems where the right Quality of Service profile is"
" needed to meet deadlines."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:19
#: 4b3d9246829d43b2832f60b94d7c3cfc
msgid ""
"A set of QoS \"policies\" combine to form a QoS \"profile\". Given the "
"complexity of choosing the correct QoS policies for a given scenario, ROS"
" 2 provides a set of predefined QoS profiles for common use cases (e.g. "
"sensor data). At the same time, developers are given the flexibility to "
"control specific policies of the QoS profiles."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:23
#: d57cabfdd3c64735ad263c8586fceb9e
msgid ""
"QoS profiles can be specified for publishers, subscriptions, service "
"servers and clients. A QoS profile can be applied independently to each "
"instance of the aforementioned entities, but if different profiles are "
"used, it is possible that they will be incompatible, preventing the "
"delivery of messages."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:28
#: 7a524eaa90ab42a4aedb2fd2bdf55577
msgid "QoS policies"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:30
#: 456f49f2cd714ec29b527f1f173a711c
msgid ""
"The base QoS profile currently includes settings for the following "
"policies:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:32
#: f903032f3e7c4d85a0c003eca7fe3892
msgid "History"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:34
#: 2c071ad987f14ee3a2ccd98b9a73a603
msgid ""
"*Keep last*: only store up to N samples, configurable via the queue depth"
" option."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:35
#: 3a7f0c6464f34397a3acb7443fd4357d
msgid ""
"*Keep all*: store all samples, subject to the configured resource limits "
"of the underlying middleware."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:37
#: 2d5676ab0b6b469fb5af0eec64aef635
msgid "Depth"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:39
#: c54ac4e480a04e8cb3c9a879ccafee2c
msgid ""
"*Queue size*: only honored if the \"history\" policy was set to \"keep "
"last\"."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:41
#: 0c54f4d02b694885bb45116ec310b830
msgid "Reliability"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:43
#: 101ea99b1aa64e228183bbeda5a4cd64
msgid ""
"*Best effort*: attempt to deliver samples, but may lose them if the "
"network is not robust."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:44
#: 15fcef826acf45e3a13c095f31e7d1d7
msgid ""
"*Reliable*: guarantee that samples are delivered, may retry multiple "
"times."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:46
#: ce25bd7f4189484d8d1a08bfbfaf9730
msgid "Durability"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:48
#: f2f3c00cd80d41e6bc7dea87f8267538
msgid ""
"*Transient local*: the publisher becomes responsible for persisting "
"samples for \"late-joining\" subscriptions."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:49
#: 02374795e8084d21af2f5ed6dd8ceb89
msgid "*Volatile*: no attempt is made to persist samples."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:51
#: 5a1f902e108d4388945cfde7f6e2296b
msgid "Deadline"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:53
#: 3d7157ce67ef406595a1c940fcf1bcb3
msgid ""
"*Duration*: the expected maximum amount of time between subsequent "
"messages being published to a topic"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:55
#: f1c45e1a792f41e88e30eca27d75ad56
msgid "Lifespan"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:57
#: 99421a980b2f4b799fb3e8cc30094aad
msgid ""
"*Duration*: the maximum amount of time between the publishing and the "
"reception of a message without the message being considered stale or "
"expired (expired messages are silently dropped and are effectively never "
"received)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:59
#: 668d58ff85ab4966a7f79ea8797571ea
msgid "Liveliness"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:61
#: 05096dd593554225aca0a212e4e9aaaa
msgid ""
"*Automatic*: the system will consider all of the node’s publishers to be "
"alive for another \"lease duration\" when any one of its publishers has "
"published a message."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:62
#: 7637d8dc0bc847b7a724b2adb869a135
msgid ""
"*Manual by topic*: the system will consider the publisher to be alive for"
" another \"lease duration\" if it manually asserts that it is still alive"
" (via a call to the publisher API)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:64
#: bb34b0ff75304b9ba1379a69aa0fac49
msgid "Lease Duration"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:66
#: 5c6e0f6440eb4a11882fcd7b21d4cb6a
msgid ""
"*Duration*: the maximum period of time a publisher has to indicate that "
"it is alive before the system considers it to have lost liveliness "
"(losing liveliness could be an indication of a failure)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:68
#: 6463800c16c447ab98f552a73a9874e4
msgid ""
"For each of the policies that is not a duration, there is also the option"
" of \"system default\", which uses the default of the underlying "
"middleware. For each of the policies that is a duration, there also "
"exists a \"default\" option that means the duration is unspecified, which"
" the underlying middleware will usually interpret as an infinitely long "
"duration."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:74
#: 3b9546cc53bc4a22bd447456f8ec67c9
msgid ""
"The \"history\" and \"depth\" policies in ROS 2 combine to provide "
"functionality akin to the queue size in ROS 1."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:76
#: 0c42bf17906b4370bbc082581ea23401
msgid ""
"The \"reliability\" policy in ROS 2 is akin to the use of either UDPROS "
"(only in ``roscpp``) for \"best effort\", or TCPROS (ROS 1 default) for "
"\"reliable\". Note however that even the reliable policy in ROS 2 is "
"implemented using UDP, which allows for multicasting if appropriate."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:79
#: 5bcf2b12b688436683864e4f87367b03
msgid ""
"The \"durability\" policy \"transient local\", combined with any depth, "
"provides functionality similar to that of \"latching\" publishers. The "
"remaining policies in ROS 2 are not akin to anything that is available in"
" ROS 1, meaning that ROS 2 is more featureful than ROS 1 in this respect."
" It is possible that in the future, even more QoS policies will be "
"available in ROS 2."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:85
#: b86fa28f7815444696753ccf7525fc92
msgid "QoS profiles"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:87
#: 6c7328465af647fbb7a07701bade8dc0
msgid ""
"Profiles allow developers to focus on their applications without worrying"
" about every QoS setting possible. A QoS profile defines a set of "
"policies that are expected to go well together for a particular use case."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:90
#: 133b4768886f4d3fbc3e11365121cc1e
msgid "The currently defined QoS profiles are:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:92
#: 172192e888a34db0809bd8d4c4d9da96
msgid "Default QoS settings for publishers and subscriptions"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:94
#: 87647ef1906a45629d8dec1bad9ba787
msgid ""
"In order to make the transition from ROS 1 to ROS 2 easier, exercising a "
"similar network behavior is desirable. By default, publishers and "
"subscriptions in ROS 2 have \"keep last\" for history with a queue size "
"of 10, \"reliable\" for reliability, \"volatile\" for durability, and "
"\"system default\" for liveliness. Deadline, lifespan, and lease "
"durations are also all set to \"default\"."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:100
#: c21f9d3d0a364ad7814754a0f5b72bbd
msgid ""
"In the same vein as publishers and subscriptions, services are reliable. "
"It is especially important for services to use volatile durability, as "
"otherwise service servers that re-start may receive outdated requests. "
"While the client is protected from receiving multiple responses, the "
"server is not protected from side-effects of receiving the outdated "
"requests."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:104
#: c6a3426a9a85455082a667e0dfd6472b
msgid "Sensor data"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:106
#: 117e1384b1164d88905a5b1d85754ede
msgid ""
"For sensor data, in most cases it’s more important to receive readings in"
" a timely fashion, rather than ensuring that all of them arrive. That is,"
" developers want the latest samples as soon as they are captured, at the "
"expense of maybe losing some. For that reason the sensor data profile "
"uses best effort reliability and a smaller queue size."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:112
#: 00f65f1e1e7e47dbaebd906b7ad186e1
msgid ""
"Parameters in ROS 2 are based on services, and as such have a similar "
"profile. The difference is that parameters use a much larger queue depth "
"so that requests do not get lost when, for example, the parameter client "
"is unable to reach the parameter service server."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:115
#: e3b23f8b26f148b28d5df614f0ed49b6
msgid "System default"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:117
#: bb849b43abf14c95855412f4bfe55d0a
msgid ""
"This uses the RMW implementation’s default values for all of the "
"policies. Different RMW implementations may have different defaults."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:120
#: bd5178f7952a41f9988c7209ab0d795c
msgid ""
"`Click here "
"<https://github.com/ros2/rmw/blob/{REPOS_FILE_BRANCH}/rmw/include/rmw/qos_profiles.h>`__"
" for the specific policies in use for the above profiles. The settings in"
" these profiles are subject to further tweaks, based on the feedback from"
" the community."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:125
#: 73d7782522234886aace9ed0b8bed3c7
msgid "QoS compatibilities"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:127
#: 1b327b7d5f71463d81dfd481bf4af328
msgid ""
"**Note:** This section refers to publishers and subscriptions but the "
"content applies to service servers and clients in the same manner."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:129
#: 77e5ec20915c4232b52e020a5a81b1fe
msgid ""
"QoS profiles may be configured for publishers and subscriptions "
"independently. A connection between a publisher and a subscription is "
"only made if the pair has compatible QoS profiles."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:132
#: 6042904f7aec4761aedeaae62ac12ecb
msgid ""
"QoS profile compatibility is determined based on a \"Request vs Offered\""
" model. Subscriptions *request* a QoS profile that is the \"minimum "
"quality\" that it is willing to accept, and publishers *offer* a QoS "
"profile that is the \"maximum quality\" that it is able to provide. "
"Connections are only made if every policy of the requested QoS profile is"
" not more stringent than that of the offered QoS profile. Multiple "
"subscriptions can be connected to a single publisher simultaneously even "
"if their requested QoS profiles are different. The compatibility between "
"a publisher and a subscription is unaffected by the presence of other "
"publishers and subscriptions."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:138
#: d2087b1ce5854c0381c76b5fe0fe6b77
msgid ""
"The following tables show the compatibility of the different policy "
"settings and the result:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:140
#: 159213b0bc1d47deb84f399a7540626e
msgid "*Compatibility of reliability QoS policies:*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:145
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:166
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:197
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:224
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:247
#: 040e8e8cce324905826f05632e6a7e50 08cd50860f1a49ad89f4394fa111fa97
#: 0db7eb36b2ec4ce0ba04f0a04c9cedc2 7d8364db508942dcbe8d620ce9c48a4e
#: d605b291c2f741c8b9097f0e4a3d8ef3
msgid "Publisher"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:146
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:167
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:198
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:225
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:248
#: 02ccba5424ce406f833f060d27a1d320 06c7b94ef52e4b98b6ebb2822bc4dae3
#: 9de56c3892aa4f9cb0a431644138c9ee b31e25aec0aa47fc92df0918563ac3b6
#: fabd719002c24ea897ac4c7528b24767
msgid "Subscription"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:147
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:168
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:199
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:226
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:249
#: 343b2220592d40c294ac3dfa2e45f808 ace645430cf848b8831946f8c57d3169
#: b2d8061ab4c94a35b65422da37b405a7 d252c1ca1b304a109c95e969a0c85843
#: da231a959887466185420491a6fc53fe
msgid "Compatible"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:148
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:149
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:151
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:155
#: 1af79f1404514918bb207a24bfd4a08b 3f315b81d3074dd997af788607e26a8e
#: 76724b793f6c464190d88949598a5a82 e8cf6fe6536c41529665189ff7d75858
msgid "Best effort"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:150
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:156
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:159
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:172
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:180
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:184
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:202
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:208
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:211
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:214
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:229
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:235
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:238
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:252
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:258
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:261
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:264
#: 0026df670b4849aeb41c1361b25c3eb2 261583744a7c41ce8707a88638a72d31
#: 29d4a22be5d24914a196f581130827ec 553929a837474799858869ebb361050c
#: 58ab5828793b41cb8609e9240e432e0e 5a3d95ab45b54fe49a8515399986c668
#: 73bb7ff799f84d4f9b56e5358f654779 7e6e3b206eee4d53bd27bc0b541d0181
#: 8bcee86ea5cd4cbfa1a3d3bca20bac6d 92a7cdbcbb1b4072805553b81df298bd
#: 9336e2e628fc4fd68d2962651f49bb46 9f0e9d2d508d48bfbe41ad3c1271aa32
#: a3a1fe24855e472fba4f72495177bfc7 d2bee3c2c6ea4a7eb774f6244a3f0bac
#: d74f729e4164412b9b336ec7b50fc77c ee153aa0e195470eb9bfdf6930847512
#: f42bfc61c764470592357f09ed9d0507
msgid "Yes"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:152
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:154
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:157
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:158
#: 0db9436ce53d4fee9fd8f50229fc853e 2fa93b67ff2841c698607b4dfc162795
#: 7ff35f0ca60443f78891f0175390c168 9e1dd215c3e54472b14f1847c1e33395
msgid "Reliable"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:153
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:176
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:205
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:217
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:232
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:255
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:267
#: 073b9dd2d4854463b2720292b8c35369 0e409b65da374725bdb36d9465d498f5
#: 6832bf2aacd3443a90a91b05cd0724b3 b16754fe053146b5b5d9760e7999ab8c
#: bb04c7d8471145f9be314733f149c81e f0f113d3ca51408180ee0cefae29c38f
#: f677c650c9434053a50d712945691ee7
msgid "No"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:161
#: e1301cde9abc42fb9792faf554ea9bf0
msgid "*Compatibility of durability QoS policies:*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:169
#: a889dae6ae5a409192396f61fd5fb05e
msgid "Result"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:170
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:171
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:174
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:179
#: 26a0bd82e237429792e7b1b84686c462 28a716c4530e49e4aa95824e4d1cd9c8
#: 4de61f54ac1d48b6b85355148ea02d13 e8194b4c0c744006b59f1a2069f5b99f
msgid "Volatile"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:173
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:181
#: 0025f46d08314f99bd47c94411e1cd55 92adb9ad3b5d45f8ad196abe87fe0654
msgid "New messages only"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:175
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:178
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:182
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:183
#: d015ee0bd2074ffa84517010e42b0ed5 d343396269f3473388a2baf9e735ab7e
#: f2468e51f1b842bea08fd228b39bfece fba0d0094d7643e687e3215526325f87
msgid "Transient local"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:177
#: d63e6749bcaa4bfa8363db41417dd880
msgid "No communication"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:185
#: 3dc2b8a2ae4e478e8782204197fb1c47
msgid "New and old messages"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:187
#: 306be7d3bb274c7d9d383bd10875d494
msgid ""
"To achieve a \"latched\" topic that is visible to late subscribers, both "
"the publisher and subscriber must agree to use 'Transient Local'."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:190
#: d559d3c9f7bc4436a4ebe53df92a3f66
msgid "*Compatibility of deadline QoS policies:*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:192
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:242
#: 01d806df497b4bd081890865fa6e4963 4c0e27ba24124285954edaba46a5b136
msgid "Assume *x* and *y* are arbitrary valid duration values."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:200
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:201
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:203
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:207
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:250
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:251
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:253
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:257
#: 34de4dd81ba84d54aab236de11f3656d 4751a00e026f499f9d10b21e7c691185
#: 6460a3a3b5214a99bc46eb15f2b9eba7 7cdc9144978c439d8aa92c6053bfd900
#: b1ae2b07b4584c148fbc68c24dd41882 c4edd8ff6e4449afada05437bf90409f
#: cef2563f12a94eafbcc0e4143e1dd9b3 d0de9fa8b2094b999990c82879222ca7
msgid "Default"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:204
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:206
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:209
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:210
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:212
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:215
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:254
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:256
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:259
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:260
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:262
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:265
#: 0b72159c9e07435baf465fe469e95c18 1863f0469b2f4cd694b749cae6602bb4
#: 235139e6702c4bcb9f77067992612da3 4709f57a040a47bbb4d03bcbfde4b5ad
#: 482eb39a7a9d4ddf97de90c6f9436ce9 5a0308e004824d0d9550e3b7d1e27ad6
#: 66d8e6d21ba14d3c86f81c241d7594bc 8c9662520931457e9e2517249fd881fb
#: 9a2fcf48a0434777b227587e7ce27d0d a0ed4e8aa37e4b30acaa035013ee7ced
#: c913907ebb184856af61fff5a2af3c91 d6bdcefcab6d49dfb74cfaca582544e5
msgid "*x*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:213
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:263
#: 0e5ed60c034a413890800a074002f773 a64ee2b5db964796910255a21ccb3bcf
msgid "*y* (where *y* > *x*)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:216
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:266
#: 5b2a080ed984449fa534acf2bea11f95 faefe1abf9684cb4b2b77383bcf224f4
msgid "*y* (where *y* < *x*)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:219
#: 9c3884f0e3874187a1548dfab056c67d
msgid "*Compatibility of liveliness QoS policies:*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:227
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:228
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:230
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:234
#: 0ca5bccd066d42eea346ada4303c4d50 8d19dcbd12de483592ed83791cb1d61a
#: d49a0dd364c4480d89f6652148176e84 e0d79c4cd8374fdbb654f5e43c0a6e23
msgid "Automatic"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:231
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:233
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:236
#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:237
#: 046ce5e1a98d4cf3862d9f92b1acd8f6 68d00dcebd3145bdb2f131a8955c0d93
#: b5cf4bad94214fd4884f3dafcfcc0732 def11aabf96446ad9514cd4f09a52276
msgid "Manual by topic"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:240
#: 3588bb563e844bed93c4cc72c71b824c
msgid "*Compatibility of lease duration QoS policies:*"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:269
#: 1a1e07a4a8084382bbf97b637627acc8
msgid ""
"In order for a connection to be made, all of the policies that affect "
"compatibility must be compatible. For example, even if a requested and "
"offered QoS profile pair has compatible reliability QoS policies, but "
"they have incompatible durability QoS policies, a connection will still "
"not be made."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:272
#: da15bdb1645547c8b73e016198a56ba7
msgid ""
"When connections are not made, no messages will be passed between the "
"publisher and subscription. There are mechanisms to detect this "
"situation, which will be covered in a later section."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:278
#: cab56ccedf724b0683a42136af40add2
msgid ""
"Historically in ROS 1, any publisher and subscriber with the same message"
" type on the same topic would be connected. The possibility of "
"incompatible requested and offered QoS profiles is something new to be "
"aware of when using ROS 2."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:283
#: b0f3636aa435432db25691fbce261e89
msgid "QoS events"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:285
#: 9919c43646b7414e856eb9bd3141c46a
msgid ""
"Some QoS policies have possible events related to them. Developers may "
"provide each publisher and subscription with callback functions that are "
"triggered by these QoS events and handle them in a way they see fit, "
"similar to how messages received on a topic are handled."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:288
#: 1f719a91711045399a51f0a87edc3023
msgid ""
"Developers may subscribe to the following QoS events that are associated "
"with a publisher:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:290
#: d7eb4b4a54ef4b19b0784bb461b55711
msgid "Offered deadline missed"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:292
#: 67a1b8071f884677af0387efcfdcb967
msgid ""
"The publisher has not published a message within the expected duration "
"that was set out by the deadline QoS policy."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:294
#: 705cf941ac304904a4b53e7c1cbd8747
msgid "Liveliness lost"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:296
#: a48a1a5dda244687b7dddb21e275d941
msgid ""
"The publisher has failed to indicate its liveliness within the lease "
"duration."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:298
#: f0f42143a5734fd1bd88d347bdeaa749
msgid "Offered incompatible QoS"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:300
#: 5a9f9155907c4339b2e4f687a6ab0a9c
msgid ""
"The publisher has encountered a subscription on the same topic that is "
"requesting a QoS profile that the offered QoS profile cannot satisfy, "
"resulting in no connection between the publisher and that subscription."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:302
#: 0100525e323c4738aebb5c6032eda943
msgid ""
"Developers may subscribe to the following QoS events that are associated "
"with a subscription:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:304
#: 3f57fba5aff44d75bfb2841f412284ca
msgid "Requested deadline missed"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:306
#: 246bdda056654f6eb5090b4dbcaf7f87
msgid ""
"The subscription has not received a message within the expected duration "
"that was set out by the deadline QoS policy."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:308
#: e5a9c2cd28114c22950fe3a3b3e99546
msgid "Liveliness changed"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:310
#: dfd715d32ed744d38c21b6ee284b909d
msgid ""
"The subscription has noticed that one or more publishers on the "
"subscribed topic has failed to indicate their liveliness within the lease"
" duration."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:312
#: 9ca368d1fc664b3698c7cc0fbf5eb166
msgid "Requested incompatible QoS"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:314
#: 0a51e54cb30544f599c336a2936dca9b
msgid ""
"The subscription has encountered a publisher on the same topic that is "
"offering a QoS profile that does not satisfy the requested QoS profile, "
"resulting in no connection between the subscription and that publisher."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:318
#: cf1a2cc78415495b9be9cbfceeb492e3
msgid "Matched events"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:320
#: 7cc3f334ea3f4bfdaca3777ea3a6c635
msgid ""
"In addition to QoS events, matched events can be generated when any "
"publisher and subscription establishes or drops the connection between "
"them. Developers may provide each publisher and subscription with "
"callback functions that are triggered by matched events and handle them "
"in a way they see fit, similar to how messages received on a topic are "
"handled."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:323
#: 7983e1466b434987823e2ad2945bda16
msgid "Developers can subscribe to this event with a publisher or a subscription."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:325
#: f1a01332baae4d55b9f9f40d5b3df71c
msgid ""
"publisher: this event happens when it finds a subscription which matches "
"the topic and has compatible QoS or a connected subscription is "
"disconnected"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:326
#: af99864307064f07a0b0c844408c470b
msgid ""
"subscription: this event happens when it finds a publisher which matches "
"the topic and has compatible QoS or a connected publisher is disconnected"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:328
#: 2b1ddaeaa6b94ec2ab41b52fc5796541
msgid "There are demos showing how to use the event:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:330
#: 3fae828662f642c79c1fb0ffa3101018
msgid ""
"rclcpp: `demo code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_cpp/src/events/matched_event_detect.cpp>`__"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Quality-of-Service-Settings.rst:331
#: 434c7b9958224b5b8fcbf2e4df2d7533
msgid ""
"rclpy: `demo code "
"<https://github.com/ros2/demos/blob/{REPOS_FILE_BRANCH}/demo_nodes_py/demo_nodes_py/events/matched_event_detect.py>`__"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:8
#: 3128ed80a46c48849c357352aca591c8
msgid "Overview and usage of RQt"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:16
#: 1e17349fe1e149cdb7cabeb76626a6cd
msgid ""
"RQt is a graphical user interface framework that implements various tools"
" and interfaces in the form of plugins. One can run all the existing GUI "
"tools as dockable windows within RQt. The tools can still run in a "
"traditional standalone method, but RQt makes it easier to manage all the "
"various windows in a single screen layout."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:20
#: c11f5d16f1454a0eb1d4b5562854e4a7
msgid "You can run any RQt tools/plugins easily by:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:26
#: 3cf4f9b49243483aadf01413b6c564dc
msgid ""
"This GUI allows you to choose any available plugins on your system. You "
"can also run plugins in standalone windows. For example, RQt Python "
"Console:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:34
#: fbc599d0d30c4f55b2b51cded288b20c
msgid ""
"Users can create their own plugins for RQt with either ``Python`` or "
"``C++``. To see what RQt plugins are available for your system, run:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:41
#: a5ad21197eec459eb67dc6ec4316f3a1
msgid "And then look for packages that start with ``rqt_``."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:44
#: 5e5be97f5e494dcc84e26b8315fe9f3e
msgid "System setup"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:47
#: 199472ac15304eebbcdb199b0f417690
msgid "Installing From Debian"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:55
#: adb0d6c77e344445adbb5f73dfaaaef6
msgid "Building From Source"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:57
#: 4c0e0389e90b48cb826a4fb22ea0f6fc
msgid ""
"See :doc:`Building RQt from Source <../../How-To-Guides/RQt-Source-"
"Install>`."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:60
#: 62c457c8299d48178567f6bb81017762
msgid "RQt Components Structure"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:62
#: 07ac39c682184f9da317bc73f26299f5
msgid "RQt consists of two metapackages:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:64
#: 3619de1d0fe447358392624a2f1c8923
msgid "*rqt* - core infrastucture modules."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:65
#: 0838ee78278545c6aeb8ede4f8a1537b
msgid "*rqt_common_plugins* - Commonly useful debugging tools."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:68
#: a8491015488f41c496723efc4a7f6ffe
msgid "Advantage of RQt framework"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:70
#: 4e7d3989b0a5408db0d5ae0030cf3149
msgid "Compared to building your own GUIs from scratch:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:72
#: 09feca6d9ff24989a9b89ec9977e32d8
msgid ""
"Standardized common procedures for GUI (start-shutdown hook, restore "
"previous states)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:73
#: 4714f41d3175414fb4e3e9fc86c8b464
msgid "Multiple widgets can be docked in a single window."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:74
#: 1674af486cff409e891f2d307f7244fb
msgid "Easily turn your existing Qt widgets into RQt plugins."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:75
#: 9eb9259561cc4944a85c4232669568ae
msgid ""
"Expect support at `ROS Answers <https://answers.ros.org>`__ (ROS "
"community website for the questions)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:77
#: 55d995cdbc224e60be35a3de2b10cfb0
msgid "From system architecture's perspective:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:79
#: 2e4fc6bc99e54279a50930e2255cd7d9
msgid ""
"Support multi-platform (basically wherever `QT <http://qt-"
"project.org/>`__ and ROS run) and multi-language (``Python``, ``C++``)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:80
#: ce54d441399d4d55be4e02bde92b1a53
msgid ""
"Manageable lifecycle: RQt plugins using a common API makes maintainance &"
" reuse easier."
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:84
#: 93ef42ef84104469a3240ec74fe217f1
msgid "Further Reading"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:86
#: 3a8eec2b54894183878e0c2469c005c9
msgid ""
"ROS 2 Discourse `announcement of porting to ROS 2 "
"<https://discourse.ros.org/t/rqt-in-ros2/6428>`__)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:87
#: 966b4177585949a5b0763402cce49fbf
msgid "`RQt for ROS 1 documentation <https://wiki.ros.org/rqt>`__"
msgstr ""

#: ../../source/Concepts/Intermediate/About-RQt.rst:88
#: 631d66c2c7ce4a60b47d0fb64b1205ea
msgid ""
"Brief overview of RQt (from `a Willow Garage intern blog post "
"<http://web.archive.org/web/20130518142837/http://www.willowgarage.com/blog/2012/10/21"
"/ros-gui>`__)"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:6
#: 0bbc634cf5aa41368f9ae36252c610bc
msgid "ROS 2 Security"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:14
#: cc297c5685014ab99e328705f7463413
msgid ""
"ROS 2 includes the ability to secure communications among nodes within "
"the ROS 2 computational graph. Similar to discovery, security happens "
"through the underlying ROS 2 middleware (provided it has support for the "
"corresponding security plugins). No additional software installation is "
"needed to enable security; however, the middleware requires configuration"
" files for each ROS graph participant. These files enable encryption and "
"authentication, and define policies both for individual nodes and for the"
" overall ROS graph. ROS 2 also adds a master \"on/off\" switch to control"
" security behavior."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:20
#: b6962e94989a48e08aed74be9d51b52f
msgid ""
"ROS utilities can create the authoritative `trust anchor "
"<https://en.wikipedia.org/wiki/Trust_anchor>`_ for a ROS application, or "
"an external certificate authority can be used."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:22
#: 2095e24f54c8400aa17a18a80e42feb0
msgid ""
"Built-in ROS 2 security features enable control over communications "
"throughout the ROS graph. This not only allows for encrypting data in "
"transit between ROS domain participants, but also enables authentication "
"of participants sending data, ensures the integrity of data being sent, "
"and enables domain-wide access controls."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:25
#: 4118edf970a54218a1010c13b32a74a3
msgid ""
"ROS 2 security services are provided by the underlying `Data Distribution"
" Service (DDS) <https://www.omg.org/spec/DDS/>`_ which is used for "
"communications between nodes. DDS vendors provide open source and "
"commercial DDS implementations that work with ROS. However, in order to "
"create a specification-compliant implementation of DDS, all vendors must "
"include security plugins as outlined in the `DDS Security Specification "
"<https://www.omg.org/spec/DDS-SECURITY/About-DDS-SECURITY/>`_. ROS "
"security features take advantage of these DDS security plugins to provide"
" policy-based encryption, authentication and access control. DDS and ROS "
"security is enabled through predefined configuration files and "
"environment variables."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:33
#: 34275d16620b4e82b70abf31611f2bb2
msgid "The Security Enclave"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:35
#: 410cd1f033474694880ec5dac9646ab7
msgid ""
"A security enclave encapsulates a single policy for protecting ROS "
"communications. The enclave may set policy for multiple nodes, for an "
"entire ROS graph, or any combination of protected ROS processes and "
"devices. Security enclaves can be flexibly mapped to processes, users, or"
" devices at deployment. Adjusting this default behavior becomes important"
" for optimizing communications and for complex systems. See the ROS 2 "
"Security Enclaves `design document "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ for "
"additional details."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:43
#: 777cc90d69ad453db8c3ed25723abfa7
msgid "Security Files"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:45
#: 0fdcde60c5f2406d83a21aab8ffaf817
msgid ""
"A `ROS 2 security enclave "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ is "
"established with six files as outlined by the DDS specification. Three of"
" these files define an enclave's identity, while three other files define"
" the permissions to be granted to the enclave. All six files reside in a "
"single directory, and nodes launched without a qualified enclave path use"
" files in the default root level enclave."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:50
#: dad9f1258ef8426e80836244ca81efbe
msgid "Enclave Identity"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:52
#: 9ec6903aa59c44d2a35494345339f980
msgid ""
"The Identity Certificate Authority file ``identity_ca.cert.pem`` acts as "
"the trust anchor used to identify participants. Each enclave also holds "
"its unique identifying certificate in the file ``cert.pem``, and the "
"associated private key in the file ``key.pem``. Because the ``cert.pem`` "
"certificate has been signed by identity certificate, when a participant "
"presents this certificate to other domain members, they are able to "
"validate the participant's identity using their own copy of the identity "
"certificate. This valid certificate exchange allows the enclave to "
"securely establish trusted communications with other participants. The "
"enclave does not not share the ``key.pem`` private key, but only uses it "
"for decryption and message signing."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:59
#: 765066940aad41429151b42f781a91c0
msgid "Enclave Permissions"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:61
#: 4ec8a0bf7a7042f6a955cba6f16bb4c7
msgid ""
"The Permissions Certificate Authority file ``permissions_ca.cert.pem`` "
"serves as the trust anchor to grant permissions to security enclaves. "
"This certificate is used to create the signed file ``governance.p7s``, an"
" XML document which defines domain-wide protection policies. Similarly "
"the XML file ``permissions.p7s`` outlines permissions of this particular "
"enclave and has been signed by the Permissions CA. Domain members use a "
"copy of the permissions CA to validate these signed files and grant the "
"requested access."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:66
#: 240a761f9fa1465bbc681010ca5228ee
msgid ""
"Although these two certificate authorities enable separate workflows for "
"identity and permissions, often the same certificate serves as both the "
"identity and the permissions authority."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:69
#: 50e6b2f18f3e4d59a0ec86d1913820cb
msgid "Private Keys"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:71
#: e86bfe1d1de3437289c5aa51e2bec52e
msgid ""
"The identity and permissions certificates also have associated private "
"key files. Add new enclaves to the domain by signing their Certificate "
"Signing Request (CSR) with the identity certificate's private key. "
"Similarly, grant permissions for a new enclave by signing a permissions "
"XML document with the permission certificate's private key."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:77
#: 1d700b1b81d14d889b3c1cae72fdfaf4
msgid "Security Environment Variables"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:79
#: f101889557174a6698c11cf9c4b87802
msgid ""
"The environment variable ``ROS_SECURITY_ENABLE`` acts as the enclave's "
"master \"on/off\" switch for ROS 2 security features. Security has been "
"turned off by default, so security features will not be enabled even when"
" the proper security files are present. In order to enable ROS 2 "
"security, set this environment variable to ``true`` (case sensitive)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:83
#: d71db381877648df89d46366815fde02
msgid ""
"Once security has been enabled, the environment variable "
"``ROS_SECURITY_STRATEGY`` defines how domain participants handle problems"
" when launching participants. Security features depend on certificates "
"and properly signed configuration files, yet by default, an improperly "
"configured participant will still launch successfully but without "
"security features. In order to enforce strict compliance with security "
"settings and fail to launch non-compliant enclaves, set this environment "
"variable to ``Enforce`` (case sensitive)."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:87
#: 3c1439ab5f934d65be5fd3109782fdb3
msgid ""
"Additional security-related environment variables can be found in the "
"`ROS 2 DDS-Security Integration design document "
"<https://design.ros2.org/articles/ros2_dds_security.html>`_. These "
"variables generally assist ROS in managing enclaves and locating the "
"security files."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:92
#: 90a31ad56f1946f59ba5f9894e8913ad
msgid "Learn More"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Security.rst:94
#: 52375c160a064572a0ef73a6612e8686
msgid ""
"For more information and hands-on exercises enabling ROS 2 communications"
" security, see the :doc:`../../Tutorials/Advanced/Security/Introducing-"
"ros2-security`."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:6
#: 70b6e6db8b1c421d985bac1465c05937
msgid "Tf2"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:14
#: bf785c9dfa19433fb2a5e81f499b6fd5
msgid ""
"tf2 is the transform library, which lets the user keep track of multiple "
"coordinate frames over time. tf2 maintains the relationship between "
"coordinate frames in a tree structure buffered in time and lets the user "
"transform points, vectors, etc. between any two coordinate frames at any "
"desired point in time."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:20
#: 80d90008cb6f4a198e2b6a82edbfff02
msgid "Properties of tf2"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:22
#: 22227049b7da46e9aeb7b4cd7e90ac15
msgid ""
"A robotic system typically has many 3D coordinate frames that change over"
" time, such as a world frame, base frame, gripper frame, head frame, etc."
" tf2 keeps track of all these frames over time, and allows you to ask "
"questions like:"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:25
#: fc2d0b1d99cd4b92bf72e93b3a1b7ad3
msgid "Where was the head frame relative to the world frame 5 seconds ago?"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:26
#: 869a470aae5240e88bdc26594235b515
msgid "What is the pose of the object in my gripper relative to my base?"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:27
#: 81a47775f1864e16a577cc972973f35e
msgid "What is the current pose of the base frame in the map frame?"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:29
#: 73f3263411404ede8b2c50d6643a8be6
msgid ""
"tf2 can operate in a distributed system. This means all the information "
"about the coordinate frames of a robot is available to all ROS 2 "
"components on any computer in the system. tf2 can have every component in"
" your distributed system build its own transform information database or "
"have a central node that gathers and stores all transform information."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:34
#: 3eeccd88e9104226b528a4323a33379b
msgid "Tutorials"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:36
#: 4172ac0b77e64eb8a0e404c92dd037c6
msgid ""
"We created a set of :doc:`tutorials "
"<../../Tutorials/Intermediate/Tf2/Tf2-Main>` that walks you through using"
" tf2, step by step. You can get started on the :doc:`introduction to tf2 "
"<../../Tutorials/Intermediate/Tf2/Introduction-To-Tf2>` tutorial. For a "
"complete list of all tf2 and tf2-related tutorials check out the "
":doc:`tutorials <../../Tutorials/Intermediate/Tf2/Tf2-Main>` page."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:40
#: 2ee06940200448e6a6fdd6967e5f4792
msgid ""
"There are essentially two main tasks that any user would use tf2 for, "
"listening for transforms and broadcasting transforms."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:42
#: 83dab49f676b44c38b1714bd1b6354b5
msgid ""
"If you want to use tf2 to transform between coordinate frames, your nodes"
" will need to listen for transforms. What you will do is receive and "
"buffer all coordinate frames that are broadcasted in the system, and "
"query for specific transforms between frames. Check out the \"Writing a "
"listener\" tutorial :doc:`(Python) "
"<../../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py>` :doc:`(C++)"
" <../../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Cpp>` to learn "
"more."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:46
#: b0b36ddc5b8843c7b0093b3190854265
msgid ""
"To extend the capabilities of a robot, you will need to start "
"broadcasting transforms. Broadcasting transforms means to send out the "
"relative pose of coordinate frames to the rest of the system. A system "
"can have many broadcasters that each provide information about a "
"different part of the robot. Check out the \"Writing a broadcaster\" "
"tutorial :doc:`(Python) <../../Tutorials/Intermediate/Tf2/Writing-A-Tf2"
"-Broadcaster-Py>` :doc:`(C++) "
"<../../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp>` to "
"learn more."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:51
#: 46690f22696748008101ffb20f224a45
msgid ""
"In addition to that, tf2 can broadcast static transforms that do not "
"change over time. This mainly saves storage and lookup time, but also "
"reduces the publishing overhead. You should note that static transforms "
"are published once and assumed to not change, so no history is stored. If"
" you want to define static transforms in your tf2 tree, take a look at "
"the \"Writing a static broadcaster\" :doc:`(Python) "
"<../../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py>` "
":doc:`(C++) <../../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-"
"Broadcaster-Cpp>` tutorial."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:56
#: bad9d9c9170c4bf8bdb5197ec0aeddf0
msgid ""
"You can also learn how to add fixed and dynamic frames to your tf2 tree "
"in the \"Adding a frame\" :doc:`(Python) "
"<../../Tutorials/Intermediate/Tf2/Adding-A-Frame-Py>` :doc:`(C++) "
"<../../Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp>` tutorial."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:58
#: 58b3330b0d874173bb6a0bb3c87798dc
msgid ""
"Once you are finished with the basic tutorials, you can move on to learn "
"about tf2 and time. The tf2 and time tutorial :doc:`(Python) "
"<../../Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py>` "
":doc:`(C++) <../../Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-"
"Time-Cpp>` teaches the basic principles of tf2 and time. The advanced "
"tutorial about tf2 and time :doc:`(Python) "
"<../../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py>` :doc:`(C++) "
"<../../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp>` teaches the "
"principles of time traveling with tf2."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:63
#: 359858aef8254bbe89b7e57467b87331
msgid "Paper"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Tf2.rst:65
#: 2aaf70fc2d4347f295bf97a36a3a3f9e
msgid ""
"There is a paper on tf2 presented at TePRA 2013: `tf: The transform "
"library <https://ieeexplore.ieee.org/abstract/document/6556373>`_."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:7
#: b231b737270c4721ab63c0b04a3665c9
msgid "Topic statistics"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:15
#: aa4d2239acb54524b2ed6e0a9f240ceb
msgid ""
"ROS 2 provides integrated measurement of statistics for messages received"
" by any subscription. Allowing a user to collect subscription statistics "
"enables them to characterize the performance of their system or aid in "
"diagnosis of any present issues."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:18
#: 8f154630011143a0883fc23eca7b9eb2
msgid ""
"The measurements provided are the received message age and received "
"message period. For each measurement the statistics provided are the "
"average, maximum, minimum, standard deviation, and sample count. These "
"statistics are calculated in a moving window."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:23
#: 1eb4142f3d9043be96311ca0b801c891
msgid "How statistics are calculated"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:25
#: 9f424d425528419797cdaca596446787
msgid ""
"Each statistic set is calculated in constant time and constant memory by "
"using the utilities implemented in the `libstatistics_collector "
"<https://github.com/ros-tooling/libstatistics_collector>`__ package. When"
" a new message is received by a subscription, this is a new sample for "
"calculation in the current measurement window. The average calculated is "
"simply a `moving average "
"<https://en.wikipedia.org/wiki/Moving_average>`__. The maximum, minimum, "
"and sample count are updated upon receipt of each new sample, whereas the"
" standard deviation is calculated using `Welford's online algorithm "
"<https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm>`__."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:31
#: e4150ab03e554a81a301f54c6fe44264
msgid "Types of statistics calculated"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:33
#: cafdb24552154504b227ab2ad2a640b0
msgid "Received message period"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:35
#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:40
#: 9e596a19fe1e4a6f8dac4f96d76b029c c9af9b755a4645c6937647e32dc463c8
msgid "Units: milliseconds"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:36
#: dbac1ddb093445aa98a1788ce43b32ea
msgid "Uses the system clock to measure the period between received messages"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:38
#: 446bb5f1058541d1bc69d11087d0f724
msgid "Received message age"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:41
#: cdff8abb29db49dfb28efb297dd91b21
msgid ""
"Requires a message to have a timestamp populated in the header field in "
"order to calculate the age of the message as sent from a publisher"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:44
#: fd0ebe9316264beea831baaf594ef0a2
msgid "Behavior"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:46
#: 03ba0ef66c974aa5b5ed7ae58612f0b0
msgid ""
"By default, Topic Statistics measurements are not enabled. After enabling"
" this feature for a specific node via the subscription configuration "
"options, both received message age and received message period "
"measurements are enabled for that specific subscription."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:49
#: a486f1b2277d484e86aa14c5b65c76ec
msgid ""
"The data is published as a `statistics_msg/msg/MetricsMessage "
"<https://github.com/ros2/rcl_interfaces/blob/{REPOS_FILE_BRANCH}/statistics_msgs/msg/MetricsMessage.msg>`__"
" at a configurable period (default 1 second) to a configurable topic "
"(default ``/statistics``). Note that the publishing period also serves as"
" the sample collection window period."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:53
#: 484cd933d3e94605a05e822a33ec3073
msgid ""
"Since received message period requires a message timestamp in a header "
"field, empty data is published. That is, all statistics values are NaN if"
" no timestamp is found. Publishing NaN values instead of not publishing "
"at all avoids the absence of a signal problem and is meant to explicitly "
"show that a measurement could not be made."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:57
#: 31a39a8257b5461f9c9cec9614ec8d0b
msgid ""
"The first sample of each window for the received message period statistic"
" does not yield a measurement. This is because calculating this statistic"
" requires knowing the time the previous message arrived, so subsequent "
"samples in the window yield measurements."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:63
#: 313a991a17a846f8aad54d7a606c1b73
msgid ""
"Similar to ROS 1 `Topic Statistics "
"<https://wiki.ros.org/Topics#Topic_statistics>`__, both message age and "
"message period are calculated, albeit from the subscription side. Other "
"ROS 1 metrics, e.g., the number of dropped messages or traffic volume, "
"are currently not provided."
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:67
#: dd2f9c1fe79b472384b40a5a87cb8f5b
msgid "Support"
msgstr ""

#: ../../source/Concepts/Intermediate/About-Topic-Statistics.rst:69
#: e3e8fa59edc24d43a9ff872e26820f52
msgid ""
"This feature is currently supported in ROS 2 Foxy for C++ only (rclcpp). "
"Future work and improvements, such as Python support, can be found `here "
"<https://github.com/ros2/ros2/issues/917>`__."
msgstr ""

